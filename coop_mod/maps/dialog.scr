//-----------------------------------------------------------------------------------
// Script By:	Christian Sebastian Strahl (Chrissstrahl)
// Created on:	2007.10.4
// E-Mail:		chrissstrahl@yahoo.de
// Organisation:	HaZardModding
//
// CONTAINING DIALOG RELATED FUNCTIONS FOR THE HZM CO-OP MOD

//HAZARDMODDING CO-OP SCRIPT MODIFICATION ©2006-2012 SOME RIGHTS RESERVED AND
//(IP)INTELLECTUAL PROPERTY HELD BY CHRISTIAN SEBASTIAN STRAHL, ALIAS CHRISSSTRAHL.

//YOU ARE EXPLICITE FORBIDDEN TO USE/MODIFIE/REDISTRIBUTE/REPLICATE/RELEASE/REBUILD/COPY
//ANY MATERIALS OR INTELLECTUAL PROPERTY OF THIS FILE WITHOUT THE EXPLICIT
//WRITTEN PERMISSION OF THE RESPECTIVE OWNERS!

//
//CONTACT: chrissstrahl@yahoo.de [Christian Sebastian Strahl, Germany]
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

//Dialog stuff
//m4 - one to beam ?
//borg02/munro_3tobeam.mp3 - 3 to beam
//borg02/munro_4tobeam.mp3 - 4 to beam
//dallas02/munro_leavem3.mp3 - Munro to enterprise, ready to beamup
//borg02/munro_stayhere.mp3 - Stay here it could be a trap
//borg01/munro_goodj1.mp3 - Good Job
//borg01/munro_status.mp3 - Status
//borg03/munro_logical.mp3 - That's not logical
//combat/munro_ nice.mp3 - Nice!
//combat/munro_Oooo.mp3 - Ohhhhhhhhhha - Sounds like he's enjoying something very well ^^
//combat/munro_wow.mp3 - Wow !!
//dallas01/munro_stayhere2.mp3 - You stay here, I'm taking this jefry tube
//dallas01/munro_toent.mp3 - Munro to enterprise
//dallas01/munro_yessir2.mp3 - Yes Sir, Munro Out.
//ent_m1/munro_ayesir.mp3 - Understoud, Sir!
//ent_m1/munro_glad.mp3 - I'm glad to be here, Sir!
//dallas02/munro_anothduct.mp3 - Another jefry tube, you say here, I chek it out
//dallas02/munro_clever.mp3 - very Clever (not ironic)
//dallas02/munro_contact.mp3 - I'll contat the engine Room
//dallas02/munro_damn.mp3 - Damn!
//ent_m1/munro_hello.mp3 - Hello
//ent_m1/munro_hey2.mp3 - Hey!
//ent_m1/munro_hey3.mp3 - Hey!
//ent_m1/munro_hi1.mp3 - Hi...
//ent_m1/munro_letdown.mp3 - We won't let you down , Sir
//ent_m1/munro_thanks4.mp3 - Danke
//ent_m1/munro_thanksir.mp3 - Danke, Sir
//ent_m1/munro_yessir.mp3 - Yes, Sir
//ent_m6/munro_ayesir7.mp3 - Yes, Sir
//ent_m2/munro_captain1.mp3 - Captain...
//ent_m2/munro_commander.mp3 - Commander...
//ent_m2/munro_sir.mp3 - Sir...
//ent_m2/munro_sir2.mp3 - Sir...
//ent_m2/munro_thanksir3.mp3 - Thanks, Sir
//ent_m3/munro_onway2.mp3 - On my Way
//ent_m3/munro_goodpoint.mp3 - Good Point
//ent_m3/munro_well.mp3 - Call me alex
//ent_m6/munro_goahead.mp3 - Go ahead (Sprechen Sie)
//ent_m6/munro_ofwhat.mp3 - Afraid, of what ?
//ent_m6/munro_onmyway3.mp3 - On my way
//ent_m6/munro_soundgood.mp3 - Sounds Good
//ent_m6/munro_soundgood2.mp3 - Sounds Good
//ent_m6/munro_ithink.mp3 - Sir, I think I can do that
//ent_m6/munro_nicebus.mp3 - Nice doing buissnes with you.
//ent_m6/munro_ohi.mp3 - (Oh ich habe durch aus einen geschäftssinn)
//ent_m6/munro_started.mp3 - Let's get started
//ent_m8/munro_dead.mp3 - He didn't make it
//ent_m8/munro_goodman.mp3 - He was a good officer and a (tapferer) Man.
//m10l1/munro_easy.mp3 - Sounds easy
//m10l1/munro_hereyouare.mp3 - Here you are. (Hier Bitte)
//m10l1/munro_howdoi.mp3 - How do I do that ?
//m10l2/munro_nicetrick.mp3 - Nice Trick
//m10l2/munro_niceweap.mp3 - Nice Weapon *angry*
//m10l2/munro_thank.mp3 - Thanks *Ironic*
//m10l2/munro_toobad2.mp3 - To bad you still miss the target
//m10l2/munro_whatifd.mp3 - What happans if i get Discovered?
//m11l1/munro_letrip.mp3 - (Feuer frei!)
//m11l1/munro_looksbad.mp3 - That looks bad, we have to get you outa here.
//m11l1/munro_object.mp3 - Munro to enterprise we are heading for teh Mission objective
//m11l1/munro_painted.mp3 - Target painted
//m11l1/munro_unpainted.mp3 - (Markierung aufgehoben)
//m11l1/

//
//ent_m1/munro_ex1.mp3 - Excuse me (soft)
//ent_m1/munro_ex2.mp3 - Excuse me (hard)
//
//ent_m1/munro_deck1.mp3 - Deck1
//ent_m1/munro_deck16.mp3 - Deck 16
//ent_m1/munro_deck7.mp3 - Deck 7
//ent_m1/munro_deck8.mp3 - Deck 8


// void globalCoop_dialog_play_contextChell()
// {
	// entity eActor;
	// eActor = getCurrentEntity();
	// if(doesEntityExist(eActor))
	// {
		// globalCoop_dialog_play_context(eActor,"chell");
	// }
// }
// void globalCoop_dialog_play_context(entity eActor,string sActorName)
// {
	// string	sCombatDiag;
	// float	fRadom;
	// fRadom = randomint(10);
	// if(0){sCombatDiag = "_anotone-3.mp3";}
	// if(1){sCombatDiag = "_lookout-3.mp3";}
	// if(2){sCombatDiag = "_overthere-3.mp3";}
	// if(3){sCombatDiag = "_wevegot-3.mp3";}
	// if(4){sCombatDiag = "_incoming-3.mp3";}
	// if(5){sCombatDiag = "_espotted-3.mp3";}
	// if(6){sCombatDiag = "_herecome-3.mp3";}
	// if(7){sCombatDiag = "_headsup-3.mp3";}
	// if(8){sCombatDiag = "_herewego-3.mp3";}
	// if(9){sCombatDiag = "_contacts-3.mp3";}
	// eActor.playdialog("sound/dialog/combat/"+sActorName+sCombatDiag);
// }

void globalCoop_dialog_play(entity e, string dialogToPlay, float dialogVolume, float dialogMinRange,float fDialogHead)
//----------------------------------------------------------------------
//Plays a dialog on an Player/Entity
//----------------------------------------------------------------------
{

//EXIT IF ENTITY IS MISSING
	if(!doesEntityExist(e)){
		centerprint("^5DIALOG |^1FAILD!,^5 "+dialogToPlay+", ^1EXIT->DIALOG\n");
		return;
	}
	e.setFloatVar("globalCoop_dialogActive",1);
//Create stringvar, we gona use that one internal, so it can't become overwritten like the global one
	string sRawTargetname;
	sRawTargetname = e.getRawTargetname();
//IF PLAYER, LET MUNRO TALK, PLAYER DOES NOT TALK IN SP!
	if(!cvar_bool_multiplayer)
	{
		if(sRawTargetname == "player")
		{
			sRawTargetname	= "munro";
			e=$munro;
			if(!doesEntityExist(e))
				e=$Munro;
		}
	}
//REMOVE PREVIOUSE HUD, BEFORE TEH GLOBAL VAR GETS OVERWRITTEN!
	else
	{
//do not allow more than 3 dialogs at once, otherwise the new dialog does not work
// float fIndex,fShutUp;
// string sShutUp;

// fIndex = getFloatVar("level.globalCoop_dialog_play_index");
// if(fIndex > 3)
// {
// fShutUp = (fIndex - 1);
// sShutUp = getStringVar("level.globalCoop_dialog_play_speakerName"+fShutUp);		
// globalCoop_dialog_stop(getEntity(sShutUp));			
// }

// fShutUp++;
// setFloatVar("level.globalCoop_dialog_play_index",fShutUp);
// setStringVar("level.globalCoop_dialog_play_speakerName"+fShutUp,sRawTargetname);
	
	//remove old head hud, set new one
		if(fDialogHead == 1)
		{
			if(coop_string_dialogNameOfSpeaker != "")
			{
				thread globalCoop_huds_RemoveAll("coop_head_"+coop_string_dialogNameOfSpeaker);
			}
			thread globalCoop_huds_AddAll("coop_head_"+sRawTargetname);
		}
	}
//Update global variable
	coop_string_dialogNameOfSpeaker = sRawTargetname;
//DO PLAY THE DIALOG IF THE MISSION HAS NOT BEEN FAILED
	if($world.getFloatVar("globalCoop_mission_failWithReason_isRunning") != 1){
//PRINT STATUS
		globalCoop_main_printTimeAndString("DIALOG |$"+sRawTargetname+" - "+dialogToPlay+","+dialogVolume+","+dialogMinRange+","+fDialogHead);
//MAKE GLOBAL AVIALABE
		coop_entity_dialogSpeaker = e;
//STOP PREVIOUSE DIALOGS OF CURRENT ENTITY
		e.stopDialog();
//MULTI-PLAYER DIALOG //////////////////////////////////////////////////////////
		if(cvar_bool_multiplayer){
//CORRECT VOLUME, DONT WISPER, AND DON'T SHOUT
			if(dialogVolume < 1.5 || dialogVolume > 5){
				dialogVolume = 1.5;
			}
//select langauges and add delay (german dialogs are longer)
			float	fDialogEndDelay = 1.2;
			float	fLanguageToCheck;
			string	sDialogSimplePath;
			
			if(cvar_string_localLanguage == "Deu")
			{
				fLanguageToCheck 	= coop_vector_playerLanguage_x;//check english
				fDialogEndDelay		= .6;
				sDialogSimplePath	= "loc/Eng/sound/dialog/";
			}
			else
			{
				fLanguageToCheck  = coop_vector_playerLanguage_y;//check german
				sDialogSimplePath = "loc/Deu/sound/dialog/";
			}			
//IF ENTITY IS A PLAYER, ADD 'You are currently speaking hud'
			fDialogHead = globalCoop_return_integerPlayerId(e);
			if(fDialogHead > -1 || e.getHealth() <= 0){
				e.addHud("coop_speaking");
				thread globalCoop_dialog_playSimple(e,dialogToPlay,dialogVolume,dialogMinRange);
			}
			else
			{
//LET THE AI KNOW TAHT IT DOES PLAY A DIALOG...
				e.settendency("dialog",1);
				//shows hud only for cient 0
				//e.playDialog(coop_string_dialogPath+""+dialogToPlay,dialogVolume,dialogMinRange,1,1,"",$player1);
				e.playDialog(coop_string_dialogPath+dialogToPlay, dialogVolume, dialogMinRange,0);
				if(coop_float_dialogLocalized)
				{
				//if
				// - player language could not be detected
				// - player language english AND german are both on the server	
					if(coop_vector_playerLanguage_z != 0 || fLanguageToCheck != 0)
					{
						e.simplePlayDialog(sDialogSimplePath+dialogToPlay, dialogVolume, dialogMinRange);
					}
				}
			}
//WAIT FOR DIALOG TO END, PLUS ADDITIONAL DELAY, Beate THE NATIVE INSTALLATION FILES, CUZ THEY DO NOT HAVE THE OTHER LANGUGE TO READ THE FILE
			waitDialogLength(coop_string_dialogPath+dialogToPlay);
			wait(fDialogEndDelay);
//IF ENTITY STILL EXISTS
			if(doesEntityExist(e))
			{
				e.settendency("dialog",0);
				e.setFloatVar("globalCoop_dialogActive",0);
				if(fDialogHead > -1)
				{
					thread globalCoop_huds_Remove(e,"coop_speaking");
				}
			}
//REMOVE HUD AGAIN
			thread globalCoop_huds_RemoveAll("coop_head_"+sRawTargetname);
		}
//SINGLEPLAYER DIALOG //////////////////////////////////////////////////////////
		else{
			e.playDialog(coop_string_dialogPath+""+dialogToPlay,dialogVolume,dialogMinRange,fDialogHead);
			waitForDialog(e);
		}
	}
}


void globalCoop_dialog_waitForDialog(entity e)
//----------------------------------------------------------------------
//Waits for the dialog to end, use this function for replacment of
//waitfordialog(e) in cinematic and such. Do NOT use it to play dialogs in line
//there for you just call 'globalCoop_dialog_play(xxx,xxx,xxx,xxx,xxx);'
//this will wait until 'globalCoop_dialog_play' ends, which is as soon
//as the dialog currently playing ends.
//----------------------------------------------------------------------
{
 	if(doesEntityExist(e)){
		globalCoop_main_printTimeAndString("WAITFORDIALOG |"+e.getTargetname());
		//globalCoop_main_waitAFrame();//wait for the float var to be set
//MULTIPLAYER
		if(cvar_bool_multiplayer){
			while(doesEntityExist(e))
			{
				globalCoop_main_waitZeroDot2();//moved here build 16
				if(e.getFloatVar("globalCoop_dialogActive") != 1){
					return;
				}
			}
		}
//SINGLEPLAYER
		else{
			waitfordialog(e);
		}
	}
}


string globalCoop_dialog_returnCharName(entity e)
//----------------------------------------------------------------------
//Returns the char it's name
//----------------------------------------------------------------------
{
	coop_string_dialogNameOfSpeaker = "";
	if(doesEntityExist(e))
	{
		coop_string_dialogNameOfSpeaker	= ""+e.getRawTargetname();//bugfix
	}
	return coop_string_dialogNameOfSpeaker;
}


void globalCoop_dialog_playSimple(entity e, string dialogToPlay, float dialogVolume, float dialogMinRange)
//----------------------------------------------------------------------
//Play a simple dialog, in english and german
//----------------------------------------------------------------------
{
	if(doesEntityExist(e))
	{
		string sDialogPath;
		if(coop_float_dialogLocalized)
		{
			sDialogPath = "loc/Eng/sound/dialog/";
			if(cvar_string_localLanguage == "Deu")
			{
				sDialogPath = "loc/Eng/sound/dialog/";
			}
			e.simplePlayDialog(sDialogPath+dialogToPlay, dialogVolume, dialogMinRange);
		}
		e.simplePlayDialog(coop_string_dialogPath+dialogToPlay, dialogVolume, dialogMinRange);
	}
}


void globalCoop_dialog_stop(entity eShutup)
//----------------------------------------------------------------------
//STops the dialog at the given entity
//----------------------------------------------------------------------
{
	if(doesEntityExist(eShutup))
	{
		//if(eShutup.getFloatVar("globalCoop_dialogActive"))
		//{
			eShutup.stopdialog();
			//eShutup.setFloatVar("globalCoop_dialogActive",0)
		//}
	}
}


void globalCoop_dialog_stopAll()
//----------------------------------------------------------------------
//Makes all players to become silence after the NPCs
//----------------------------------------------------------------------
{
//Bring every NonePlayerCaracter to silence!!!
	killalldialog();
//Now make the current/previouse dialog speaker silent
	globalCoop_dialog_stop(coop_entity_dialogSpeaker);
}


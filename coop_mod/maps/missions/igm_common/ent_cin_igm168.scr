// Script/Cameras by Jared Hefty

void cinematicEntIntroIGM1 ();
void cinematicEntIntroIGM1End ();

void cinematicEntIntroIGM6 ();
void cinematicEntIntroIGM6End ();

void cinematicEntIntroIGM8 ();
void cinematicEntIntroIGM8End ();

void initCinematicEntIntro( float IGM );

float IGMCinematicDone = 0;

void IntroEntIntroWhile()
{
	while ( !IGMCinematicDone )
	{
		wait ( .25 );
	}
	$entSkyOrigin.origin( $sky.getorigin() );
}


void Intro1 ()
{
	globalCoop_main_waitForWarmupTime();
	initCinematicEntIntro( 1 );
	thread cinematicEntIntroIGM1 ();
	IntroEntIntroWhile();
}

void Intro6 ()
{
	globalCoop_cin_start();
	initCinematicEntIntro ( 6 );
	thread cinematicEntIntroIGM6 ();
	IntroEntIntroWhile();
}

void Intro8 ()
{
	initCinematicEntIntro ( 8 );
	thread cinematicEntIntroIGM8 ();
	IntroEntIntroWhile();
}

void initCinematicEntIntro ( float IGM )
{
	//align the saucer more precisely than we can in radiant
	$entSaucer.origin ( $entBody.getorigin ());
	$entNacelles.origin ( $entBody.getorigin ());

	//this stuff will always happens, regardless of IGM

	$entSaucer.bind   ( $entOrigin );
	$entBody.bind     ( $entOrigin );
	$entNacelles.bind ( $entOrigin );

	$sky.rendereffects( "-skyorigin" );
	$entSkyOrigin.rendereffects ( "+skyorigin" );

	//spawn and move things around as appropriate
	//we spawn stuff to avoid precaching large amounts of unneeded textures

	wait ( .1 );

	if ( IGM == 1 )
	{
		$entOrigin.origin ( '13168 -13248 1024' );
		//eek, I have to do this (and only for this case, no less) so that the bound models center themselves back around entOrigin...why, I do not know, but it works
		//useful fact: entity origins become relative to their bind origin
		$entSaucer.origin ( '0 0 0' );
		$entBody.origin ( '0 0 0' );
		$entNacelles.origin ( '0 0 0' );

		spawn ( "sky_planet_earth_highres" , "origin" , "13116.00 -12048.00 1056.00" , "targetname" , "earth" , "model" , "sky/sky_earth-high.tik" );
		spawn ( "sky_planet_moon_midres" , "model" , "sky/sky_moon-med.tik" , "origin" , "14306.00 -12072.00 968.00" , "targetname" , "moon" );

		//backdrop
		spawn ( "sky_skybox_stardome-black" , "model" , "sky/sky_stardome-black.tik" , "origin" , "15680.00 -12800.00 1024.00" , "angles" , "0 -49 89");

		wait ( .1 );

		$earth.scale ( 6 );
		$earth.angle ( 80.0 );

		$moon.scale ( .5 );
	}
	else if ( IGM == 6 )
	{
		$entOrigin.origin ( '13088 -12868 936' );

		//backdrop
		spawn ( "sky_skybox_brecha-rift" , "scale" , "5" , "origin" , "15680.00 -12784.00 1024.00" , "model" , "sky/sky_brecha-rift.tik" );
		spawn ( "sky_planet_m8-swamp_highres" , "origin" , "13192.00 -12280.00 896.00" , "scale" , "4" , "model" , "sky/sky_planet_industrial-high.tik" );

		//drull shuttle
		spawn ( "script_origin" , "targetname" , "drullShuttleOrigin" , "origin" , "13138 -12978 964" );
		spawn ( "script_model" , "model" , "vehicle/drull-shuttle-ext.tik" , "scale" , ".005" , "targetname" , "drullShuttle" );
		spawn ( "script_model" , "model" , "vehicle/drull-shuttle-int.tik" , "scale" , ".005" , "targetname" , "drullShuttleInt" );
		wait ( .1 );

		$drullShuttleInt.origin( '13137.79 -12978.20 962.93' );
		wait( .25 );
		//$drullShuttle.origin ( $drullShuttleInt.getorigin() );

		$drullShuttle.origin ( '13137.79 -12978.20 962.93' );


		wait( .1 );
		$drullShuttleInt.bind ( $drullShuttleOrigin );
		$drullShuttle.bind ( $drullShuttleOrigin );
	}
	else if ( IGM == 8 )
	{
		$entOrigin.origin ( '12456 -12980 1392' );

		//backdrop
		spawn ( "sky_skybox_stardome-black" , "model" , "sky/sky_stardome-black.tik" , "origin" , "15680.00 -12800.00 1024.00" );
		spawn ( "sky_planet_m10-ice_highres" , "origin" , "12808.00 -12456.00 1416.00" , "model" , "sky/sky_planet_ice-high.tik" , "targetname" , "icePlanet" );
		wait ( .1 );
		//additional parameters
		$icePlanet.scale ( 2.0 );
		$icePlanet.angle ( 270.0 );
	}
}

void cinematicEntIntroIGM1()
{
	spawn ( "Camera" , "targetname" , "entIntroCam" );
	cam.load ( "igm1_EntIntro" );
	wait ( .1 );
	globalCoop_cin_skipThread ( "cinematicEntIntroIGM1End" );
 	globalCoop_cin_follow($entIntroCam,$igm1_EntIntro);
	globalCoop_cin_fov($entIntroCam,65);
	globalCoop_cin_cut($entIntroCam);
	globalCoop_cin_cuecamera($entIntroCam);
	globalCoop_main_wait1DotZero();
	globalCoop_main_camFadeIn(1);
	allowMusicDucking (0);
	music ( "aux4" );
	
	globalCoop_main_waitZeroDot2();
	stuffcmd ( "locationprint 0 70 \"$$IGM1Stardate$$\" 10.0\n" );
	wait ( 20 );

	thread cinematicEntIntroIGM1End ();
}

void cinematicEntIntroIGM1End ()
{
	globalCoop_main_camFadeOut(1);
	globalCoop_main_wait1DotZero();

	killthread ( "cinematicEntIntroIGM1" );
	globalCoop_main_wait1DotZero();
	allowMusicDucking (1);
	music ( "normal" );
	IGMCinematicDone = 1;
}

void cinematicEntIntroIGM6 ()
{
	spawn ( "Camera" , "targetname" , "entIntroCam" );
	spawn ( "Camera" , "targetname" , "entIntroCam2" );
	cam.load ( "igm6_EntIntro" );
	cam.load ( "igm6_EntIntro2" );
	cam.load ( "igm6_EntIntro3" );

	wait ( .1 );
	globalCoop_cin_skipThread ( "cinematicEntIntroIGM6End" );
	$drullShuttleOrigin.followpath ( $igm6_EntIntro );
	$drullShuttle.scale ( .015 );
	$drullShuttleInt.scale ( .015 );

	globalCoop_cin_followWatch($entIntroCam, $igm6_EntIntro2 , $drullShuttleOrigin );
	globalCoop_cin_cut($entIntroCam);
	globalCoop_cin_cuecamera( $entIntroCam );
	wait ( 4 );

	globalCoop_main_camFadeIn(1);
	allowmusicducking ( 0 );
	music ( "aux2" );
	stuffcmd ( "locationprint 0 70 \"$$IGM6Stardate$$\" 10.0\n" );

	wait ( 4.25 );
	$drullShuttleOrigin.playsound ( "sound/vehicles/shuttlecraft/shuttle_flyby_fast.wav", 10, 1, 1024 );

	wait ( 4.75 );

	globalCoop_cin_follow($entIntroCam2, $igm6_EntIntro3 );
	globalCoop_cin_cut($entIntroCam2);

	wait  ( 1 );

	globalCoop_cin_cuecamera( $entIntroCam2 );

	$drullShuttleOrigin.playsound ( "sound/vehicles/shuttlecraft/shuttle_decelerate.wav", 10, .25, 256 );

	$drullShuttle.scale ( .005 );
	$drullShuttleInt.scale ( .005 );
	wait ( 6 );

	thread cinematicEntIntroIGM6End ();
}

void cinematicEntIntroIGM6End ()
{
	globalCoop_main_camFadeOut(1);
	globalCoop_main_wait1DotZero();
	music ( "normal" );

	killthread ( "cinematicEntIntroIGM6" );
	globalCoop_main_wait1DotZero();

	IGMCinematicDone = 1;
}

void cinematicEntIntroIGM8 ()
{
	spawn ( "Camera" , "targetname" , "entIntroCam" );
	cam.load ( "igm8_EntIntro" );

	//the music cue for this is in ent-deck8-mission8.scr in munroOnDeck8IGM8 () to take care of timing issues
	wait ( .1 );
	globalCoop_cin_skipThread ( "cinematicEntIntroIGM8End" );

	globalCoop_cin_follow($entIntroCam, $igm8_EntIntro );
	globalCoop_cin_cut($entIntroCam);
	globalCoop_cin_cuecamera( $entIntroCam );
	$entOrigin.followpath ( $entOrbit , "normalangles" );
	//$entIntroCam.watch ( "$entOrigin" );
	globalCoop_cin_watch($entIntroCam,$entOrigin);
	globalCoop_main_wait1DotZero();
	globalCoop_main_camFadeIn(1);

	stuffcmd ( "locationprint 0 70 \"$$IGM8Stardate$$\" 10.0\n" );

	waitfor ( $entOrigin );

	$entNacelles.anim ( "blur" );
	globalAccelMove_Relative( $entOrigin, '0 1024 0', .5, "rampup", "" );

	$entSaucer.model ( "models/fx/fx-warpflash-federation.tik" );
	$entBody.remove ();
	$entNacelles.remove ();

	globalCoop_main_wait1DotZero();

	thread cinematicEntIntroIGM8End ();
}

void cinematicEntIntroIGM8End ()
{
	globalCoop_main_camFadeOut(1);
	globalCoop_main_wait1DotZero();
	forcemusic ( "normal" );

	killthread ( "cinematicEntIntroIGM8" );
	globalCoop_main_wait1DotZero();

	IGMCinematicDone = 1;
}
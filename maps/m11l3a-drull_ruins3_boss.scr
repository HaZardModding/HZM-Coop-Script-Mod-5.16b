//-------------------------------------------
//
//  EF2 Level Script File
//
//  Level:	  Drull Ruins 3 Boss Fight: Level A
//  Script By:    Richard 'Charon' Heath
//  Geometry By:  Richard 'Charon' Heath
//
//--------------------------------------------

void main();
void init();
void lowerLift();
void setupPlayer();
void setup_effects();
void setup_ai();
void setup_areaportals();
void bobRockPlat1 ();
void earthquakes ();
void turretKillThread ();
void coop_waitForTeam();
void coop_endLevel();

float canActivateAutoSave = 0;

//=============================================================================
// Includes
//=============================================================================

//Co-op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/maps/main.scr"
#include "coop_mod/maps/global/global_common.scr"
#include "coop_mod/maps/optional_modules/puzzles_advanced.scr"
#include "coop_mod/maps/missions/11/m11_groupSpawn.scr"
#include "coop_mod/maps/missions/11/m11_beamInAmmo.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "maps/global_scripts/global_debugUtils.scr"
#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_archetype.scr"
#include "maps/global_scripts/global_acceleratedMovement.scr"

//==========================================================================
// Main Stuff
//==========================================================================

//---------------------
// main
// do start up stuff
//---------------------

void main()
{
	soundtrack ( "music/m11l3a-drull_ruins3_boss.mus" );
	$world.entity_fade_dist( 4000 );
	$world.farplane_color( '.5 0.22 0.00' );
	$world.farplane( 3500 );
	$world.farplane_cull ( 1 );
	$world.farplane_fog ( 1 );
//Co-Op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	coop_string_nextMapToCheck			= "m11l3b-drull_ruins3_boss";//set the map we gona load next while we are in testmode
//Set spawnangles for this level
	coop_float_spawnAngle0 				= 180;
	coop_vector_spawnOrigin8 			= '-713 18377 -167';
	coop_vector_spawnOrigin7 			= '-713 18450 -167';
	coop_vector_spawnOrigin6 			= '-713 18530 -167';
	coop_vector_spawnOrigin5 			= '-713 18600 -167';
	coop_vector_spawnOrigin4 			= '-780 18377 -167';
	coop_vector_spawnOrigin3 			= '-780 18450 -167';
	coop_vector_spawnOrigin2 			= '-780 18530 -167';
	coop_vector_spawnOrigin1 			= '-780 18600 -167';
//Definie Objective
	coop_string_objectiveItem1			= "StopCommander";
 //definie weapons
	coop_string_weapon1 = "models/weapons/worldmodel-BurstRifle.tik";
	coop_string_weapon2 = "models/weapons/worldmodel-Phaser-stx.tik";
	coop_string_weapon3 = "models/weapons/worldmodel-Tricorder-stx.tik";
//	coop_string_weapon4 = "models/weapons/worldmodel-FieldAssaultRifle.tik";
//	coop_string_weapon5 = "models/weapons/worldmodel-GrenadeLauncher.tik";
	coop_string_weapon4 = "models/weapons/worldmodel-attrex-rifle.tik";
	coop_string_weapon5 = "models/weapons/worldmodel-photon.tik";
	coop_string_weapon6 = "models/weapons/worldmodel-sniperrifle.tik";
	if(	getCvar("coop_eWtik") == "models/weapons/worldmodel-rom-radgun-romhands.tik" ||
		getCvar("coop_eWtik") == "models/weapons/worldmodel-rom-radgun.tik"
	)
	{
		coop_string_weapon7 = "models/weapons/worldmodel-rom-radgun.tik";
	}
//Start the Co-Op Script
	globalCoop_main();
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	init();	
	waitforplayer();
	thread setupPlayer();
//Set viewModes
	$world.clearAvailableViewModes();
	$world.addAvailableViewMode("structuralintegrity");
	
	if(!cvar_bool_multiplayer){
		$player.playerviewangles ( '0 180 0' );
		spawn("char_alien_turret","model","char/alien-type2b-cruiser-turret.tik","origin","-1388 18308 160","angle","90");
	}

	thread bobRockPlat1();
	thread lowerLift ();

	$quad0.hide ();
	$quad0.notsolid ();
	CommandToGroup ( 999 , "groupdeaththread" , "bothPredatorsDead" , "" );
}


//---------------------
// init
//---------------------
void init()
{
	entity eSpawn;
	eSpawn = spawn("script_model","model","fx/fx-dummy.tik","origin","-1277 17591 -152");
	//globalLoadout_AssignWeapons ( "m11l3a_drull_ruins3" );
	thread setup_effects();
	thread setup_ai();
	thread setup_areaportals();

	globalArchetype_Setup( $dooropener1_archetype , "RomulanTricorderDoor" );

	$commander.killthread ( "commanderDeath" );
	//$commander.health ( 800 );

	$commanderFulcrum1.movedown ( 128 );

	thread earthquakes();

	$finalLiftDoor1a.bind ( $finalLift );
	$finalLiftDoor1b.bind ( $finalLift );
	
//	$finalLiftDoor2a.bind ( $finalLift );
//	$finalLiftDoor2b.bind ( $finalLift );
	if(cvar_bool_multiplayer){
	//spawn Class Selection
		thread globalCoop_class_setup("Medic",'-1061 18738 -140');
		thread globalCoop_class_setup("HeavyWeapons",'-950 18738 -140');
		thread globalCoop_class_setup("Technician",'-855 18738 -140');	
		globalCoop_puzzle_add("door1PuzzleObject","activatePanel2",7,'-2488 10624 -296');
		globalCoop_puzzle_replace($door2PuzzleObject,"door2Open",7);
		wait(2);
		$door2PuzzleObject.setFloatVar("globalCoop_puzzle_disabled",1);
	}
	wait(.01);
	eSpawn.setSize('-200 -200 -32','200 200 1');
}

void setupPlayer()
{
	if(!cvar_bool_multiplayer){
		$player.loadobjectives ( "m11l3a-drull_ruins3" );
		wait (.1);
	}
	globalCoop_objectives_update("incomplete",1,1);
}


//==========================================================================
// Setup Stuff
//==========================================================================


//---------------------
// setup_effects
// setups all the effects in the level
//---------------------
void setup_effects()
//---------------------
{
	$door1_steam1.hide();
	$door2_steam1.hide();
	//$door2_sparks1.hide();

	$world.light_lightstyle ( "introLights1" , "aaaaaaaaaaaaaaaaaaaaaaaaaazzzzaaaaaaaaaaaaaaaaaaazzzz" , 0 );
	$world.light_lightstyle ( "introLights2" , "aaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaazz" , 0 );
	$world.light_lightstyle ( "introLights3" , "aaaaaaaaaaaazzzzzzaaaaaaaaaaaaaaazzzz" , 0 );
	$world.light_lightstyle( "flicker1", "zxazcyazauwxazdaawtbzcya" );

	$world.light_lightstyle ( "predatorLights1" , "aaaaaaaaaaaaazzzzaaaazzzzaaaammmmaaaaaaaaaaaaaaaaaa" , 0 );
	$world.light_lightstyle ( "predatorLights2" , "aaaaaaazzzzaazzzzaaaazzzzaaaazzzzaaaaaaammmmmmaaaaaaa" , 0 );
}

//---------------------
// setup_ai
// setups all the ai in the level
//---------------------
void setup_ai()
{
	$door1_alien1.ai_off();
	$door2_alien1.ai_off();

	$door1_alien1.forcealpha ( 1 );
	$door1_alien1.alpha ( 0 );

	$door2_alien1.forcealpha ( 1 );
	$door2_alien1.alpha ( 0 );


	$door1_alien1.notsolid();
	$door2_alien1.notsolid();

	$door1_alien1.health ( 600 );
	$door2_alien1.health ( 600 );

	//make the bottom of the door solid again
	//it was notsolid so that pathnodes would connect through it
	$door1_middle_mid1.solid();
	$door1_middle_mid2.solid();
	$door1_bottom_mid1.solid();
	$door1_bottom_mid2.solid();

	$door2_bottom2.solid ();
	$door1_top1.solid ();
	$door1_top2.solid ();

}

//---------------------
// setup_areaportals
// setups all the areaportals in the level
//---------------------
void setup_areaportals()
{
	// $door1_portal1.hide();
	// $door1_portal2.hide();

	// $door1_portal1.notsolid();
	// $door1_portal2.notsolid();
}

//==========================================================================
// Stuff
//==========================================================================

//---------------------
// lowerLift
// makes the lift at the start of the level move down
//---------------------
void finalLiftDoor1CloseLeft()
{
	$finalLiftDoor1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1.5, 1500 );
	globalAccelMove_Rotate( $finalLiftDoor1a, '0 90 0', 2, "rampupdown", "" );
	$finalLiftDoor1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1.5, 1500 );
}

void finalLiftDoor1CloseRight()
{
	globalAccelMove_Rotate( $finalLiftDoor1b, '0 -90 0', 2, "rampupdown", "" );

}
void lowerLift()
{

	if(!cvar_bool_multiplayer){
		$finalLift.playsound( "sound/environment/machine/lift4.wav", 4, 1, 1500 );
		$finalLift.time( 8 );
	}
	else{
		$finalLift.time( .1 );
	}
	$finalLift.moveDown( 776 );

	waitfor( $finalLift );
	$finalLift.playsound( "sound/environment/machine/lift4stop.wav", 4, 1, 1500 );

	thread finalLiftDoor1CloseLeft ();
	thread finalLiftDoor1CloseRight ();

}

//==========================================================================
// Door Stuff
//==========================================================================

//---------------------
// door1_open
// opens the first door of the two door puzzle
//---------------------
void door1Open()
{
	$dooropener1_archetype.remove ();
	$door1_top1.openportal();

	$door1_steam1.show();

	wait( .5 );

 	$door1_middle_mid1.playsound( "sound/ships/attrexian/att-colonydoor2.wav", 7, 1.5, 1500 );

	$door1_middle_mid1.time(2);
	$door1_middle_mid2.time(2);
	$door1_bottom_mid1.time(2);
	$door1_bottom_mid2.time(2);

	$door1_middle_mid1.rotateZdown( 45 );
	$door1_middle_mid2.rotateZdown( 45 );
	$door1_bottom_mid1.moveEast( 8 );
	$door1_bottom_mid2.moveWest( 8 );
	wait( 2 );

	wait( .5 );
	$door1_middle_mid1.time(3);
	$door1_middle_mid2.time(3);
	$door1_bottom_mid1.time(3);
	$door1_bottom_mid2.time(3);
	$door1_bottom1.time(3);
	$door1_bottom2.time(3);
	$door1_top1.time(3);
	$door1_top2.time(3);
	$door1_middle1.time(3);
	$door1_middle2.time(3);

	$door1_bottom1.moveNorth( 56 );
	$door1_bottom2.moveSouth( 56 );
	$door1_bottom_mid1.moveDown( 64 );
	$door1_bottom_mid2.moveDown( 64 );
	$door1_top1.moveNorth( 80 );
	$door1_top2.moveSouth( 80 );
	$door1_middle1.moveNorth( 80 );
	$door1_middle2.moveSouth( 80 );
	$door1_middle_mid1.moveNorth( 80 );
	$door1_middle_mid2.moveSouth( 80 );

	wait( .25 );
	$door1_steam1.hide();
}

//---------------------
// door1_close
// closes the first door of the two door puzzle
//---------------------
void door2Close()
{
	if(cvar_bool_multiplayer)
		return;
	
	$door2Clip.solid ();
	waitfor ( $door2_middle_mid2 );
	$door2_steam1.show();

	$door2_clip1.solid();
 	$door2_middle_mid1.playsound( "sound/ships/attrexian/att-colonydoor2.wav", 7, 1.5, 1500 );
	wait( .5 );

	$door2_middle_mid1.time(3);
	$door2_middle_mid2.time(3);
	$door2_bottom_mid1.time(3);
	$door2_bottom_mid2.time(3);
	$door2_bottom1.time(3);
	$door2_bottom2.time(3);
	$door2_top1.time(3);
	$door2_top2.time(3);
	$door2_middle1.time(3);
	$door2_middle2.time(3);

	$door2_middle_mid1.moveSouth( 64 );
	$door2_middle_mid2.moveNorth( 64 );
	$door2_middle1.moveSouth( 64 );
	$door2_middle2.moveNorth( 64 );
	$door2_top1.moveSouth( 80 );
	$door2_top2.moveNorth( 80 );
	$door2_bottom_mid1.moveUp( 64 );
	$door2_bottom_mid2.moveUp( 64 );
	$door2_bottom1.moveSouth( 56 );
	$door2_bottom2.moveNorth( 56 );
	wait( 3 );

	wait( .5 );
	$door2_middle_mid1.time(2);
	$door2_middle_mid2.time(2);
	$door2_bottom_mid1.time(2);
	$door2_bottom_mid2.time(2);

	$door2_bottom_mid1.moveWest( 8 );
	$door2_bottom_mid2.moveEast( 8 );
	$door2_middle_mid1.rotateZup( 45 );
	$door2_middle_mid2.rotateZup( 45 );
	wait( 2 );

	wait( .25 );
	$door2_steam1.hide();

	$door2_top1.closeportal();
}

//---------------------
// door2_open
// opens the second door of the two door puzzle
//---------------------
void door2Open()
{
	if ( canActivateAutoSave )
		$postPredatorAutoSave.triggerable ( );
	else
		canActivateAutoSave = 1;
	$dooropener2_archetype.remove ();
	$door2_top1.openportal();

	$door2_steam1.show();
 	$door2_middle_mid1.playsound( "sound/ships/attrexian/att-colonydoor1.wav", 7, 1.5, 1500 );
	wait( .5 );

	$door2_middle_mid1.time(2);
	$door2_middle_mid2.time(2);
	$door2_bottom_mid1.time(2);
	$door2_bottom_mid2.time(2);

	$door2_middle_mid1.rotateZdown( 45 );
	$door2_middle_mid2.rotateZdown( 45 );
	$door2_bottom_mid1.moveEast( 8 );
	$door2_bottom_mid2.moveWest( 8 );

	wait( 2 );

	wait( .5 );
	$door2_middle_mid1.time(3);
	$door2_middle_mid2.time(3);
	$door2_bottom_mid1.time(3);
	$door2_bottom_mid2.time(3);
	$door2_bottom1.time(3);
	$door2_bottom2.time(3);
	$door2_top1.time(3);
	$door2_top2.time(3);
	$door2_middle1.time(3);
	$door2_middle2.time(3);

	$door2_bottom1.moveNorth( 56 );
	$door2_bottom2.moveSouth( 56 );
	$door2_bottom_mid1.moveDown( 64 );
	$door2_bottom_mid2.moveDown( 64 );
	$door2_top1.moveNorth( 80 );
	$door2_top2.moveSouth( 80 );
	$door2_middle1.moveNorth( 64 );
	$door2_middle2.moveSouth( 64 );
	$door2_middle_mid1.moveNorth( 64 );
	$door2_middle_mid2.moveSouth( 64 );

	wait( .25 );
	$door2_steam1.hide();
}


void commanderSequence ()
{
	$commander.ai_on ();
	thread globalCoop_actor_healthMultiplicatePerPlayer($commander);
	if(!cvar_bool_multiplayer)
		$commander.attack ( $player );

	turretKillThread(); 	//spawn some turrets
}


float doSmallBobbing = 1;
void bobRockPlat1 ()
{
	float t;

	while ( doSmallBobbing == 1 )
	{

		globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 2 ) , 32 , "up" );
		globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 2 ) , 32 , "down" );
	}

	globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 4 ) , 128 , "up" );

	while ( doSmallBobbing == 2 )
	{

		globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 2 ) , 32 , "up" );
		globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 2 ) , 32 , "down" );
	}

	globalAccelMove_AxisAligned ( "rockPlat1" , randomfloat ( 2 ) , 128 , "down" );
}

void raiseRockPlat1 ()
{
	doSmallBobbing = 2;
}

void lowerRockPlat1 ()
{
	doSmallBobbing = 3;
}

void monsterRage ( )	//trigger_once
{
	entity caller, activator;
	caller = getCurrentEntity ();	//the trigger_once that started this thread
	activator = caller.getLastActivatingEntity ();	//the monster that activated the trigger_once
	thread globalCoop_actor_healthMultiplicatePerPlayer(activator);
	if(!cvar_bool_multiplayer)
		if (doesEntityExist ( activator ))
			activator.attack ( $player );	//H8 teH PL4y3R
}


void dropPredatorRock1 ()
{
    forcemusic ("aux1");
 	$predatorRock1.playsound( "sound/impact/explosion/expl_rockdebr1.wav", 7, 1, 1500 );
	$predatorRock1.playsound( "sound/impact/explosion/explo_wall1.wav", 8, 1, 1500 );
	$predatorRock1.time ( 1 );
	$predatorRock1.movedown ( 840 );
	$predatorRock1.rotateZ ( 40 );

	waitfor ( $predatorRock1 );
	$predatorRock1.playsound( "sound/impact/explosion/explo_neonsign.wav", 10, 1, 1500 );
	$predatorRock1.playsound( "sound/impact/explosion/explo_grate2.wav", 11, 1.7, 1500 );

	$predatorRock1.remove ();
	trigger("$predatorRock1Explode");
	thread globalCoop_level_moveToPos($coop_class_MedicModel,'-2452 10789 -350');
	thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-2452 10870 -350');
	thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-2452 10969 -350');	
}

void activatePanel1 ()
{
 	$door1_button1_panel1.playsound( "sound/environment/machine/mech_move2.wav", 7, 1.2, 1500 );
	$door1_button1_panel1.time( 2 );
	$door1_button1_panel1.rotateXup( 90 );
}

void activatePanel2 ()
{
	thread door1Open();
	$world.light_lightstyle ( "panel2Light" , "mamaz" , 1 );
 	$door2_button1_panel1.playsound( "sound/environment/machine/mech_move2.wav", 7, 1.2, 1500 );
	$door2_button1_panel1.time( 2 );
	$door2_button1_panel1.rotateZdown( 90 );
	$door2_button1_panel1.playsound ( "sound/ships/forever/for_poweron.wav", 3, .9, 10000);

	globalArchetype_Setup( $dooropener2_archetype , "RomulanTricorderDoor" );
	$dooropener2_archetype.playsound( "sound/doors/drull_smldoor_01.wav", 11, 1 , 700 );

    forcemusic ("mystery", "action");

	if(!cvar_bool_multiplayer){
		$door2PuzzleObject.puzzleobject_itemToUse ( "Tricorder" );
		$door2PuzzleObject.puzzleobject_timeToUse ( 5 );
		$door2PuzzleObject.puzzleobject_solvedthread ( "door2Open" );
	}
	else{
		$door2PuzzleObject.setFloatVar("globalCoop_puzzle_disabled",0);
	}
	thread globalCoop_actor_healthMultiplicatePerPlayer($door2_alien1);
	$door2_alien1.ai_on();
	$door2_alien1.fadein (2);
	$door2_alien1.solid();
}

void quadDeath ()
{
        forcemusic ("success","normal");
	$quadHurtTrigger.remove();
	$quadHurtTriggerSteam1.remove();
	$quadHurtTriggerSteam1.stoploopsound();
	$quadHurtTriggerSteam2.stoploopsound();

	$quadHurtTriggerSteam2.remove();
}

void quadSequence ()
{
	if(cvar_bool_multiplayer){
		coop_float_spawnAngle1 				= 275;
		coop_float_spawnAngle2				= 275;
		coop_float_spawnAngle3 				= 275;
		coop_float_spawnAngle4 				= 275;
		coop_float_spawnAngle5 				= 275;
		coop_float_spawnAngle6 				= 275;
		coop_float_spawnAngle7 				= 275;
		coop_float_spawnAngle8 				= 275;
		coop_vector_spawnOrigin8 			= '-2264 14521 -155';
		coop_vector_spawnOrigin7 			= '-2340 14521 -155';
		coop_vector_spawnOrigin6 			= '-2410 14521 -155';
		coop_vector_spawnOrigin5 			= '-2480 14521 -155';
		coop_vector_spawnOrigin4 			= '-2264 14450 -155';
		coop_vector_spawnOrigin3 			= '-2340 14450 -155';
		coop_vector_spawnOrigin2 			= '-2410 14450 -155';
		coop_vector_spawnOrigin1 			= '-2480 14450 -155';
	//move class selection
		thread globalCoop_level_moveToPos($coop_class_MedicModel,'-1601 13529 -187');
		thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-1578 13337 -187');
		thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-1550 13138 -187');		
		globalCoop_applaySpawnOriginOnReSpwanOrigin();
	}
	$quadHurtTriggerSteam1.loopsound( "sound/environment/steam/steam_loop04.wav", .7 , 110 );
	$quadHurtTriggerSteam1.loopsound( "sound/environment/steam/steam_loop05.wav", .7 , 110 );

	//make them slightly easier since we're dealing with 2 of them
	$quad.health ( $quad.gethealth () - 100 );
	$quad0.health ( $quad0.gethealth () - 100 );

	$quad.setgroupid ( 123 );
	$quad0.setgroupid ( 123 );
	$quad.groupdeaththread ( "quadDeath" );
	thread globalCoop_actor_healthMultiplicatePerPlayer($quad);
	$quad.ai_on ();
	if(!cvar_bool_multiplayer)
		$quad.attack ( $player );

	//wait to drop the second quad in
	float quadHealth;
	quadHealth = $quad.gethealth () * 0.20;

	while ( isActorAlive ( "quad" ) && ($quad.gethealth ()  > quadHealth) )
	{
		//print ( "waiting" + $quad.gethealth() + "\n" );
		wait ( .5 );
	}

	$quadPushTrigger.triggerable ();
	wait ( .25 );
	$quadPushTrigger.remove ();
	trigger ( "$quad0Debris" );
	$quad0.show ();
	$quad0.solid ();
	$quad0.anim ( "flying_landing" );
	thread globalCoop_actor_healthMultiplicatePerPlayer($quad0);
	waitforanimation ( $quad0, "flying_landing" );
	$quad0.walkto ( "$quad2Node" , "run" );
	waitfor ( $quad0 );

	$quad0.ai_on ();
	if(!cvar_bool_multiplayer)
		$quad0.attack ( $player );
}

//random earthquakes + debris
void earthquakes ()
{
	if(cvar_bool_multiplayer)
		return;
	
	entity quake,debris;
	vector _origin,forward;
	float fX, fY, fZ, sign;


	float ramdomQuakeIntensity;
	float randomQuakeLength;

	quake = spawn ( "func_earthquake" , "targetname" , "rockDebrisQuake" );

	while ( 1 )
	{
		wait ( randomfloat ( 10 ));
		_origin = $player.getorigin();
		quake.origin ( _origin );

		ramdomQuakeIntensity = randomFloat( .5 ) + .1;
		randomQuakeLength = randomFloat( .4 ) + .4;

		$rockDebrisQuake.duration( ramdomQuakeIntensity );
		$rockDebrisQuake.magnitude( ramdomQuakeIntensity );

		trigger ( "$rockDebrisQuake" );

		wait ( .25 );

		debris = spawn ( "script_model" ,
						 "model" , "models/fx/fx-explosion-debris-rocks-dust-brown.tik",
						 "angles" , "-90 0 0" );
		forward = vectorforward ( $player.getangles() );

		fX = vectorgetx ( forward );
		fY = vectorgety ( forward );

		if ( randomint ( 2 ) == 1 )
		{
			sign = -1;
			fX *= -1;
		}

		fX *= randomfloat ( 512 );
		fY *= randomfloat ( 512 );

		fX += vectorgetx ( _origin );
		fY += vectorgety ( _origin );

		fX += ( sign * 256 );
//		fY += 512;

		fZ = vectorgetz ( _origin );
		fZ += 384;

		forward = _origin;
		_origin = vectorsetx ( _origin , fX );
		_origin = vectorsety ( _origin , fY );
		_origin = vectorsetz ( _origin , fZ );
		debris.origin ( _origin );
	}
}
float commandersKilled = 0;
void commanderDeath ()
{
	commandersKilled++;

	if ( commandersKilled >=1 )
	{
		$finalDoor.triggerable ();
		$commanderFulcrum1.moveup ( 128 );
        forcemusic ("success","normal");
		spawn("trigger_once","targetname","coop_levelEnd","thread","coop_waitForTeam","origin","1152 8608 -128");
		wait(7);
		$coop_levelEnd.setSize('-513 -33 -321','513 33 321');
	}
}

void activatePredators ()
{
	$door1_alien1.fadein ( 2 );
	$door1_alien1.solid();
	$door1_alien1.ai_on();
}

float totalTurretsAlive = 0;
void turretKillThread ()
{
	totalTurretsAlive--;
	if ( totalTurretsAlive <= 0 && isActorAlive ( "commander" ))
	{
		trigger ( "$turretSpawner1" );
		trigger ( "$turretSpawner2" );

		wait ( .25 );
		$turret1Dude.killthread ( "turretKillThread" );
		$turret2Dude.killthread ( "turretKillThread" );

		if(!cvar_bool_multiplayer){
			$turret1Dude.attack ( $player );
			$turret2Dude.attack ( $player );
		}

		totalTurretsAlive=2;
	}
}

void firstPredatorEncounter ()
{
	$firstPredator.health ( 700 );
	$firstPredator.ai_on ();
	thread globalCoop_actor_healthMultiplicatePerPlayer($firstPredator);
	if(!cvar_bool_multiplayer)
		$firstPredator.attack ( $player );
}

void bothPredatorsDead ( )
{
	if ( !canActivateAutoSave )
		canActivateAutoSave = 1;

	else
		$postPredatorAutoSave.triggerable ( );
}

void coop_waitForTeam()
//------------------------------------------------------------------------------
//waitForPlayers beeing close, end then the Level
//------------------------------------------------------------------------------
{
	globalCoop_main_waitForTeam('1199 7991 -280','-800 -800 0','800 800 1000');
	coop_endLevel();
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	thread globalCoop_mission_completed("m11l3b-drull_ruins3_boss");
}

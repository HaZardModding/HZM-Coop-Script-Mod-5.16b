//-----------------------------------------------------------------
//  EF2 Level Script File
//
//  Level:	  m3l1a-forever - USS Dallas
//  Script By:    Richard H., Josh M., Adam 'Senn' Bellefeuil
//  Geometry By:  Adam 'Senn' Bellefeuil
//  Created on:   06/28/2002
//
//-----------------------------------------------------------------


//--- variables
float CargoBayDoorLocked = 1;
float gravity_on = 0;
float gravity_objects_onground = 0;
float cinematicGravity_objectshavefallen = 0;

//==========================================================================================
// Declarations
//==========================================================================================
void main();
void init();

//--- setup functions
void setup_gravityunit();
void setup_archetypes();
void setup_sounds();
void setupSky();

void floatingObject( entity object );

void gravity_objects();
void gravity_objects_barrel1();
void gravity_objects_barrel2();
void gravity_objects_barrel3();

//--- gravity unit area functions
void gravityUnit_Expose();
void gravityUnit_ExposeFunction();
void gravityUnit_ActivateFunction();
void gravityUnit_ActivateFunction_SkipThread();

//--- elevator functions
void elevatorFall_MiddlePosition();
void elevatorFall_EndingPosition();
void elevatorFall_Shake();
void turboliftShaft_lightdie1();

// Cargo Bay Stuff
void CargoBayExit();
void CargoBayDoor1Button_Used();
void sequenceCargoBayDoorLocked();

// Duct/TurboLift/AirLock Area Stuff
void AirLockDoorButton_Used();
void EnterJTubesSequence();
void catwalk_teammatedialog1();

//Misc
void AirLockClose();
void ChangeLevel();

//Secrets
void shuttle_secret();
void coop_aiOn();
void coop_aiOff();
void coop_waitForTeam();
void coop_endLevel();
void coop_spawnloactaionsAlpha();
void coop_onDamage(entity eOnDamage,string sThread);

void coop_statementSaver_playdialog(entity e,string sDialog);
void coop_statementSaver_playdialogNoHead(entity e,string sDialog);
void followPlayer(entity eActor);

//==========================================================================================
// Includes
//==========================================================================================
#include "coop_mod/maps/main.scr"
#include "coop_mod/maps/optional_modules/teammateM3.scr"
#include "coop_mod/maps/optional_modules/contextM3.scr"
#include "coop_mod/maps/optional_modules/puzzles.scr"
#include "coop_mod/maps/optional_modules/lights.scr"
#include "coop_mod/maps/missions/3/save_statments.scr"
#include "coop_mod/maps/optional_modules/doors.scr"
#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_archetype.scr"
#include "coop_mod/maps/global/global_soundPan.scr"
#include "coop_mod/maps/global/global_acceleratedmovement.scr"
#include "coop_mod/maps/global/global_tricorderBase.scr"
#include "coop_mod/maps/global/global_tricorderRoute.scr"
#include "coop_mod/maps/global/global_tubeDoor.scr"
#include "coop_mod/maps/global/global_cinematicFX.scr"
#include "coop_mod/maps/missions/3/m3l1a_cin.scr"

void coop_newPlayerEntered()
//----------------------------------------------------------------------
//add breathing sound to each player
//----------------------------------------------------------------------
{
	if(coop_integer_cinematicIsActive != 1)
	{
		entity ePlayer;
		float fPlayerIdInUse = 1;
		while(fPlayerIdInUse<=coop_integer_maxPlayers)
		{
			globalCoop_main_waitAFrame();
			ePlayer = getentity("player"+fPlayerIdInUse);
			if(doesEntityExist(ePlayer)){
				if(ePlayer.getFloatVar("coop_newPlayerEnteredPROCESSED") != 1){
					ePlayer.setFloatVar("coop_newPlayerEnteredPROCESSED",1);
					ePlayer.setStringVar("coop_loopSoundName","sound/player/player_rebreath.wav");
					ePlayer.setFloatVar("coop_loopSoundVolume",7);
					ePlayer.setFloatVar("coop_loopSoundRange",75);
					ePlayer.loopsound ( "sound/player/player_rebreath.wav",7,75);
				}
			}
			fPlayerIdInUse++;
		}
	}
}

void coop_onDamage(entity eOnDamage,string sThread)
{
//CHECK IF ENTITY EXISTS, DO NOTHING IF NOT
	if(doesEntityExist(eOnDamage)){
		eOnDamage.noDamage();
		globalCoop_main_waitAFrame();
		eOnDamage.onDamage(sThread);
		pause();
	}
}


void coop_stmts_globalTricorderRoute_SetNextRow32()
//SAVE STATMENTS
{
	globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
}

//==========================================================================================
// Main Stuff
//==========================================================================================
void main()
{
//Fade to black
	thread globalCoop_main_camFadeOut(0.001);
	$world.physicsVar("gravity",200);
	globalCoop_server_precacheSingleplayer();
//--- set the soundtrack
	soundtrack( "music/m3l1a-forever.mus" );
//Ai shall not move around
	thread coop_aiOff();
//Coop
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	coop_string_nextMapToCheck			= "m3l1b-forever";//set the map we gona load next while we are in testmode
//Set Tactical information, to be added at the Objectives hud
	coop_string_objectiveTacticalInfo1 = "UseNightVision";
//Set spawnangles for this level
	coop_float_spawnAngle0 				= 180;//SpawnOrigin0 Angle
//Definie Objective
	coop_string_objectiveItem1			= "ExploreShip";
	coop_string_objectiveItem2			= "RestoreGravity";
	coop_string_objectiveItem3			= "ReroutePowerToCargoBayDoor";//ReroutePower
	coop_string_objectiveItem4			= "UnlockShuttleBayDoors";
//set spawnloacation
	coop_spawnloactaionsAlpha();
//Set Weapons Manualy untill we found a work arround this max statement limit excended :-/
	coop_string_weapon1				= "models/weapons/worldmodel-BurstRifle.tik";
	coop_string_weapon2				= "models/weapons/worldmodel-Phaser-stx.tik";
	coop_string_weapon3				= "models/weapons/worldmodel-Tricorder-stx.tik";
	string sExtraWeapon;
	sExtraWeapon = getCvar("coop_eWtik");
	if("models/weapons/worldmodel-imod.tik" == sExtraWeapon)
	{
		coop_string_weapon4	= sExtraWeapon;
	}
//Start the Co-Op Script
	globalCoop_main();
	thread globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/main.cfg\n");	
//reset enterprise deck8, igm holodeck spawn
	setfloatvar("game.holoDeckIGM1Done",0);
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
thread globalCoop_dynLight_setup8(
	"lightCargoBay1","aaaaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaa",
	"lightCargoBay2","aaaaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaa",
	"lightCargoBay3","aaaaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaa",
	"lightCargoBay4","aaaaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaa",
	"lightShuttleBay1","aaaaaaaaaaaaaaaaaaaaaaaaaaaazzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaaaaaaaazzaaaaaaaaaaaaaaaaa",
	"lightCargoBay1PanelRed","z",
	"lightCargoBay1PanelGreen","a",
	"lightAreaFlicker1","aazzaazzjjaaazzaajaajzzzazazazajjzaazzkahjszwufkjaz");
thread globalCoop_dynLight_setup("lightAreaFlicker2","aazzaazzjjaaazzaajaajzzzazazazajjzaazzkahjszwufkjaz");
thread globalCoop_dynLight_setup("lightJTubeHallway","aahistzzzzzzzzzzpodaaaaaaaaaacdoptszzzzzzoaaozzoaaaaaaahistzzzoaaaozzoaozzzzzohistxxyzzzzzyxxxvvtooooaaaaaaaaaaa");
thread globalCoop_dynLight_setup8(
	"lightJTubeElevatorShaftLevel2_East_Red","z",
	"lightJTubeElevatorShaftLevel2_East_Green","a",
	"lightJTubeElevatorShaftLevel1_South_Red","a",
	"lightJTubeElevatorShaftLevel1_South_Green","z",
	"airlockdoor1_red","z",
	"airlockdoor1_green","a",
	"airlockdoor2_red","z",
	"airlockdoor2_green","a");
//--- setup the world
	thread init();
	thread globalCoop_objectives_update("incomplete",1,0);//state,slot,show
	//--- start the AI
	thread setup_archetypes();
	thread gravity_objects();
	//$scare_lurker1.flags( "+notarget" );
	$scare_lurker1.ai_off();
	$scare_lurker1.anim( "twitch1" );
	waitForPlayer();
//Set viewModes
	$world.clearAvailableViewModes();
	$world.addAvailableViewMode( "structuralintegrity" );	
	if(cvar_bool_multiplayer){//Multiplayer
	//wait for warmupTime
		globalCoop_main_waitForWarmupTime();
		globalCoop_main_wait1Dot5();
	}
	else{
		$player.loadobjectives( "m3l1a-forever" );
		$player.model("models/char/munro_evosuit.tik");
	}

//Start first cinematic scene
	cin_m3a_1_scene1();
}


void followPlayer(entity eActor)
{
	if(doesEntityExist(eActor))
	{
		entity ePlayer;
		
		if(!cvar_bool_multiplayer)
		{
			eActor.followtarget($player);
			return;
		}
		ePlayer = globalCoop_return_playerClosestActive(eActor);
		eActor.followtarget($player);
		eActor.followrange(450);
		eActor.followrangemin(164);
		eActor.followtarget(ePlayer);
		eActor.settendency("follow_"+ePlayer.getRawTargetname(),1);
	}
}

//==========================================================================================
// SETUP FUNCTIONS
//==========================================================================================

//---------------------
// init
// more start stuff
//---------------------
void init()
{
	$Munro.forceAlpha( 1 );
	$Jurot.forceAlpha( 1 );
	$Chell.forceAlpha( 1 );
	$Franklin.pushable( 0 );
	$Franklin.forceAlpha( 1 );
	$Munro.alpha( 0 );
	$Jurot.alpha( 0 );
	$Chell.alpha( 0 );
	$Franklin.alpha( 0 );
//--- cargobay door setup
	globalCoop_level_notTriggerable($CargoBayDoor1Trigger);
	coop_statementSaver_hideAndShow($CargoBayDoor1Button_online,$CargoBayDoor1Button_offline);//hide,show
	globalCoop_level_hide($AirLockDoorButton_online);
	coop_statementSaver_moveToWithinTime($CargoBayDoor1Button_panel,$CargoBayDoor1Button_panel_closepoint1,.01);//ENTITY:move,ToMe,FLOAT:time
	coop_statementSaver_moveToWithinTime($AirLockDoorButton_panel,$AirLockDoorButton_panel_closepoint1,.01);//ENTITY:move,ToMe,FLOAT:time
	cin_m3a_1_scene1_setup();
	//if singleplayer
	if(	!cvar_bool_multiplayer){
		$munro.forceAlpha( 1 );
		$munro.alpha( 0 );
	//--- cargobaybutton setup
		$CargoBayDoor1Button.puzzleobject_itemtouse( "Tricorder" );
		$CargoBayDoor1Button.puzzleobject_itemusedthread( "CargoBayDoor1Button_Used" );
		$CargoBayDoor1Button.puzzleobject_solvedthread( "CargoBayDoor1Button_Solved" );
		$CargoBayDoor1Button.puzzleobject_failedthread( "CargoBayDoor1Button_Failed" );
		$CargoBayDoor1Button.puzzleobject_canceledthread( "CargoBayDoor1Button_Canceled" );
		//$GravityUnitButton.puzzleobject_deactivate();
	}
//Else, multiplayer
	else{
	//spawn Class Selection
		thread globalCoop_class_setup("Medic",'900 433 10');
		thread globalCoop_class_setup("HeavyWeapons",'800 433 10');
		thread globalCoop_class_setup("Technician",'700 433 10');
		globalCoop_puzzle_replace($CargoBayDoor1Button,"CargoBayDoor1Button_Solved",5);
		globalCoop_puzzle_replace($GravityUnitButton,"gravityUnit_ActivateFunction",15);
		globalCoop_puzzle_replace($ShuttleBayDoor1Button,"AirLockDoorButton_Used",20);
	}
		
	// cargobay 1 secret setup
	globalCoop_level_hide($CargoBay1Secret_busted);

	//--- setup the gravity unit
	thread setup_gravityunit();
	thread gravityUnit_Expose();
	$CargoBayDoor1.lock();

	//--- setup the jtube doors
	thread globalTubeDoor_Setup ( "doorJTubeEntry_East", "manual", 36, "north_south", 0 );
	thread globalTubeDoor_AddComponent ( "switchdoor", "switchdoorJTubeEntry_East" , "doorJTubeEntry_East" );
	thread globalTubeDoor_AddComponent ( "switch", "switchJTubeEntry_East" , "doorJTubeEntry_East" );

	thread globalTubeDoor_Setup ( "doorJTubeElevatorShaftLevel1_South", "normal", 36, "east_west", 0 );
	thread globalTubeDoor_AddComponent ( "button", "button1JTubeElevatorShaftLevel1_South" , "doorJTubeElevatorShaftLevel1_South" );
	thread globalTubeDoor_AddComponent ( "button", "button2JTubeElevatorShaftLevel1_South" , "doorJTubeElevatorShaftLevel1_South" );
	thread globalTubeDoor_AddComponent ( "lockedlight", "lockedlightJTubeElevatorShaftLevel1_South" , "doorJTubeElevatorShaftLevel1_South" );
	thread globalTubeDoor_AddComponent ( "unlockedlight", "unlockedlightJTubeElevatorShaftLevel1_South" , "doorJTubeElevatorShaftLevel1_South" );

	thread globalTubeDoor_Setup ( "doorJTubeElevatorShaftLevel1_North", "manual", 36, "east_west", 0 );
	thread globalTubeDoor_AddComponent ( "switchdoor", "switchdoorJTubeElevatorShaftLevel1_North" , "doorJTubeElevatorShaftLevel1_North" );
	thread globalTubeDoor_AddComponent ( "switch", "switchJTubeElevatorShaftLevel1_North" , "doorJTubeElevatorShaftLevel1_North" );

	thread globalTubeDoor_Setup ( "doorJTubeElevatorShaftLevel2_East", "normal", 36, "north_south", 1 );
	thread globalTubeDoor_AddComponent ( "button", "button1JTubeElevatorShaftLevel2_East" , "doorJTubeElevatorShaftLevel2_East" );
	thread globalTubeDoor_AddComponent ( "button", "button2JTubeElevatorShaftLevel2_East" , "doorJTubeElevatorShaftLevel2_East" );
	thread globalTubeDoor_AddComponent ( "lockedlight", "lockedlightJTubeElevatorShaftLevel2_East" , "doorJTubeElevatorShaftLevel2_East" );
	thread globalTubeDoor_AddComponent ( "unlockedlight", "unlockedlightJTubeElevatorShaftLevel2_East" , "doorJTubeElevatorShaftLevel2_East" );

	thread globalTubeDoor_Setup ( "doorJTubeGravityChamberLevel1_West", "normal", 36, "north_south", 0 );
	thread globalTubeDoor_AddComponent ( "button", "button1JTubeGravityChamberLevel1_West" , "doorJTubeGravityChamberLevel1_West" );
	thread globalTubeDoor_AddComponent ( "button", "button2JTubeGravityChamberLevel1_West" , "doorJTubeGravityChamberLevel1_West" );
	
	thread globalTubeDoor_Setup ( "doorJTubeCatwalk_East", "normal", 36, "north_south", 0 );
	thread globalTubeDoor_AddComponent ( "button", "button1JTubeCatwalk_East" , "doorJTubeCatwalk_East" );
	thread globalTubeDoor_AddComponent ( "button", "button2JTubeCatwalk_East" , "doorJTubeCatwalk_East" );

	thread globalTubeDoor_Setup ( "doorJTubeLadderArea_East", "normal", 36, "north_south", 0 );
	thread globalTubeDoor_AddComponent ( "button", "button1JTubeLadderArea_East" , "doorJTubeLadderArea_East" );
	thread globalTubeDoor_AddComponent ( "button", "button2JTubeLadderArea_East" , "doorJTubeLadderArea_East" );

	//--- bind the elevator
	$BrokenTurboLift.bind ( $BrokenTurboLiftOrigin );
	$BrokenTurboLiftSparks.bind ( $BrokenTurboLift );
	coop_statementSaver_moveToWithinTime($BrokenTurboLiftOrigin,$BrokenTurboLiftOrigin,.1);//ENTITY:move,toMe,FLOAT:time
	globalCoop_level_hide($BrokenTurboLiftSparks);

	//--- setup the end call volume
	//globalCoop_callVolume_replace($AirLockCallVolume,"AirLockClose");
	//thread globalCoop_callVolume_addRequiredEntity($AirLockCallVolume,"Chell");
	//thread globalCoop_callVolume_addRequiredEntity($AirLockCallVolume,"Jurot");
	//thread globalCoop_callVolume_addRequiredEntity($AirLockCallVolume,"Franklin");
	globalCoop_level_remove($AirLockCallVolume);

	// gravity panels that switch when gravity is turned back on
	globalCoop_level_hide($statuspanel1_on);
	globalCoop_level_hide($statuspanel2_on);
	globalCoop_level_hide($statuspanel3_on);
	thread coop_onDamage( $ShuttleBaySecret_trigger, "ShuttleBaySecret_go" );
	$armor.anim( "idle_off" );
	setup_sounds();

	globalCoop_contextM3_setup($Chell , "chell");
	globalCoop_contextM3_setup($Jurot , "jurot");
	globalCoop_contextM3_setup($Franklin , "franklin");
}

//---------------------
// CargoBay1Secret_explode
// Shot the wall for the secret in cargobay 1
//---------------------
void CargoBay1Secret_explode()
{
	$CargoBay1Secret_normal.scriptSlave_explode( 1 );
	globalCoop_level_triggerEntity($CargoBay1Secret_fx);
	globalCoop_level_show($CargoBay1Secret_busted);
	globalCoop_level_remove($CargoBay1Secret_normal);
	globalCoop_level_remove($CargoBay1Secret_view_cue);
	globalCoop_level_remove($CargoBay1Secret_fx);
}


//---------------------
// setup_gravityunit
// setsup the gravity unit
//---------------------
void setup_gravityunit()
{
	//--- recess the gravity unit
	$gravityUnit.time( .1 );
	$gravityUnit.movesouth( 36 );
	waitfor( $gravityUnit );

	globalCoop_level_hideAndNotSolid($gravityUnit_online);
	globalCoop_level_hide($cinematicGravity_barrel1_fall);
	globalCoop_level_hide($cinematicGravity_barrel2_fall);
}

void setupArchetypeObject( entity e, string theArchetype )
{
	e.contents( "targetable" );
	e.archetype( theArchetype );
}

void coop_addSnd(string sSound,float f1,float f2,float f3)
{
	globalSoundPan_AddSound (sSound,f1,f2, 1000,f3, 3, 200, randomint( 5 ) + 5 );
}


void setup_sounds()
{
	coop_addSnd ( "sound/chars/klingon/kling_fpain2.wav",0, .3,.1);
	coop_addSnd ( "sound/chars/klingon/kling_fpain2.wav",0, .5,.1);
	coop_addSnd ( "sound/weapons/phaser/phaser_stun.wav",0, .5,.5);
	coop_addSnd ( "sound/weapons/phaser/phaser_stun.wav",0, .3,.5);
	coop_addSnd ( "sound/chars/attrexian/attrex_glassslide.wav",3, 1,.5);
	coop_addSnd ( "sound/footsteps/metal_duct/duct1.wav",4, 1,1.5);
	coop_addSnd ( "sound/footsteps/metal_duct/duct6.wav",5, 1,1.5);
	coop_addSnd ( "sound/player/player_heartbeat.wav",2, 1,1.5);
	
 	coop_addSnd ( "sound/environment/metal/metal_scrape1.wav", 1, 3, 0.5);
	coop_addSnd ( "sound/environment/metal/metal_scrape2.wav", 2, 1, 0.5);
	coop_addSnd ( "sound/environment/metal/metal_scrape3.wav", 3, 1, 0.5);
	coop_addSnd ( "sound/environment/metal/metal_scrape4.wav", 4, 1, 0.5);
	coop_addSnd ( "sound/chars/lurker/lurk_ambship1.wav", 1, 1, 0.5);
	coop_addSnd ( "sound/chars/lurker/lurk_ambship2.wav", 2, 1, 0.5);
	coop_addSnd ( "sound/chars/lurker/lurk_ambship3.wav", 3, 2, 0.5);
	coop_addSnd ( "sound/chars/lurker/lurk_ambship4.wav", 4, 1, 0.5);
	coop_addSnd ( "sound/chars/lurker/lurk_ambship5.wav", 4, 1, 0.5);
	
	coop_addSnd ( "sound/chars/klingon/kling_fpain2.wav",0, .4,.1);
	
	coop_addSnd ( "sound/ships/forever/ship_creak_low1.wav", 1, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_low2.wav", 2, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_low3.wav", 3, 3, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_low4.wav", 4, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_low5.wav", 5, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_medium1.wav", 1, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_medium2.wav", 2, 1, 0.5);
	coop_addSnd ( "sound/ships/forever/ship_creak_medium3.wav", 3, 1, 0.5);

	coop_addSnd ( "sound/player/player_heartbeat.wav",1, 2,1.5);
	coop_addSnd ( "sound/chars/attrexian/attrex_glassslide.wav",3, 1,.5);
	coop_addSnd ( "sound/chars/klingon/kling_fpain2.wav",0, .4,.3);
	coop_addSnd ( "sound/weapons/phaser/phaser_stun.wav",0, .3,.5);
	coop_addSnd ( "sound/footsteps/metal_duct/duct6.wav",5, 1,1.5);
	thread globalSoundPan_Start();
}

void setupSky()
{
	$entSkyOrigin.rendereffects( "-skyorigin" );
	globalCoop_main_waitZeroDot2();
	$sky.rendereffects( "+skyorigin" );
	$stardome.rotateX( 0.2 );
	$stardome.rotateY( 0.7 );
	
// Enterprise pulls up to wrecked up USS DALLAS, stardate and location are displayed
	$entSkyOrigin.rendereffects( "-skyorigin" );
	globalCoop_main_waitZeroDot2();
	$sky.rendereffects( "+skyorigin" );
	$stardome.rotateX( 0.2 );
	$stardome.rotateY( 0.7 );
//Start secound cinematic scene
	thread cin_m3a_1_scene2();
}

//---------------------
// setup_archetypes
// setting up the archetypes ManualDoorRelease DoorPanel
//---------------------
void setup_archetypes()
{
	globalArchetype_Setup( $gravityUnit_ExposeSwitch_archetype, "GravityPanel" );
	
	// stupid jtube doors
	globalArchetype_Setup( $jdoor1_m_archetype,	"ManualDoorRelease" );

	globalArchetype_Setup( $jdoor2_p_archetype1,"DoorPanel" );
	globalArchetype_Setup( $jdoor2_p_archetype2,"DoorPanel" );

	globalArchetype_Setup( $jdoor3_m_archetype,	"ManualDoorRelease" );

	globalArchetype_Setup( $jdoor4_p_archetype1,"DoorPanel" );
	globalArchetype_Setup( $jdoor4_p_archetype2,"DoorPanel" );

	globalArchetype_Setup( $jdoor5_p_archetype1,"DoorPanel" );
	globalArchetype_Setup( $jdoor5_p_archetype2,"DoorPanel" );

	globalArchetype_Setup( $jdoor7_p_archetype1,"DoorPanel" );
	globalArchetype_Setup( $jdoor7_p_archetype2,"DoorPanel" );

	globalArchetype_Setup( $jdoor8_p_archetype1,"DoorPanel" );
	globalArchetype_Setup( $jdoor8_p_archetype2,"DoorPanel" );

	globalArchetype_Setup( $doorpanelarch,"DoorPanel" );

	globalArchetype_Setup( $gravity_waypoint,"Waypoint" );

	globalArchetype_Setup( $CargoBayDoor1Button_archetype,"CargoDoorControl" );
	globalArchetype_Setup( $AirLockDoorButton_archetype,"ShuttleDoorControl" );
}

//---------------------
// gravity_objects
// thread that calls all objects that are to be affected by gravity when the gravity is turned back on
//---------------------
void gravity_objects()
{
	thread gravity_objects_barrel1();
	thread gravity_objects_barrel2();
	thread gravity_objects_barrel3();
	thread cinematicGravity_barrel1_move();
	thread cinematicGravity_barrel2_move();

	while( gravity_objects_onground == 0 )
	{
		globalCoop_main_waitZeroDot2();
		if( gravity_on == 1 )
		{
			wait(15);
			gravity_objects_onground = 1;
		}
	}
}

//-------------------------------------
void floatingObject( entity object )
{
	float randombase;
	randombase = randomfloat( 100 );

	// move that thing
	object.time( 1 );
	while( !gravity_on ) {
		object.moveup( sindegrees( randombase + (getleveltime() * 100 )) );
		wait( 0.1 );
	}
}

//---------------------
// gravity_objects_barrel1
// causes the barrel1 objects to fall when gravity is turned back on
//---------------------
void gravity_objects_barrel1()
{
	floatingObject( $lowgravity_barrel1 );

	$lowgravity_barrel1_clip.moveDown( 16 );
	coop_statementSaver_moveUpAndWaitForIt($lowgravity_barrel1,-16);//ENTITY: Move,FLOAT: Ammount
	$lowgravity_barrel1.playsound ( "sound/environment/metal/bigcreak_impact.wav", 5, 1, 5000 );
	wait( 20 );
}

//---------------------
// gravity_objects_barrel2
// causes the barrel2 objects to fall when gravity is turned back on
//---------------------
void gravity_objects_barrel2()
{
	floatingObject( $lowgravity_barrel2 );

	$lowgravity_barrel2_clip.moveDown( 32 );
	coop_statementSaver_moveUpAndWaitForIt($lowgravity_barrel2,-32);//ENTITY: Move,FLOAT: Ammount
	$lowgravity_barrel2.playsound ( "sound/environment/metal/bigcreak_impact.wav", 5, 1, 5000 );
	wait( 20 );
}

//---------------------
// gravity_objects_barrel3
// causes the barrel3 objects to fall when gravity is turned back on
//---------------------
void gravity_objects_barrel3()
{
	floatingObject( $lowgravity_barrel3 );
	$lowgravity_barrel3_clip.moveDown( 64 );
	coop_statementSaver_moveUpAndWaitForIt($lowgravity_barrel3,-64);//ENTITY: Move,FLOAT: Ammount
	$lowgravity_barrel3.playsound ( "sound/environment/metal/bigcreak_impact.wav", 5, 1, 5000 );
}


//==========================================================================================
// Cargo Bay Stuff
//==========================================================================================

//---------------------
// sequenceCargoBayDoorLocked
// cooper walks over to door and him and munro talk
//---------------------
void sequenceCargoBayDoorLocked()
{
	//player breath sounds
		thread coop_newPlayerEntered();
	//if($world.getFloatVar("CargoBayDoor1ButtonSolved") != 1){
		//$world.setFloatVar("sequenceCargoBayDoorLocked",1);
		globalCoop_actor_walkTo($Franklin,"intro_franklinNode3","walk");
		globalCoop_actor_aiOff($Jurot);
		globalCoop_actor_aiOff($Chell);
		
		//We need to restore the main ship systems. Franklin, where are the gravity controls?
		coop_statementSaver_playdialog($Munro,"dallas01/frank_engag.mp3");				
		globalCoop_actor_walkTo($Franklin,"intro_franklinNode4","walk");
		
		//I'll send the location to your tricorder.
		coop_statementSaver_playdialog($Franklin,"dallas01/frank_bypass.mp3");
		
		globalCoop_actor_useWeapon($Franklin,"fed-tricorder-STX");
		$gravity_waypoint.missionobjective(1);
		thread globalCoop_objectives_update("incomplete" ,2,1);
		
		//No power. I can't disengage the lock.  Can you locate it's power console?
		thread coop_statementSaver_playdialog($Franklin,"dallas01/frank_nopower.mp3");
		$Jurot.ai_on();
		$Chell.ai_on();
		
		if(cvar_bool_multiplayer){//Multiplayer
			globalCoop_objectives_update("incomplete",3,1);
		}
		else{//Singleplayer
			$player.setobjectiveshow( "ReroutePowerToCargoBayDoor", 1 );
			$CargoBayDoor1Button_archetype.missionobjective(1);
		}
	//}
}

//---------------------
// GravityUnitButton_Used
// button is used, turns on lights, unlocks door
//---------------------
void GravityUnit_Failed()
{
	$GravityUnitButton.puzzleobject_reset();
}


void GravityUnit_Canceled()
{
	$GravityUnitButton.puzzleobject_reset();
}

void GravityUnit_Used()
{
	entity puzzle;
	puzzle = getcurrententity();
	
	if(	!cvar_bool_multiplayer){//singleplayer
		globalTricorderRoute_Reset();
		globalTricorderRoute_SetSource1Row( 10 );
		globalTricorderRoute_SetSource2Row( 8 );
		globalTricorderRoute_SetDestination1( 3, 10 );
	    globalTricorderRoute_SetDestination2( 2, 8 );
	    
		//--- begin row definitions
	 	globalTricorderRoute_BeginDef();
		coop_stmts_globalTricorderRoute_SetNextRow32();
//	 	globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32, 32, 32, 19, 16, 20, 22, 16, 16 );
	 	globalTricorderRoute_SetNextRow( 19, 16, 20, 17, 32, 17, 17, 11,  8 );
	 	globalTricorderRoute_SetNextRow( 17, 32, 25, 25, 32, 18, 21, 32, 17 );
	 	globalTricorderRoute_SetNextRow( 23, 19, 24, 17, 32, 11,  3, 16,  8 );
	 	globalTricorderRoute_SetNextRow( 25, 17, 25, 21, 25,  7,  9, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 17, 18, 21,  6,  4, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 21, 32, 32,  0, 32, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32,  2, 16,  2, 32, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 16,  7,  6, 32, 32, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32, 32, 11, 32, 32, 32, 32, 32, 32 );

	 	//--- run the puzzle
	 	globalTricorderRoute_Run( puzzle, 0 );
	}
	else{
		globalCoop_level_triggerable($GravityUnitButtonMultipleCloseInTricorder);
	}
 }

//---------------------
// ShuttleBayDoor1Button_Used
// button is used, turns on lights, unlocks door
//---------------------
void shuttleBayDoor1Button_Failed()
{
	$ShuttleBayDoor1Button.puzzleobject_reset();
}


void shuttleBayDoor1Button_Canceled()
{
	$ShuttleBayDoor1Button.puzzleobject_reset();
}

void shuttleBayDoor1Button_Used()
{

	entity puzzle;
	puzzle = getcurrententity();
	

	if(	!cvar_bool_multiplayer){//singleplayer
		globalTricorderRoute_Reset();
		globalTricorderRoute_SetSource1Row( 3 );
		globalTricorderRoute_SetDestination1( 6, 3 );

		//--- begin row definitions
	 	globalTricorderRoute_BeginDef();
		coop_stmts_globalTricorderRoute_SetNextRow32();
	 	//globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 11, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow(  1, 20, 32, 32, 32,  7, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32,  8, 32, 32, 32, 23, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32, 18,  6, 16,  6,  1, 32, 32, 32 );
	 	globalTricorderRoute_SetNextRow( 32, 32,  9, 32,  4, 22,  0,  3,  7 );
	 	globalTricorderRoute_SetNextRow( 32, 32, 17, 32, 32, 32, 32,  2,  6 );
	 	globalTricorderRoute_SetNextRow( 32, 32, 11, 32, 32, 32, 32, 32, 32 );
		coop_stmts_globalTricorderRoute_SetNextRow32();
		coop_stmts_globalTricorderRoute_SetNextRow32();
		coop_stmts_globalTricorderRoute_SetNextRow32();
	 	//globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
	 	//globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
	 	//globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );

	 	//--- run the puzzle
	 	globalTricorderRoute_Run( puzzle, 0 );
	}
 }

//---------------------
// CargoBayDoor1Button_Used
// button is used, turns on lights, unlocks door
//---------------------
void CargoBayDoor1Button_Failed()
{
	$CargoBayDoor1Button.puzzleobject_reset();
}


void CargoBayDoor1Button_Canceled()
{
	$CargoBayDoor1Button.puzzleobject_reset();
}

void CargoBayDoor1Button_Used()
{
	entity puzzle;
	puzzle = getcurrententity();

    globalTricorderRoute_Reset();
	globalTricorderRoute_SetSource1Row( 5 );
	globalTricorderRoute_SetSource2Row( 11 );
	globalTricorderRoute_SetDestination1( 5, 5 );
    globalTricorderRoute_SetDestination2( 7, 11 );

	//--- begin row definitions
    globalTricorderRoute_BeginDef();
	coop_stmts_globalTricorderRoute_SetNextRow32();
	coop_stmts_globalTricorderRoute_SetNextRow32();
	coop_stmts_globalTricorderRoute_SetNextRow32();
	coop_stmts_globalTricorderRoute_SetNextRow32();
    //globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
    //globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
    //globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
    //globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
    globalTricorderRoute_SetNextRow( 16,  1, 16,  5, 11,  6, 16,  1, 16 );
    globalTricorderRoute_SetNextRow( 32, 32, 32,  3, 16, 21, 32, 32, 32 );
    globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 25, 16, 16, 22 );
    globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 19, 21, 32, 32, 32 );
    globalTricorderRoute_SetNextRow( 32, 19, 24, 16, 23, 32, 32, 32, 32 );
    globalTricorderRoute_SetNextRow( 32, 17, 32, 32, 32, 32, 32, 32, 32 );
    globalTricorderRoute_SetNextRow( 16, 21, 32, 32, 32, 32, 32, 32, 32 );

    //--- run the puzzle
    globalTricorderRoute_Run( puzzle, 0 );
}

void CargoBayDoor1Button_Solved()
{
	music( "success" );
//MAKE THE CINEMATICS END
//MAKE THE CINEMATICS END
//MAKE THE CINEMATICS END
//MULTIPLAYER
	$world.setFloatVar("CargoBayDoor1ButtonSolved",1);
	killthread( "sequenceCargoBayDoorLocked" );
//END OF -> MAKE THE CINEMATICS END
//END OF -> MAKE THE CINEMATICS END
//END OF -> MAKE THE CINEMATICS END
	$Franklin.stopdialog();	
	globalArchetype_Setup( $CargoBayDoor1Button_archetype,"CargoDoorControlUsed" );
	$CargoBayDoor1ButtonUsed_archetype.show();

	$CargoBayDoor1Button_archetype.missionobjective(0);
	globalCoop_level_remove($CargoBayDoor1Button_archetype);
	
	CargoBayDoorLocked = 0;

	globalCoop_level_remove($cargoBay_lockedTrigger);
	if(cvar_bool_multiplayer){
		$CargoBayDoor1.wait(-1);
	}
/* 	thread globalCoop_actor_useWeapon($Jurot,"fed-compressionrifle-enhanced");
	globalCoop_actor_useWeapon($Chell,"fed-compressionrifle-enhanced");
	thread globalCoop_actor_useWeapon($Franklin,"fed-compressionrifle-enhanced");
	$Jurot.removeactorweapon("fed-compressionrifle");
	$Chell.removeactorweapon("fed-compressionrifle"); */
	$Jurot.walkto( "introcin_jurot_node3" );
	$Chell.walkto( "introcin_chell_node3" );
	$Franklin.walkto( "introcin_franklin_node3" );

	$CargoBayDoor1.playsound("sound/environment/machine/bigswitch.wav", 3, .7, 1000);
	globalCoop_dynLight_change("lightCargoBay1PanelRed"	,"a","lightCargoBay1PanelGreen"	,"z");//name,style,name,style
	$world.light_intensity( "cargobay_door1_lights", 1 );
	globalCoop_level_triggerable($CargoBayDoor1Trigger);
	coop_statementSaver_hideAndShow($CargoBayDoor1Button_offline,$CargoBayDoor1Button_online);//hide,show
	globalCoop_main_waitZeroDot5();
	
	thread globalCoop_objectives_update("complete" ,3,1);
	//$player.setobjectivecomplete( "ReroutePower", 1 );
	//$player.setobjectivecomplete( "ReroutePowerToCargoBayDoor", 1 );
	
	//That did it. The door's unlocked.
	thread coop_statementSaver_playdialog($Franklin,"dallas01/frank_thatdid.mp3");
	globalCoop_actor_useWeapon($Franklin,"fed-compressionrifle-enhanced");
	thread coop_aiOn();
}

//---------------------
// CargoBayDecompressionSequence
// Does a little thing with effects and dead bodies flying out of the shuttle bay into the player's face
// when the airlock door is opened.
//---------------------
void CargoBayDecompressionSequence()
{
	globalCoop_level_show($shuttle_door);
	$CargoBayDoor1.playsound( "sound/ships/forever/for_doorbeep.wav", 1, .7, 256 );
	$airlockDeadBody.followpath( $airlockDeadBodyPath, "ignoreangles" ); // primed for door open
	$airlockDeadBody.notsolid();
	$CargoBayDoor1.unlock();
	$CargoBayDoor1.playsound( "sound/environment/machine/lift3stop.wav", 2, 1, 256 );
	$CargoBayDoor1.playsound( "sound/environment/wind/wind_vacuum.wav", 6, .6, 2512 );
	$airlockDeadBody.rotatez( 3 );
	$airlockDeadBody.rotatex( 1 );
	$CargoBayDoor1.open( $world );
	globalCoop_level_triggerEntity($airlockFx1);//triggerentity( $airlockFx1 );
	//globalCoop_level_remove($airlockFx1);
}


//---------------------
// CargoBayExit
// When you exit the cargo bay team follows play dialog if needed
//---------------------
void CargoBayExit()
{
	globalCoop_dynLight_setup("hangerFlicker2","aashitzzzzzzzzzzpodaaaaaaaaaacdoptszzzzzzoaaozzoaaaaaaahistzzzoaaaozzoaozzzzzohistxxyzzzzzyxxxvvtooooaaaaaaaaaaa");
	// open the door and play the little dead body sequence with airlock decompression
	thread CargoBayDecompressionSequence();
	globalCoop_main_wait2DotZero();
	thread coop_aiOn();
	$Jurot.settendency ( "follow" , 1.0 );
	$Chell.settendency ( "follow" , 1.0 );
	$Franklin.settendency ( "follow" , 1.0 );
//disable now the gravityunit puzzle triggers, haven't found a better place :)
	// globalCoop_level_notTriggerable($GravityUnitButton);
	// globalCoop_level_notTriggerable($GravityUnitButtonMultipleCloseIn);
	globalCoop_level_notTriggerable($GravityUnitButtonMultipleCloseInTricorder);
}

//---------------------
// AirLockDoorLockedSequence
// played when you walk up to the airlock door, player is told to go crawling through ducts
//---------------------
void AirLockDoorLockedSequence()
{
	//how can I hopen this door?
	coop_statementSaver_playdialog($Munro,"dallas01/munro_howdoor.mp3");
	globalCoop_main_wait1DotZero();
	
	//Locked. We can't bypass these doors.
	coop_statementSaver_playdialog($Chell,"dallas01/chell_cantby.mp3");
	//At least, not from this side. But there should be some ducts and repair tubing that goes out.
	coop_statementSaver_playdialog($Franklin,"dallas01/frank_notside.mp3");
	thread globalCoop_objectives_update("incomplete",4,1);
 	if(!cvar_bool_multiplayer){//sp
		$player.setobjectiveshow( "UnlockDoors",1);
		$AirLockDoorButton_archetype.missionobjective(1);
	}
}

//==========================================================================================
// AirLock/Jtube area
//==========================================================================================

//---------------------
// EnterJTubesSequence
// plays when munro goes into ducts, ai wanders around waiting
//---------------------
void EnterJTubesSequence()
{
	music( "mystery", "normal" );

	// get rid of the lurker on the bridge, in case you didn't trigger him
	globalCoop_level_remove($scare_lurker1);

//Wait here. I want to see where this duct leads.
	coop_statementSaver_playdialog($Munro,"dallas01/munro_waitduct.mp3");	
	//$CargoBayDoor1.close();
//make the door use to open, else lock the door if single player
	//globalCoop_doors_lockInSpOnly($CargoBayDoor1);
	
	thread globalCoop_actor_walkTo($Chell,"gravity_chellNode1","walk");
	thread globalCoop_actor_walkTo($Jurot,"gravity_jurotNode1","walk");
	thread globalCoop_actor_walkTo($Franklin,"gravity_franklinNode1","walk");
}

//---------------------
// AirLockDoorButton_Used
// AirLockDoor Unlocks and Opens
//---------------------
void AirLockDoorButton_Used()
{
//allow loading next mission on timeranout
	globalCoop_mission_accomplished();
//allow loading next mission on timeranout
	globalCoop_level_triggerable($endLevelTrigger);
	$endLevelTrigger.thread("AirLockClose");
	globalArchetype_Setup( $AirLockDoorButton_archetype,"ShuttleDoorControlUsed" );
	globalCoop_level_remove($AirLockDoorButton_archetype);
	//$AirLockDoorButtonUsed_archetype.show();

	$AirLockDoorButton_archetype.missionobjective(0);
	//$AirLockDoorButton_archetype.archetype( "NonInteractive" );
	coop_statementSaver_hideAndShow($AirLockDoorButton_offline,$AirLockDoorButton_online);
	$AirLockDoorButton_online.playsound ( "sound/ships/forever/for_doorbeep.wav", 3, .9, 10000);

//spawnorigins, Spawn Players on those locations, at map start
	coop_vector_spawnOrigin1 			= '1131 0 10';
	coop_vector_spawnOrigin2 			= '1131 70 10';
	coop_vector_spawnOrigin3 			= '1131 140 10';
	coop_vector_spawnOrigin4 			= '1131 210 10';
	coop_vector_spawnOrigin5 			= '1131 280 10';
	coop_vector_spawnOrigin6 			= '1131 430 10';
	coop_vector_spawnOrigin7 			= '1131 500 10';
	coop_vector_spawnOrigin8 			= '1131 570 10';
//Applay vectors to the respawn vars as well	
	globalCoop_applaySpawnOriginOnReSpwanOrigin();
	
	music( "success" );
	globalCoop_level_remove($triggerAirLockDoorLocked);
	globalCoop_level_remove($shuttleBay_lockedTrigger);
	coop_statementSaver_hideAndShow($airlockdoor1_red,$airlockdoor1_green);//hide,show
	
	$airlockdoor1_green.playsound ( "sound/ships/forever/for_doorbeep.wav" , 30 , .35 , 100 );
	
//Inizial objective
	thread globalCoop_objectives_update("complete" ,4,1);
	if(!cvar_bool_multiplayer){
		$player.setobjectivecomplete( "UnlockDoors",1);
	}

	$world.light_lightstyle ( "airlockdoor1_red", "baaaaaaaaaaaaaaaaa" );
	$world.light_lightstyle ( "airlockdoor1_green", "aaaaaaaaaazzzzzzzzzz" );

	
//Spawn players at the start again, relocate classes
	coop_spawnloactaionsAlpha();
	globalCoop_applaySpawnOriginOnReSpwanOrigin();
	
	$AirLockDoor.open( $world );

	globalCoop_main_wait1Dot5();
	$world.light_lightstyle ( "airlockdoor1_green", "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy" );
	
	// $Chell.warpto ( "$AirLockWarpChell" );
	// $Jurot.warpto ( "$AirLockWarpJurot" );
	// $Franklin.warpto ( "$AirLockWarpFranklin" );
	
	thread globalCoop_actor_walkTo($Chell,"$AirLockWarpChell","run");
	thread globalCoop_actor_walkTo($Jurot,"$AirLockWarpJurot","run");
	globalCoop_actor_walkTo($Franklin,"$AirLockWarpFranklin","walk");
	
	thread coop_aiOn();
	globalCoop_main_wait1Dot5();
	//Welcome back.
	coop_statementSaver_playdialog($Jurot,"dallas01/jurot_welcome.mp3");
	//Enigneering is close by.  We should be able to restore the ship's power from there.
	coop_statementSaver_playdialog($Franklin,"dallas01/frank_engclose.mp3");
	thread coop_waitForTeam();

	//$player.setobjectivecomplete( "UnlockDoors", 1 );
	//globalCoop_level_triggerable($AirLockCallVolume);
}

//---------------------
// catwalk_teammatedialog1
// teammates exchangedialog below player on the catwalk
//---------------------
void catwalk_teammatedialog1()
{
//It occurs to me that if these invaders can chew through an outer hull, we're not safe anywhere on the ship.
	coop_statementSaver_playdialogNoHead($Chell,"dallas01/chell_occurs.mp3");
//Our lack of safety is only now occurring to you?
	coop_statementSaver_playdialogNoHead($Jurot,"dallas01/jurot_lack.mp3");
//Phaser fire I understand. Having a deck chewed out from under me, though...
	coop_statementSaver_playdialogNoHead($Chell,"dallas01/chell_phaser.mp3");
//OK, that saliva does not prove they chewed their way in.
	coop_statementSaver_playdialogNoHead($Franklin,"dallas01/frank_saliva.mp3");
//No. Maybe the invaders just like to drool on blast edges!
	coop_statementSaver_playdialogNoHead($Chell,"dallas01/chell_drool.mp3");
//Speculation without facts is futile.
	coop_statementSaver_playdialogNoHead($Jurot,"dallas01/jurot_futile.mp3");
//Why does your team leader go off on scouting missions? Isn't he too valuable to risk?
	coop_statementSaver_playdialogNoHead($Franklin,"dallas01/frank_leader.mp3");
//Dont' ask.
	coop_statementSaver_playdialogNoHead($Chell,"dallas01/chell_dontask.mp3");
}

void catwalk_stop_teammatedialog1()
{
//Stop talking dudes if singleplayer, but not in multiplayer!!!
	if(!cvar_bool_multiplayer){
		killthread( "catwalk_teammatedialog1" );
	}
//move class selection
	thread globalCoop_level_moveToPos($coop_class_MedicModel,'-611 1377 -2');
	thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-530 1377 -2');
	thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-457 1377 -2');
}

//==========================================================================================
// GRAVITY PUZZLE FUNCTIONS
//==========================================================================================

//---------------------
// gravityUnit_Expose
// calls the function to expose the gravity unit from it's chamber
//---------------------
void gravityUnit_Expose()
{
	thread globalCoop_level_onUse($gravityUnit_ExposeSwitch,"gravityUnit_ExposeFunction");
}

//---------------------
// gravityUnit_ExposeFunction
// opens the door and exposes the gravity unit
//---------------------
void gravityUnit_ExposeFunction()
{
	if(!cvar_bool_multiplayer){
		$GravityUnitButton.puzzleobject_activate();
	}
	//--- make the switch unusable
	$gravityUnit_ExposeSwitch.nouse();
	$gravityUnit_ExposeSwitch.playsound ( "sound/ships/forever/for_doorbeep.wav", 3, .9, 10000);

	//--- set the times on the objects
	$gravityUnit.time( 1.25 );
	$gravityUnit_Door1.time( .75 );
	$gravityUnit_Door2.time( .75 );

	//--- slide the door aside
	$gravityUnit_Door1.moveEast( 24 );
	$gravityUnit_Door2.moveWest( 24 );
	waitfor( $gravityUnit_Door1 );
	
	$gravityUnit.playsound ( "sound/ships/forever/for_gravpanel.wav", 3, .9, 1000);
	globalCoop_main_waitZeroDot5();
	
	//--- slide the unit forward
	$gravityUnit.movenorth( 36 );
	waitfor( $gravityUnit );
	$gravityUnit.playsound ( "sound/ships/forever/for_gravpanelstop.wav", 3, .9, 1000);
	thread globalCoop_level_triggerable($GravityUnitButtonMultipleCloseInTricorder);
	//--- make it so the unit can be used
	//NEED TO TURN ON ROUTING PUZZLE OBJECT HERE INSTEAD
	//globalArchetype_Setup( $gravityUnit_archetype, "GravityControls" );

	globalCoop_main_waitZeroDot2();
	$gravityUnit_archetype.missionobjective(1);
}

//---------------------
// gravityUnit_ActivateFunction
// calls the functions that restore gravity
//---------------------
void gravityUnit_ActivateFunction()
{	
	//COMPUTER VOICE DIALOG FOR RESTORING GRAVITY SYSTEMS HERE
	thread coop_statementSaver_playdialogNoHead($Chell,"dallas01/comp_gravsyson.mp3");
	
	//--- hide the "off" gravity panel and show the "on" gravity panel
	globalCoop_level_remove($gravityUnit_archetype);
	globalCoop_level_remove($gravityUnit);
	globalCoop_level_showAndSolid($gravityUnit_online);

	//music( "aux3", "normal" );
	$gravityUnit_online.playsound ( "sound/ships/forever/for_poweron.wav", 3, .9, 100000);
	$gravityUnit_online.loopsound ( "sound/ships/forever/for_rumble3.wav",.4, 40000);

	// swap panels
	globalCoop_level_show($statuspanel1_on);
	globalCoop_level_show($statuspanel2_on);
	globalCoop_level_show($statuspanel3_on);//show,show,show
	globalCoop_level_remove($statuspanel1_off);
	globalCoop_level_remove($statuspanel2_off);
	globalCoop_level_remove($statuspanel3_off);

	//--- activate gravity
	$world.physicsvar ( "gravity" , 800 );
	gravity_on = 1;

	//--- elevator triggers activate
	globalCoop_level_triggerable($triggerElevator_Call);

	//--- lock the lower jtube door to prevent the player from returning to the team, if single player
	if(!cvar_bool_multiplayer){
		globalTubeDoor_Lock( "doorJTubeElevatorShaftLevel1_South" );
	}
	//thread globalTubeDoor_Setup ( "doorJTubeElevatorShaftLevel1_South", "normal", 36, "east_west", 1 );

	globalCoop_dynLight_change("lightJTubeElevatorShaftLevel1_South_Red","z","lightJTubeElevatorShaftLevel1_South_Green", "a");

	//--- unlock the upper jtube door to allow the player to continue
	globalTubeDoor_Unlock( "doorJTubeElevatorShaftLevel2_East" );
	globalCoop_dynLight_change("lightJTubeElevatorShaftLevel2_East_Red", "a","lightJTubeElevatorShaftLevel2_East_Green", "z");

	coop_statementSaver_hideAndShow($unlockedlightJTubeElevatorShaftLevel1_South,$lockedlightJTubeElevatorShaftLevel1_South);//hide,show
	
	//$player.setobjectivecomplete( "RestoreGravity", 1 );
	thread globalCoop_objectives_update("complete" ,2,1);

	//start the cinematic stuff
	coop_statementSaver_hideAndShow($cinematicGravity_barrel1,$cinematicGravity_barrel1_fall);//hide,show
	coop_statementSaver_hideAndShow($cinematicGravity_barrel2,$cinematicGravity_barrel2_fall);//hide,show
	$cinematicGravity_barrel1.bind( $cinematicGravity_barrel1_clip );
	$cinematicGravity_barrel1_fall.bind( $cinematicGravity_barrel1_clip );

	$cinematicGravity_barrel2.bind( $cinematicGravity_barrel2_clip );
	$cinematicGravity_barrel2_fall.bind( $cinematicGravity_barrel2_clip );

	if(!cvar_bool_multiplayer){//singlePlayer
		//set skipthread
//start cinematic rutine
		globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/gravityUnit_ActivateFunction1.cfg");
/* 		$player.notsolid();
		$player.hide();
		freezeplayer();
		cinematic(); */
		globalCoop_main_camFadeOut(.4);
		globalCoop_main_waitZeroDot5();
		letterbox( .1 );
		coop_aiOn();
		globalCoop_main_waitZeroDot2();

		$Chell.origin( '-1432 8 0' );
		$Franklin.origin( '-1392 -16 0' );
		$Franklin.origin( '-1392 -16 0' );
		$Jurot.origin( '-1328 -16 0' );

		globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/gravityUnit_ActivateFunction2.cfg");
/* 		$Chell.angle( 45 );
		$Franklin.angle( 60 );
		$Jurot.angle( 110 ); */	
		globalCoop_main_camFadeIn(.4);
		globalCoop_main_waitZeroDot5();
		globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/gravityUnit_ActivateFunction3.cfg");
/* 		$cam5.fov( 90 );
		$cam5.follow( $m3l1a_gravity_adam1 );
		cuecamera( $cam5 );
		$cam5.cut(); */

		//fade in camera
		globalCoop_main_camFadeOut(0.5);
	}
	thread cinematicGravity_crewDead1_move();

	$cinematicGravity_barrel1_clip.time( .5 );
	$cinematicGravity_barrel2_clip.time( .5 );
	$cinematicGravity_barrel1_clip.moveDown( 130 );
	$cinematicGravity_barrel2_clip.moveDown( 34 );

	cinematicGravity_objectshavefallen = 1;

	wait( .55 );

	// play sounds of barrels and bodies falling down and clanging against the metal of the ship
	$cinematicGravity_barrel1_clip.time( .25 );
	$cinematicGravity_barrel1_clip.moveUp( 8 );
	$cinematicGravity_barrel1_clip.moveEast( 8 );
	$cinematicGravity_barrel1_clip.moveNorth( 4 );

	$cinematicGravity_barrel2_clip.time( .25 );
	$cinematicGravity_barrel2_clip.moveUp( 8 );
	$cinematicGravity_barrel2_clip.moveWest( 4 );
	$cinematicGravity_barrel2_clip.moveSouth( 8 );

	waitfor( $cinematicGravity_barrel1_clip );

	$cinematicGravity_barrel1_clip.time( .25 );
	$cinematicGravity_barrel1_clip.moveDown( 8 );
	$cinematicGravity_barrel1_clip.moveEast( 8 );
	$cinematicGravity_barrel1_clip.moveNorth( 4 );

	$cinematicGravity_barrel2_clip.time( .25 );
	$cinematicGravity_barrel2_clip.moveDown( 8 );
	$cinematicGravity_barrel2_clip.moveWest( 4 );
	$cinematicGravity_barrel2_clip.moveSouth( 8 );

	waitfor( $cinematicGravity_barrel1_clip );

	if(!cvar_bool_multiplayer){//singlePlayer
		globalCoop_main_wait2DotZero();
	//end cinematic
		globalCoop_main_camFadeOut(.2);
		globalCoop_main_waitZeroDot2();
		globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/gravityUnit_ActivateFunction4.cfg");
/* 		$player.solid();
		$player.show();
		noncinematic();
		releaseplayer();
		clearletterbox( 1 );
		cueplayer(); */
		globalCoop_main_camFadeIn(.2);
	}
}

//---------------------
// gravityUnit_ActivateFunction_SkipThread
// skip thread for the gravity cinematic
//---------------------
void gravityUnit_ActivateFunction_SkipThread()
{
	//kill the cinematic
	killthread( "gravityUnit_ActivateFunction" );

	if( cinematicGravity_objectshavefallen == 0 )
	{
		$cinematicGravity_barrel1_fall.time( .1 );
		$cinematicGravity_barrel1_clip.time( .1 );
		$cinematicGravity_barrel2_fall.time( .1 );
		$cinematicGravity_barrel2_clip.time( .1 );

		//$cinematicGravity_barrel1_fall.moveDown( 130 );
		$cinematicGravity_barrel1_clip.moveDown( 130 );
		//$cinematicGravity_barrel2_fall.moveDown( 32 );
		$cinematicGravity_barrel2_clip.moveDown( 34 );
		waitfor( $cinematicGravity_barrel1_fall );
	}

	thread cinematicGravity_crewDead1_move();

	thread coop_aiOn();

	globalCoop_main_wait1DotZero();
	
//end cinematic
	globalCoop_main_camFadeOut(.2);
	globalCoop_main_waitZeroDot2();
	globalCoop_main_executeInSp("coop_mod/cfg/maps/m3l1a/gravityUnit_AF_SkipThread.cfg");
/* 	$player.solid();
	$player.show();
	noncinematic();
	releaseplayer();
	clearletterbox( 1 );
	cueplayer(); */
	globalCoop_main_camFadeIn(.2);
}

//==========================================================================================
// BROKEN TURBOLIFT FUNCTIONS
//==========================================================================================

//---------------------
// elevatorFall_MiddlePosition
// makes the elevator fall to get stuck into it's middle position for the player to jump on
//---------------------
void elevatorFall_MiddlePosition()
{
	$BrokenTurboLiftOrigin.warp('-2807 1176 3525');
	
	//--- massive earthquake and music cue
	$BrokenTurboLiftOrigin.earthquake( 2, .75 );
	music( "surprise", "normal" );

	//--- turn on spark emitters and play creak sound
	$BrokenTurboLiftSparks.show();
	$BrokenTurboLiftSparks.playsound ( "sound/environment/metal/bigcreak.wav", 3, .9, 10000);
	globalCoop_main_wait1DotZero();
	//--- make the elevator shake on the way down
	//--- make elevator fall
	$BrokenTurboLiftSparks.playsound( "sound/environment/metal/metal_scrape1.wav", 3, .9, 10000 );
	thread elevatorFall_Shake();
	coop_statementSaver_moveToWithinTime($BrokenTurboLiftOrigin,$BrokenTurboLiftEnd,2);//ENTITY:move,toMe,FLOAT:time
	globalCoop_main_wait2DotZero();
	$world.light_intensity( "turbo_lift_lights", .5 );
	
	//--- massive earthquake and sound
	$BrokenTurboLiftOrigin.earthquake( 1, .75 );
	$BrokenTurboLiftSparks.playsound ( "sound/environment/metal/bigcreak_impact.wav", 2, .9, 10000);
	$BrokenTurboLiftSparks.hide();

	$world.light_intensity( "turbo_lift_lights", 1 );
}


//---------------------
// elevatorFall_Shake
// makes the elevator shake as it moves down
//---------------------
void elevatorFall_Shake()
{
coop_statementSaver_rotateXrotateYrotateZWithin_up($BrokenTurboLift,-1,2,-1,.1);//ENTITY:rotateMe,FLOAT:x,y,z,time
	waitfor( $BrokenTurboLift );

coop_statementSaver_rotateXrotateYrotateZWithin_up($BrokenTurboLift,3,-2,-2,1.6);//ENTITY:rotateMe,FLOAT:x,y,z,time
	waitfor( $BrokenTurboLift );

coop_statementSaver_rotateXrotateYrotateZWithin_up($BrokenTurboLift,-1,-1,3,.1);//ENTITY:rotateMe,FLOAT:x,y,z,time*
	waitfor( $BrokenTurboLift );
}


//---------------------
// elevatorFall_EndingPosition
// makes the elevator fall from the middle postion down into the void
//---------------------
void elevatorFall_EndingPosition()
{
	//--- massive earthquake and sound
	$BrokenTurboLift.earthquake( 2, .75 );
	$BrokenTurboLift.playsound ( "sound/environment/metal/bigcreak.wav", 3, .9, 10000);
	//--- make the elevator fall down into posistion
	$BrokenTurboLiftSparks.show();

	//--- make the elevator shake on the way down
	thread elevatorFall_Shake();

	//--- shake the elevator as it falls
	$world.light_intensity( "turbo_lift_lights", 1 );
	$BrokenTurboLiftOrigin.time( 1 );
	$BrokenTurboLiftOrigin.moveDown( 348 );
	waitfor( $BrokenTurboLiftOrigin );
	$world.light_intensity( "turbo_lift_lights", .75 );
	$BrokenTurboLiftOrigin.time( .5 );
	$BrokenTurboLiftOrigin.moveDown( 348 );
	waitfor( $BrokenTurboLiftOrigin );
	$world.light_intensity( "turbo_lift_lights", .5 );
	$BrokenTurboLiftOrigin.time( .2 );
	$BrokenTurboLiftOrigin.moveDown( 348 );
	waitfor( $BrokenTurboLiftOrigin );
	$world.light_intensity( "turbo_lift_lights", .2 );
	$BrokenTurboLiftOrigin.time( .75 );
	$BrokenTurboLiftOrigin.moveDown( 348 );
	waitfor( $BrokenTurboLiftOrigin );
	$BrokenTurboLift.playsound ( "sound/environment/metal/bigcreak_impact.wav", 2, .9, 10000);
	//--- hide the sparks
	$BrokenTurboLiftSparks.hide();
}

void turboliftShaft_lightdie1()
{
	$world.light_lightstyle( "lightAreaFlicker2", "a" );

	$turboliftShaft_lightdie1_explosion.spawntargetname( "turboliftShaft_lightdie1_exploder" );
	$turboliftShaft_lightdie1_explosion.modelname( "fx/fx-explosion-console-blue.tik" );
	globalCoop_level_triggerEntity($turboliftShaft_lightdie1_explosion);
	globalCoop_main_wait1DotZero();

	$turboliftShaft_lightdie1_explosion.modelname( "fx/fx-sparks-random-blue-medium.tik" );
	globalCoop_level_triggerEntity($turboliftShaft_lightdie1_explosion);
	globalCoop_main_wait1DotZero();

	globalCoop_level_remove($turboliftShaft_lightdie1_explosion);
}

//==========================================================================================
// Misc
//==========================================================================================

//---------------------
// Close the airlock
// Closes the airlock and readies the level transition trigger
//---------------------
void AirLockClose()
{
	// make sure player stays in airlock room
	if(!cvar_bool_multiplayer){$airlockclip.solid();}

	coop_statementSaver_hideAndShow($airlockdoor1_green,$airlockdoor1_red);//hide,show

	$airlockdoor1_red.playsound ( "sound/ships/forever/for_doorbeep.wav" , 30 , .35 , 100 );

	globalCoop_dynLight_change("airlockdoor1_green","a","airlockdoor1_red","zzzzzzzzzzaaaaaaaaaa");

// close the airlock door
	$AirLockDoor.close();

//make the door use to open, else lock the door if single player
	globalCoop_doors_lockInSpOnly($AirLockDoor);
	$world.light_lightstyle ( "airlockdoor1_red", "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzy" );
	globalCoop_main_wait1DotZero();
	$airlockdoor2_red.playsound ( "sound/ships/forever/for_beeps1.wav" , 30 , 1 , 100 );
	globalCoop_main_wait1DotZero();
	globalCoop_level_triggerable($exitTrigger);
	coop_statementSaver_hideAndShow($airlockdoor2_red,$airlockdoor2_green);//hide,show
	$airlockdoor2_red.playsound ( "sound/ships/forever/for_doorbeep.wav" , 30 , 1 , 100 );
	globalCoop_dynLight_change("airlockdoor2_red","a","airlockdoor2_green","zzzzzzzzzzaaaaaaaaaa");
	globalCoop_main_wait1DotZero();
	globalCoop_dynLight_change("airlockdoor2_green","z","","");
	thread ChangeLevel();
}

//---------------------
// ChangeLevel
// changes level to m3l1b
//---------------------
void ChangeLevel()
{
/* entity e;
	e = getCurrentEntity();
	globalCoop_level_notTriggerable(e);
	
	vector v;
	$endLevelTrigger.playsound( "sound/ships/forever/for_doorbeep.wav" , 30 , .35 , 100 );

	// chell
	setvectorvar( "game.saveChellOrigin", $Chell.getorigin() );
	v = $Chell.getangles();
	setfloatvar( "game.saveChellAngle", v_y );

	// jurot
	setvectorvar( "game.saveJurotOrigin", $Jurot.getorigin() );
	v = $Jurot.getangles();
	setfloatvar( "game.saveJurotAngle", v_y );

	// franklin
	setvectorvar( "game.saveFranklinOrigin", $Franklin.getorigin() );
	v = $Franklin.getangles();
	setfloatvar( "game.saveFranklinAngle", v_y );

	// player
	//setvectorvar( "game.savePlayerOrigin", $player.getorigin() );

	setfloatvar( "game.savedTeamPos", 1 ); */
	
	if(!cvar_bool_multiplayer){
		spawn ( "trigger_changelevel", "targetname", "trigger_endlevel", "map", "m3l1b-forever" );
		globalCoop_main_waitAFrame();
		globalCoop_level_triggerEntity($trigger_endlevel);
	} 
}

//---------------------
// CargoBayDoor1Button_panel_open
// causes the panel on the cargo bay button to open
//---------------------
void CargoBayDoor1Button_panel_open()
{
	coop_statementSaver_moveToWithinTime($CargoBayDoor1Button_panel, $CargoBayDoor1Button_panel_openpoint1,1);//ENTITY:move,toMe,FLOAT:time
	waitfor( $CargoBayDoor1Button_panel );
}

//---------------------
// CargoBayDoor1Button_panel_close
// causes the panel on the cargo bay button to close
//---------------------
void CargoBayDoor1Button_panel_close()
{
	coop_statementSaver_moveToWithinTime($CargoBayDoor1Button_panel,$CargoBayDoor1Button_panel_closepoint1,1);//ENTITY:move,toMe,FLOAT:time
	waitfor( $CargoBayDoor1Button_panel );
}

//---------------------
// AirLockDoorButton_panel_open
// causes the panel on the air lock door button to open
//---------------------
void AirLockDoorButton_panel_open()
{
	coop_statementSaver_moveToWithinTime($AirLockDoorButton_panel,$AirLockDoorButton_panel_openpoint1,1);//ENTITY:move,toMe,FLOAT:time
	waitfor( $AirLockDoorButton_panel );
}

//---------------------
// AirLockDoorButton_panel_close
// causes the panel on the air lock door button to close
//---------------------
void AirLockDoorButton_panel_close()
{
	coop_statementSaver_moveToWithinTime($AirLockDoorButton_panel,$AirLockDoorButton_panel_closepoint1,1);//ENTITY:move,toMe,FLOAT:time
	waitfor( $AirLockDoorButton_panel );
}

//==========================================================================================
// Misc and Sound Stuff
//==========================================================================================

void waypoint_remove()
{
	$gravity_waypoint.missionobjective(0);
	globalCoop_level_remove($gravity_waypoint);
}

void scare_lurker1_go()
{
 	music( "surprise", "normal" );
	$scare_lurker1.walkto( "scare_lurker1_end","run");
	$scare_lurker1.playsound ( "sound/chars/lurker/lurk_spottarget_amb.wav", 12, 1 , 1000 );
	globalCoop_main_waitZeroDot2();
//What was THAT?
	coop_statementSaver_playdialog($Chell,"dallas01/chell_whatthat.mp3");
	waitfor( $scare_lurker1 );
	thread coop_statementSaver_playSoundAndRemove($scare_lurker1,"sound/chars/lurker/lurk_idle2.wav", 1, 0.3, 1500 );
}

void scare_lurker2_go()
{
//Set new respawn points
	coop_vector_spawnOrigin1 			= '-2500 705 390';
	coop_vector_spawnOrigin2 			= '-2400 705 390';
	coop_vector_spawnOrigin3 			= '-2500 880 390';
	coop_vector_spawnOrigin4 			= '-1521 1224 416.2';
	coop_vector_spawnOrigin5 			= '-2400 870 390';
	coop_vector_spawnOrigin6 			= '-2646 854.21 390';
	coop_vector_spawnOrigin7 			= '-2550 870 390';
	coop_vector_spawnOrigin8 			= '-2600 1100 390';
//Applay values on the respawn origins as well
	globalCoop_applaySpawnOriginOnReSpwanOrigin();
//move class selection
	thread globalCoop_level_moveToPos($coop_class_MedicModel,'-2430 1501 192');
	thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-2432 1423 192');
	thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-2434 1343 192');
	
	music( "aux2", "normal" );

	//$scare_lurker2.notsolid();
	$scare_lurker2.playsound( "sound/chars/lurker/lurk_alert_amb.wav", 1, 0.7, 500 );

	coop_statementSaver_moveUpAndWaitForItWintin($scare_lurker2,8,0.25);//ENTITY:Move,FLOAT:units,time
	
	coop_statementSaver_moveUpAndWaitForItWintin($scare_lurker2,64,0.5);//ENTITY:Move,FLOAT:units,time
	globalCoop_level_remove($scare_lurker2);
	
	$BrokenTurboLiftSparks.playsound ( "sound/environment/metal/metal_scrape4.wav", 3, .9, 1000);
}

void inaccessible_sound()
{
	entity e;
	e = getcurrententity();
	e.playsound( "sound/doors/door_locked.wav", 1, .7, 90 );
}

void wallsecret_open()
{
	music( "mystery" );

	$fakestarfish2.origin( '-896 1268 428' );

	//--- unlock the lower jtube door
	globalTubeDoor_Unlock( "doorJTubeElevatorShaftLevel1_South" );
	//thread globalTubeDoor_Setup ( "doorJTubeElevatorShaftLevel1_South", "normal", 36, "east_west", 0 );

	globalCoop_level_triggerable($secretStarshipTrigger);

	$wallsecret_top.bind( $wallsecret_top_origin );
	$wallsecret_top_origin.time( 0.1 );
	$wallsecret_top_origin.rotateto( '-80 0 0' );
}

void shuttle_secret()
{
	//--- show the interior of the shuttle and spawn the secret starfish
	//$shuttle.origin( '-367.90 -125.00  0.00' );
	$shuttle_interior.origin( '-367.90 -125.00  0.00' );
	globalCoop_level_show($shuttle_interior);
	globalCoop_level_show($shuttle_door1);
	globalCoop_level_show($shuttle_door2);	
	$fakestarfish1.origin( '-368 -8 56' );

	music( "mystery" );

	//--- open the shuttle door
	globalCoop_actor_animateWaitForAnimation($shuttle_door,"opening");//entity,anim
	$shuttle_door.anim( "open_idle" );

	globalCoop_level_remove($shuttle_clip);
	$shuttle_clip_int.solid();
}

void coop_aiOn()
{
	followPlayer($Chell);
	followPlayer($Jurot);
	followPlayer($Franklin);
	
	globalCoop_teammate_register($Chell);
	globalCoop_teammate_register($Franklin);
	globalCoop_teammate_register($Jurot);
	
	$Chell.ai_on();
	$Franklin.ai_on();
	$Jurot.ai_on();
}


void coop_aiOff()
{
	$Munro.ai_off();
	$Chell.ai_off();
	$Franklin.ai_off();
	$Jurot.ai_off();
}

void coop_spawnloactaionsAlpha()
{
//spawnorigins for level start and level ending
	coop_vector_spawnOrigin1 			= '1131 0 10';
	coop_vector_spawnOrigin2 			= '1131 70 10';
	coop_vector_spawnOrigin3 			= '1131 140 10';
	coop_vector_spawnOrigin4 			= '1131 210 10';
	coop_vector_spawnOrigin5 			= '1131 280 10';
	coop_vector_spawnOrigin6 			= '1131 430 10';
	coop_vector_spawnOrigin7 			= '1131 500 10';
	coop_vector_spawnOrigin8 			= '1131 570 10';
}


void coop_waitForTeam()
//------------------------------------------------------------------------------
//waitForPlayers beeing close, end then the Level
//------------------------------------------------------------------------------
{
	globalCoop_main_waitForTeam('-361 1167 85','-350 -350 -200','350 350 300');
	coop_endLevel();
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	stuffcmd("seta coop_igmH 0\n");
	thread globalCoop_mission_completed("m3l1b-forever");
}



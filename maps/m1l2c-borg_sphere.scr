//-----------------------------------------------------------------
//  EF2 Level Script File
//
//  Level:	  m1l2c-borg_sphere
//  Script By:    A. Bellefeuil, J. Keehan
//  Geometry By:  A. Bellefeuil, J. Keehan
//  Created on:   04/29/2002
//
//	Last edited: 10/24/2002 JK
//-----------------------------------------------------------------
void main();
void init();

void SetupSounds();
void setup_m1l2b_to_m1l2c();
void initializeObjectives();

void activateTeamAI();

//void TempTelsiaHere();
void coop_liftDownUpdateSpawn();
void SecondPathLift_Move();
void SecondPathLift_ShortMoveDown1();
void SecondPathLift_ShortMoveDown2();
void SecondPathLift_Warp();

void Grate1_Wait();
void Grate1_Destroyed();
void GreenField1Power_Wait();
void GreenField1Power_Destroyed();
void setup_plasmaConduits();
void destroyPlasmaConduit1();
//void Plasma1_Wait();
void Plasma1_Destroyed();
//void DisNode1_Wait();
//void DisNode1_Destroyed();
void DisNode3_Wait();
void DisNode3_Destroyed();

void Generator3_Animate();
void Generator3FieldPower_Wait();
void Generator3FieldPower_Destroyed();
void Generator3Button_Open();
void Generator3Button_Close();

//void Generator3Button_Wait();
//void Generator3Button_Use();
//void Generator3Button_ModulateStart();
//void Generator3Button_ModulateEnd();
//void Generator3Button_Check();
void Generator3_TurnOff();
void Generator3Modulated_Dialog();

void BorgSetup();
void Group1_Spawn1();
void Group4_Spawn1();
void Group5_Spawn1();

void Group1_Active();
void Group2_Active();
void Group3_Active();

void LevelEnd();
void coop_endLevel();

void PathGenerator1FieldPower_Destroyed();

float GeneratorLevelComplete = 0;
float Generator3_On = 1;
float Generator3Modulated = 0;

float Generator3Button_ModulateLastAmount = 0;
float Generator3Button_ModulateAmount = 0;
float coop_liftDown = 0;

//-----------------------------------------------------------------
//-----------------------------------------------------------------
//  INCLUDES
//-----------------------------------------------------------------
//-----------------------------------------------------------------
#include "coop_mod/maps/main.scr"
#include "coop_mod/maps/global/global_common.scr"
#include "coop_mod/maps/optional_modules/teammate.scr"
#include "coop_mod/maps/optional_modules/puzzles_advanced.scr"
#include "coop_mod/maps/optional_modules/forcefields.scr"
#include "coop_mod/maps/optional_modules/callVolume.scr"
#include "coop_mod/maps/missions/1/forcefields.scr"
#include "coop_mod/maps/missions/1/m1l2-bc-objectives.scr"
#include "coop_mod/maps/global/global_tricorderBase.scr"
#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_cinematicFX.scr"
#include "maps/global_scripts/global_debugutils.scr"
#include "maps/global_scripts/global_tricordermod.scr"
#include "maps/m1/m1_deathCinematic.scr"
#include "coop_mod/maps/missions/1/m1l2c_cin.scr"

//===================================================
// Main Stuff
//===================================================
//---------------------
// main
// do start up stuff
//---------------------
void main()
{
	globalCoop_server_precacheSingleplayer();
	soundtrack( "music/m1l2-borg_sphere.mus" );
	$Munro_EndCinematic.ai_off();
	$Chell_EndCinematic.ai_off();
	$Telsia_EndCinematic.ai_off();
	globalCoop_level_hideAndNotSolid($Munro_EndCinematic);
	globalCoop_level_hideAndNotSolid($Chell_EndCinematic);
	globalCoop_level_hideAndNotSolid($Telsia_EndCinematic);
	
//remove chang
	globalCoop_level_remove($Chang_EndCinematic);
	globalCoop_level_remove($chang);
	
	if(getCvarInt("g_gametype") != 0){
		globalCoop_level_remove($munro_assimilate);
	}
	
	//$sky.rendereffects( "+skyorigin" );
	$world.entity_fade_dist( 8000 );//8000
	$world.farplane ( 25000 );
	$world.farplane_cull( 0 );
	//$world.farplane_color ( '0 .26 .13' );//.47 .69 .13 .64 .95 .14

//Co-Op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	coop_string_nextMapToCheck			= "m1l3-borg_boss";//set the map we gona load next while we are in testmode
//Set spawnangles for this level

	coop_float_spawnAngle0 				= 90;
	
	if(getCvar("coop_lvlP") == "m1l2aTom1l2c"){
		coop_vector_spawnOrigin8 			= '1450 2262 425';
		coop_vector_spawnOrigin7 			= '1520 2262 425';
		coop_vector_spawnOrigin6 			= '1450 2330 425';
		coop_vector_spawnOrigin5 			= '1520 2330 425';
		coop_vector_spawnOrigin4 			= '1450 2400 425';
		coop_vector_spawnOrigin3 			= '1520 2400 425';
		coop_vector_spawnOrigin2 			= '1450 2470 425';
		coop_vector_spawnOrigin1 			= '1520 2470 425';
	}
	else{
		coop_vector_spawnOrigin8 			= '-3120 2660 -1425';
		coop_vector_spawnOrigin7 			= '-3180 2660 -1425';
		coop_vector_spawnOrigin6 			= '-3240 2660 -1425';
		coop_vector_spawnOrigin5 			= '-3120 2730 -1425';
		coop_vector_spawnOrigin4 			= '-3180 2730 -1425';
		coop_vector_spawnOrigin3 			= '-3240 2730 -1425';
		coop_vector_spawnOrigin1 			= '-3120 2790 -1425';
		coop_vector_spawnOrigin2 			= '-3180 2790 -1425';
	}
//Set Tactical information, to be added at the Objectives hud
	coop_string_objectiveTacticalInfo1 = "YellowFieldInformation";
	coop_string_objectiveTacticalInfo2 = "GreenFieldInformation";
	coop_string_objectiveTacticalInfo3 = "BlueFieldInformation";
//Definie Objective
	coop_string_objectiveItem1			= "FindImod";
	coop_string_objectiveItem2			= "FindGenerator1";
	coop_string_objectiveItem3			= "FindGenerator2";
	coop_string_objectiveItem4			= "FindGenerator3";
//definie weapons
	coop_string_weapon1 = "models/weapons/worldmodel-IMod.tik";
	coop_string_weapon2 = "models/weapons/worldmodel-CompressionRifle.tik";
	coop_string_weapon3 = globalCoop_armory_weaponCheckWeaponAndReturnValid("models/weapons/worldmodel-Phaser.tik");
	coop_string_weapon4 = "models/weapons/worldmodel-Tricorder.tik";
//Start the Co-Op Script
	globalCoop_main();
	spawn("script_model","model","fx/fx-dummy.tik","targetname","coop_avoidAiGetStuckInDoorPit","origin","1519 2866 320");
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
//Set viewModes
	waitForPlayer();
	$world.clearAvailableViewModes();
	$world.addAvailableViewMode( "structuralintegrity" );
	if(!cvar_bool_multiplayer){//Singleplayer
		$player.model("models/char/munro_voyager.tik");//inizial at first or it fucks up
		playerDeathThread( "m1_playerDeathCinematic" );
	}
//keep the ai from wandering into the player spawn point
	globalCoop_teammate_register($telsia);
	globalCoop_teammate_register($chell);
	thread globalCoop_actor_aiOff($chell);
	thread globalCoop_actor_aiOff($telsia);

	thread init();

	thread Grate1_Wait();
	thread GreenField1Power_Wait();
	thread setup_plasmaConduits();
	//thread Plasma1_Wait();
	thread BorgSetup();
	//thread DisNode1_Wait();
	thread DisNode3_Wait();
	thread Generator3_Animate();
	thread Generator3FieldPower_Wait();
	thread SetupSounds();
	wait( .1 );

	$gen_archetype.contents( "targetable" );
	$gen_archetype.archetype ( "DampeningField" );
}

//-----------------------------------------------------------------
//-----------------------------------------------------------------
//  SETUP THREADS
//-----------------------------------------------------------------
//-----------------------------------------------------------------

//m1l2a to m1l2c
void initializeObjectives()
{
	if(!cvar_bool_multiplayer)
	{
		$chell.warp( '1439 2343 400' );
		$telsia.warp( '1543 2343 400' );
		$Group1Borg1Spawn.angle( 90 );
		$Group1Borg2Spawn.angle( 90 );
		$Group4Borg1Spawn.angle( 360 );
		$Group4Borg2Spawn.angle( 360 );
	}
}


//---------------------
// init
// do start up stuff
//---------------------
void init()
{
	wait (.1);
	$coop_avoidAiGetStuckInDoorPit.setsize('-20 -20 -20','20 20 0');
//spawn Class Selection
	if(cvar_bool_multiplayer)
	{
		if(getCvar("coop_lvlP") == "m1l2aTom1l2c"){
			thread globalCoop_class_setup("Medic",'1573 3240 390');
			thread globalCoop_class_setup("HeavyWeapons",'1573 3140 390');
			thread globalCoop_class_setup("Technician",'1573 3340 390');
			$Group1Borg1Spawn.angle( 90 );
			$Group1Borg2Spawn.angle( 90 );
			$Group4Borg1Spawn.angle( 360 );
			$Group4Borg2Spawn.angle( 360 );
		}
		else{
			$Group1Borg1Spawn.angle( 270 );
			$Group1Borg2Spawn.angle( 270 );
			$Group4Borg1Spawn.angle( 180 );
			$Group4Borg2Spawn.angle( 180 );
			GeneratorLevelComplete=1;
			thread globalCoop_class_setup("Medic",'-3090 3489 -1447');
			thread globalCoop_class_setup("HeavyWeapons",'-3090 3400 -1447');
			thread globalCoop_class_setup("Technician",'-3090 3338 -1447');
			thread setup_m1l2b_to_m1l2c();
			$PathGenerator1Field.remove();
			$chell.nodamage();
			$telsia.nodamage();
			$chell.warp( '-3120 3004 -1535' );
			$telsia.warp( '-3168 2876 -1535' );
		}
	}

	thread activateTeamAI();
	// globalCommon_SetupContextDialog  ( $chell , "chell" );
	// globalCommon_SetupContextDialog  ( $telsia , "telsia" );

	//--setup generator stuff
	$Generator3Sparks.hide();
	$Generator3ButtonTrigger.nottriggerable();
	$Generator3Trigger.nottriggerable();
	
	$m1l2c_exittrigger.nottriggerable();
	
	//--setup 2ndpath lift
	$SecondPathLift_ShortMoveDown2Trigger.nottriggerable();
	$SecondPathLiftTopClip.notsolid();
		
	if(!cvar_bool_multiplayer){//Singleplayer
		$SecondPathLiftCallVolume.requiredentity ( "chell" );
		$SecondPathLiftCallVolume.requiredentity ( "telsia" );
	}
	else{
		globalCoop_callVolume_replace($SecondPathLiftCallVolume,"SecondPathLift_Move");
		globalCoop_callVolume_addRequiredEntity($SecondPathLiftCallVolume,"telsia");
		thread globalCoop_callVolume_addRequiredEntity($SecondPathLiftCallVolume,"chell");
		globalCoop_puzzle_replace($Generator3Puzzle,"Generator3_TurnOff",20);
		$Generator3Puzzle.setFloatVar("globalCoop_puzzle_disabled",1);
	}
	// give teammates weapons
	$chell.useactorweapon ( "i-mod" );
	$telsia.useactorweapon ( "i-mod" );
	
	$Generator3FieldClip.movedown (136); //moves clip brush into position, allows node connection
	$PathGenerator1Field.movedown (136); //moves clip brush into position, allows node connection
	$PathGenerator1FieldPower_fx.hide();
	
	$chell.takedamage();
	$telsia.takedamage();
	
//--update objectives	
	thread m1l2bm1l2c_Objectives();
}


//---------------------
// setup_m1l2b_to_m1l2c
// setup the level when coming from m1l2b
//---------------------
void setup_m1l2b_to_m1l2c()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		GeneratorLevelComplete=1;
		$chell.warp( '-3120 3004 -1535' );
		$telsia.warp( '-3168 2876 -1535' );
		//--- remove the trigger exit
		$m1l2c_exittrigger.remove();
	
		//--- remove the trigger changelevel
		$triggerChangeLevel_m1l2c_to_m1l2b.remove();
		$PathGenerator1Field.remove();
		
		$Group1Borg1Spawn.angle( 270 );
		$Group1Borg2Spawn.angle( 270 );
		$Group4Borg1Spawn.angle( 180 );
		$Group4Borg2Spawn.angle( 180 );
		
	}
	if(getCvar("coop_lvlP") == "m1l2aTom1l2b"){
		//--- remove the trigger exit
		$m1l2c_exittrigger.remove();
		
		//--- remove the trigger changelevel
		$triggerChangeLevel_m1l2c_to_m1l2b.remove();
	}
}

//---------------------
// SetupSounds
// starts looping sounds for objects
//---------------------
void SetupSounds()
{
	$GreenField1.loopsound ( "sound/ships/borg/borg_forcefield1.wav", .5, 32 );
	$Generator3Field.loopsound ( "sound/ships/borg/borg_forcefield1.wav", .5, 32 );
	$PathGenerator1Field.loopsound ( "sound/ships/borg/borg_forcefield1.wav", .5, 32 );
}

void activateTeamAI()
{
	waitForPlayer();
	globalCoop_main_waitForWarmupTime();
	wait(1.1);
//activate ai now
	$chell.ai_on();
	$telsia.ai_on();
	$chell.allowfall(1);
	$telsia.allowfall(1);
}


//-----------------------------------------------------------------------------------------------
// Lifts and Misc
//------------------------------------------------------------------------------------------------
void coop_liftDownUpdateSpawn()
{	
	//--- release the cinematic
	if(cvar_bool_multiplayer){//Multiplayer
		if(coop_liftDown){
			return;
		}
		coop_liftDown = 1;
		coop_float_spawnAngle0 				= 90;
		coop_float_spawnAngle1 				= 90;
		coop_float_spawnAngle2 				= 90;
		coop_float_spawnAngle3 				= 90;
		coop_float_spawnAngle4 				= 90;
		coop_float_spawnAngle5 				= 90;
		coop_float_spawnAngle6 				= 90;
		coop_float_spawnAngle7 				= 90;
		coop_float_spawnAngle8 				= 90;
		coop_vector_spawnOrigin1 			= '1347 4680 -1490';
		coop_vector_spawnOrigin2 			= '1570 4610 -1490';
		coop_vector_spawnOrigin3 			= '1420 4610 -1490';
		coop_vector_spawnOrigin4 			= '1347 4610 -1490';
		coop_vector_spawnOrigin5 			= '1570 4537 -1490';
		coop_vector_spawnOrigin6 			= '1500 4537 -1490';
		coop_vector_spawnOrigin7 			= '1420 4537 -1490';
		coop_vector_spawnOrigin8 			= '1347 4537 -1490';
		thread globalCoop_level_moveToPos($coop_class_MedicModel,'1218 4905 -1599');
		thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'1218 4825 -1599');
		thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'1218 4729 -1599');
		thread globalCoop_applaySpawnOriginOnReSpwanOrigin();
	}
}

//---------------------
// SecondPathLift_Move
//---------------------
void SecondPathLift_Move()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		$SecondPathLiftTopClip.solid();
	}
	else{
		$SecondPathLiftClip.notsolid();
	}
	$chell.allowfall(1);
	$telsia.allowfall(1);
	$SecondPathLift.playsound( "sound/environment/machine/solanlift.wav", 8, 1, 1500 );
	$SecondPathLift.time ( 7 );
	$SecondPathLift.movedown ( 1916 );
	waitfor( $SecondPathLift );
	$SecondPathLift.playsound( "sound/environment/machine/solanlift_stop.wav", 8, 1, 1500 );
	$chell.ai_on();
	$telsia.ai_on();
	thread coop_liftDownUpdateSpawn();
}
//---------------------
// SecondPathLift_ShortMoveDown1
// Moves lift down to 2nd level and waits for player to jump on
//---------------------
void SecondPathLift_ShortMoveDown1()
{
	$chell.allowfall(1);
	$telsia.allowfall(1);
	$SecondPathLift.playsound( "sound/environment/machine/solanlift.wav", 8, 1, 1500 );
	$SecondPathLift.time (2);
	$SecondPathLift.movedown (504);
	waitfor ( $SecondPathLift );
	$SecondPathLift.playsound( "sound/environment/machine/solanlift_stop.wav", 8, 1, 1500 );
	$SecondPathLift_ShortMoveDown2Trigger.triggerable();
	$SecondPathLiftClip.notsolid();
	thread coop_liftDownUpdateSpawn();
}

//---------------------
// SecondPathLift_ShortMoveDown2
// Moves lift down to bottom
//---------------------
void SecondPathLift_ShortMoveDown2()
{
	$chell.allowfall(1);
	$telsia.allowfall(1);
	if(!cvar_bool_multiplayer){//Singleplayer
		$SecondPathLiftClip.solid();
	}
	else{
		$SecondPathLiftClip.notsolid();
	}
	$SecondPathLift.playsound( "sound/environment/machine/solanlift.wav", 8, 1, 1500 );
	$SecondPathLift.time (5);
	$SecondPathLift.movedown (1412);
	waitfor ( $SecondPathLift );
	$SecondPathLift.playsound( "sound/environment/machine/solanlift_stop.wav", 8, 1, 1500 );
	thread coop_liftDownUpdateSpawn();
}

//--------------------------------------------------------------------------------------------------
// Disnode and Plasma and Generic Shield Stuff
//--------------------------------------------------------------------------------------------------

//---------------------
// Grate1_Wait
//---------------------
void Grate1_Wait()
{
	$Grate1_fracture.notsolid();
	$Grate1_fracture.viewmode( "structuralintegrity" );
	$Grate1Damaged.hide();
	$Grate1Damaged.notsolid();
	$Grate1.ondamage ( "Grate1_Destroyed" );
	pause();
}

//---------------------
//Grate1_Destroyed
//---------------------
void Grate1_Destroyed()
{
	$Grate1.nodamage();
	$Grate1Spawn.modelname( "fx/fx-explosion-sparks-yellow.tik" );
	$Grate1Spawn.spawntargetname( "Grate1Explosion" );
	trigger( "$Grate1Spawn" );
	trigger( "$Grate1WallDamage" );
	$Grate1Spawn.remove();
	
	$Grate1.remove();
	$Grate1_fracture.remove();
	$Grate1Damaged.show();
	wait ( 1 );
	$Grate1Explosion.remove();
	//--warps teammates to lift for later
	thread SecondPathLift_Warp();
}


//---------------------
// GreenField1Power_Wait
//---------------------
void GreenField1Power_Wait()
{
	$GreenField1PowerDamaged.hide();
	$GreenField1PowerDamaged.notsolid();
	$GreenField1Power.ondamage ( "GreenField1Power_Destroyed" );
	$GreenField1Power.contents ( "+shootable" ); //---make this item shootable
	pause();
}

//---------------------
//GreenField1Power_Destroyed
//---------------------
void GreenField1Power_Destroyed()
{
	$GreenField1Power.nodamage();
	$GreenField1PowerSpawn.modelname( "fx/fx-explosion-fieldgenerator.tik" );
	$GreenField1PowerSpawn.spawntargetname( "GreenField1PowerExplosion" );
	trigger( "$GreenField1PowerSpawn" );
	$GreenField1PowerSpawn.remove();
	$GreenField1Power.remove();
	$GreenField1PowerDamaged.show();
	$GreenField1.stoploopsound ();
	$GreenField1.playsound ( "sound/ships/borg/borg_forcefield2_down.wav", 6, 1, 800 );

	$Group5Borg3.aggressive ( 1.0 );

	$GreenField1.hide();
	wait ( .1 );
	$GreenField1.show();
	wait ( .1 );
	$GreenField1.hide();
	wait ( .12 );
	$GreenField1.show();
	wait ( .1 );
	$GreenField1.hide();
	wait ( .14 );
	$GreenField1.show();
	wait ( .1 );
	$GreenField1.remove();
	$GreenField1Clip.remove();
	wait ( 1 );

	$GreenField1PowerExplosion.remove();
}

//---------------------
//  setup_plasmaConduits
//	setup for shootable plasma conduits
//---------------------
void setup_plasmaConduits()
{
	thread globalCommon_OnDamage( $plasmaConduit1, "destroyPlasmaConduit1" );
	$plasmaConduit1.contents( "+shootable" );
	$plasmaConduit1_fx.hide();
}

//---------------------
//  destroyPlasmaConduit1
//	destroy plasma conduit
//---------------------
void destroyPlasmaConduit1()
{
	trigger( "$plasmaConduit1_explode" );
	$plasmaConduit1.contents( "-shootable" );
	$plasmaConduit1.contents( "-targetable" );
	$plasmaConduit1.model( "enviro/borg-sphere_plasmacon_plasmacon_damaged.tik" );
	$plasmaConduit1_fx.show();
	$plasmaConduit1_fx.loopsound( "sound/environment/plasma/plasma_loop.wav", .3, 62 );
	
	thread Plasma1_Destroyed();
}
/*
//---------------------
// Plasma1_Wait
//---------------------
void Plasma1_Wait()
{
	$Plasma1Damaged.hide();
	$Plasma1.show();
	//$Plasma1Damaged.notsolid();
	//$Plasma1Damaged.contents ( "+shootable" );
	$Plasma1.contents( "+shootable" );	//--make this item shootable
	$Plasma1.contents( "targetable" ); 
	//$Plasma1.ondamage( "Plasma1_Destroyed" );
	thread globalCommon_OnDamage( $Plasma1, "Plasma1_Destroyed" );
	//pause();
}
*/
//---------------------
//Plasma1_Destroyed
//---------------------
void Plasma1_Destroyed()
{
	//$Plasma1.nodamage();
	//$Plasma1Spawn.modelname( "fx/fx-explosion-plasmacon-red.tik" );
	//$Plasma1Spawn.spawntargetname( "Plasma1Explosion" );
	//$Plasma1.model( "enviro/borg-sphere_plasmacon_plasmacon_damaged.tik" );
	//trigger( "$Plasma1Spawn" );
	trigger( "$Plasma1WallDamage" );
	//$Plasma1Spawn.remove();
	//$Plasma1.remove();
	//$Plasma1Damaged.show();
	//wait (.05);
	$Plasma1WallDamage.remove();
	wait ( 1 );
	//$Plasma1Explosion.remove();
	
	//--sets music mood
	music( "mystery", "normal" );

	wait ( 1 );
	// playing dialog
	globalCoop_dialog_play($chell,"borg02/chell_goback.mp3", 1, 8000, 1);
	//You can get a Medical deferment if I break your legs.
	globalCoop_dialog_play($telsia,"borg02/telsia_breaklegs.mp3", 1, 8000, 1);
}
/*
//---------------------
// DisNode1_Wait
// DisNode1 in secret area waiting for hit
//---------------------
void DisNode1_Wait()
{
	$DisNode1Damaged.hide();
	$DisNode1Damaged.notsolid();
	$DisNode1.ondamage ( "DisNode1_Destroyed" );
	$DisNode1.contents ( "+shootable" );	//---make this item shootable
	pause();
}

//---------------------
//DisNode1_Destroyed
//---------------------
void DisNode1_Destroyed()
{
	$DisNode1.nodamage();
	trigger ("$DisNode1GroupEvent");
	$DisNode1Spawn.modelname( "fx/fx-explosion-distnode.tik" );
	$DisNode1Spawn.spawntargetname( "DisNode1Explosion" );
	trigger( "$DisNode1Spawn" );
	wait (.1);
	$DisNode1Spawn.modelname( "fx/fx-sparkshower-yellow.tik" );
	$DisNode1Spawn.spawntargetname( "DisNode1Explosion" );
	trigger( "$DisNode1Spawn" );
	$DisNode1Spawn.remove();
	$DisNode1.remove();
	$DisNode1Damaged.show();
	wait ( 1 );
	$DisNode1Explosion.remove();

}
*/
//---------------------
// DisNode3_Wait
//---------------------
void DisNode3_Wait()
{
	$DisNode3Damaged.hide();
	$DisNode3Damaged.notsolid();
	$DisNode3.ondamage ( "DisNode3_Destroyed" );
	$DisNode1.contents ( "+shootable" );	//---make this item shootable
	pause();
}

//---------------------
//DisNode3_Destroyed
//---------------------
void DisNode3_Destroyed()
{
	$DisNode3.nodamage();
	trigger ("$DisNode3GroupEvent");
	$DisNode3Spawn.modelname( "fx/fx-explosion-distnode.tik" );
	$DisNode3Spawn.spawntargetname( "DisNode3Explosion" );
	trigger( "$DisNode3Spawn" );
	wait (.1);
	$DisNode3Spawn.modelname( "fx/fx-sparkshower-yellow.tik" );
	$DisNode3Spawn.spawntargetname( "DisNode3Explosion" );
	trigger( "$DisNode3Spawn" );
	$DisNode3Spawn.remove();
	$DisNode3.remove();
	$DisNode3Damaged.show();
	wait ( 1 );
	$DisNode3Explosion.remove();
	
	//another node vaporized
	globalCoop_dialog_play($chell,"borg02/chell_anothervapor.mp3", 1, 8000, 1);
}

//-------------------------------------------------------------------------------------------------------
// Generator Stuff
//-------------------------------------------------------------------------------------------------------

//---------------------
// Generator3_Sequence
// sequence to startup generator sequence, moving chell to his place
//---------------------
void Generator3_Sequence()
{

	if ( GeneratorLevelComplete == 0 )
	{
	//Look! One of the three generators.
		globalCoop_dialog_play($chell,"borg02/chell_lookone.mp3", 1, 8000, 1);
	//Shut it down, Chell.
		globalCoop_dialog_play(globalCoop_return_playerClosestPreferActive($chell),"borg02/munro_shutitdown2.mp3", 1, 8000, 1);
	}
	if ( GeneratorLevelComplete == 1 )
	{
	//the third generator!
		globalCoop_dialog_play($chell,"borg02/chell_thirdgen.mp3", 1, 8000, 1);
	}

	$chell.useactorweapon ( "tricorder" );
	wait ( .5 );
	$chell.ai_off();
	$chell.pushable ( 0 );
	$chell.walkto("$Generator3ChellWaypoint","run");
	waitfor($chell);
	$chell.anim("tricorder_idle");
	waitforanimation($chell,"tricorder_idle");
	wait ( .2 );
	$chell.anim( "tricorder_fire" );

	if ( GeneratorLevelComplete == 0 )
	{
		//It's resisting modulation. Munro, use your tricorder on the generator's panel. The two of us can put it into a degenerative feedback loop.
		globalCoop_dialog_play($chell,"borg02/chell_degen.mp3", 1, 8000, 1);
	}
	thread Generator3Modulated_Dialog();
	$Generator3ButtonTrigger.triggerable();
}

//---------------------
// Generator3_Animate
// makes generator1part animate, and turn off
//---------------------
void Generator3_Animate()
{
	if ( Generator3_On == 1 )
	{
		$Generator3Part.anim( "idle");
		$Generator3Part.loopsound ( "sound/ships/borg/borg_shieldgen.wav", 2, 475 );
		wait( 2 );
		thread Generator3_Animate();
	}
	if ( Generator3_On == 2 )
	{
		$Generator3Part.anim( "turnoff" ); //--need powerdown sound
		$Generator3Part.stoploopsound ();
		$Generator3Part.playsound ( "sound/ships/borg/borg_shieldgen_down.wav", 9, 2, 475 );
		wait( 1 );
		$Generator3Part.anim( "off" );
		wait( 1 );
		Generator3_On = 0;
	}
	else
	{
		wait( 2 );
	}
}

//---------------------
// Generator3FieldPower_Wait
// PowerCup for Generator3Field waiting for damage
//---------------------
void Generator3FieldPower_Wait()
{
	$Generator3FieldPowerDamaged.hide();
	$Generator3FieldPowerDamaged.notsolid();
	$Generator3FieldPower.contents ( "+shootable" );
	$Generator3FieldPower.ondamage ( "Generator3FieldPower_Destroyed" );
	pause();
}


//---------------------
// Generator3Button_Open
// Generator3's button opens up and waits for activation
//---------------------
void Generator3Button_Open()
{
	$Generator3.anim( "opening" );// need sound for panel opening
	$Generator3.playsound ( "sound/ships/borg/borg_shieldgen_open.wav", 1, 1, 375 );
	wait ( 2 );
	$Generator3.anim( "openoff" );
	if(!cvar_bool_multiplayer){//Singleplayer
		$Generator3Puzzle.puzzleobject_itemToUse ( "Tricorder" );
		$Generator3Puzzle.puzzleobject_itemUsedThread( "Generator3Button_Begin" );
		$Generator3Puzzle.puzzleobject_solvedThread( "Generator3_TurnOff" );
		$Generator3Puzzle.puzzleobject_failedThread( "Generator3Button_Reset" );
		$Generator3Puzzle.puzzleobject_canceledThread( "Generator3Button_Reset" );
		globalTricorderMod_SetNumWaves ( 1 );
		globalTricorderMod_SetAllRandomParms();
	}
	else{
		$Generator3Puzzle.setFloatVar("globalCoop_puzzle_disabled",0);
	}
}

void Generator3Button_Begin()
{
	Generator3Modulated = 1;
	globalTricorderMod_Run( $Generator3Puzzle, 0 );
}

void Generator3Button_Reset()
{
	$Generator3Puzzle.puzzleobject_reset ();	
}

//---------------------
// Generator3Button_Close
// makes generator1part animate, and turn off
//---------------------
void Generator3Button_Close()
{
	$Generator3.anim("closing");
	waitForAnimation ( $Generator3,"closing", 	0 );
	$Generator3.anim ("idle");
}

//---------------------
// Generator3_Turnoff
//---------------------
void Generator3_TurnOff()
{

//--update objectives
	fGeneratorBlown++;
	m1l2bm1l2c_Objectives();
	
	Generator3Modulated = 1;
	Generator3_On = 2;
	thread Generator3Button_Close();
	$chell.ai_on();
	$chell.pushable ( 1 );
	wait ( .1 );
	$chell.useactorweapon ( "i-mod" );

	$Generator3Spawn.modelname( "fx/fx-generatorvortex.tik" );
	$Generator3Spawn.spawntargetname( "Generator3Vortex" );
	trigger( "$Generator3Spawn" );
	wait ( 3 );
	$Generator3Sparks.show();
	$Generator3Sparks.loopsound ( "sound/environment/electric/fritz5.wav", .8, 152 );
	$Generator3Spawn.modelname( "fx/fx-explosion-generator-large.tik" );
	$Generator3Spawn.spawntargetname( "Generator3Explosion" );
	wait ( .1 );
	trigger( "$Generator3Spawn" );
	$Generator3Vortex.remove();
	$Generator3.playsound ( "sound/ships/borg/borg_shieldgen_close.wav", 1, 1, 75 );
	//$Generator3Button.playsound( "sound/environment/switches/switch_01.wav", 6, 1, 250 );
	//--remove archetype
	$gen_archetype.remove();
	
	GeneratorLevelComplete = getfloatvar( "game.m1l2_SecondLevelComplete" );

	//--checks to see which path you are taking through the level and plays correct dialog
	if(getCvar("coop_lvlP") == "m1l2aTom1l2c"){
		//--sets music mood
		music( "success", "normal" );
		//--stop chell prior dialog
		$chell.stopdialog();
		killthread( "Generator3Modulated_Dialog" );
		thread PathGenerator1FieldPower_Destroyed();
		wait( 2 );
		//Generator deactivated.
		globalCoop_dialog_play($chell,"borg02/chell_gendeact.mp3", 1, 20000, 1);
		wait( 1.5 );
		//Time is running short. Find the remaining two generators.
		globalCoop_dialog_play($tuvok,"borg02/tuvok_timeshort.mp3", 1, 20000, 1);
		
		setfloatvar ( "game.m1l2_SecondLevelComplete", 1 );
		if(!cvar_bool_multiplayer){//Singleplayer
			$m1l2c_exittrigger.triggerable();
		}
		else{
			spawn("trigger_once","origin","-3168 2976 -1436","thread","coop_endLevel","targetname","coop_triggerEndLevel");
			wait(.2);
			$coop_triggerEndLevel.setSize('-100 -100 -64','100 100 128');
		}
		setfloatvar( "game.borgGenerator1Objective", 2 );
	}
	else{
		// sets music mood
		music( "aux1", "normal" );
		//$player.setobjectivecomplete( "FindGenerator3", 1 );
		setfloatvar( "game.borgGenerator3Objective", 2 );
		$chell.ai_off();
		wait ( 1 );
		thread EndingCinematic();
	}
}

//---------------------
// Generator3Modulated_Dialog
// Chell checks to see if you've started modulating yet, and says something if you haven't
//---------------------

void Generator3Modulated_Dialog()
{
	wait ( 20 );

	if (( Generator3Modulated == 0 ) && ( Generator3_On == 1 ))
		{
			if ( GeneratorLevelComplete == 0 )
			{
			//Munro? Use your tricorder on the generator's panel.
				globalCoop_dialog_play($chell,"borg02/chell_tryloop.mp3", 1, 8000, 1);
			//The panel is located just in front of the generator.
				globalCoop_dialog_play($chell,"borg02/chell_locate.mp3", 1, 8000, 1);
			}
			else
			{
			//Munro? Use your tricorder to help trigger a feedback loop.
				globalCoop_dialog_play($chell,"borg02/chell_munroneed.mp3", 1, 8000, 1);
			}
		}	
}

//---------------------
// PathGenerator1FieldPower_Destroyed
// PowerCup blows up and removes green forcefield
//---------------------
void PathGenerator1FieldPower_Destroyed()
{
	$PathGenerator1FieldPower.nodamage();
	$PathGenerator1Field.stoploopsound();
	$PathGenerator1FieldPowerSpawn.modelname( "fx/fx-explosion-fieldgenerator.tik" );
	$PathGenerator1FieldPowerSpawn.spawntargetname( "PathGenerator1FieldPowerExplosion" );
	trigger( "$PathGenerator1FieldPowerSpawn" );
	$PathGenerator1FieldPowerSpawn.remove();
	$PathGenerator1FieldPower.remove();
	$PathGenerator1FieldPower.model( "enviro/borg-sphere_powercup_powercup_damaged.tik" );
	//$PathGenerator1FieldPowerDamaged.show();
	$PathGenerator1FieldPower_fx.show();
	wait ( 1 );
	$PathGenerator1FieldPowerExplosion.remove();
	$PathGenerator1Field.remove();
}


//----------------------------------------------------------------------------------------------
// AI AND SPAWNING STUFF
//----------------------------------------------------------------------------------------------

//---------------------
// SecondPathLift_Warp
// Warps teamates to lift
//---------------------
void SecondPathLift_Warp()
{
	// corals ai in to prevent them from wandering off the lift up top.
	$SecondPathLiftTopClip.solid();

	$chell.ai_off();
	$chell.warpto ( "$SecondPathLiftWaypoint_Chell" );
	//$Chang.ai_off();
	//$Chang.warpto ( "$SecondPathLiftWaypoint_Chang" );

	$telsia.ai_off();
	$telsia.warpto ( "$SecondPathLiftWaypoint_Telsia" );
	wait( .1 );
	$telsia.ai_on();
	
	wait (.1);
	$chell.ai_on();
	//$Chang.ai_on();
}

//---------------------
// BorgSetup
// makes borg hibernate and stuff
//---------------------
void BorgSetup()
{

	$Group1Borg3.settendency( "hibernate" , 1.0 );
	$Group1Borg4.settendency( "hibernate" , 1.0 );

	$Group2Borg1.settendency( "hibernate" , 1.0 );
	$Group2Borg2.settendency( "hibernate" , 1.0 );
	$Group2Borg3.settendency( "hibernate" , 1.0 );
	$Group2Borg4.settendency( "hibernate" , 1.0 );

	$Group3Borg1.settendency( "hibernate" , 1.0 );
	$Group3Borg2.settendency( "hibernate" , 1.0 );
	$Group3Borg3.settendency( "hibernate" , 1.0 );
	$Group3Borg4.settendency( "hibernate" , 1.0 );

	$Group5Borg3.settendency( "work" , 1.0 );

}


//---------------------
// Group1_Spawn1
// Spawns 2 borg in front of players in bridge looking area
//---------------------

void Group1_Spawn1()
{
	$Group1Borg1Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	$Group1Borg2Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	wait (.1);

	//--- set the spawn effect on the spawner
	$Group1Borg1Spawn.spawneffectname( "TransportIn", "Borg" );
	$Group1Borg2Spawn.spawneffectname( "TransportIn", "Borg" );

	//--- spawn the guys
	trigger ( "$Group1Borg1Spawn" );
	trigger ( "$Group1Borg2Spawn" );

	wait( .2 );

	//--- make the guys stupid for a second
	$Group1Borg1.ai_off ();
	$Group1Borg2.ai_off ();

	// remove clips keeping sidekicks from going to borg spawn spots

	$Group1Borg1.groupnumber (1);
	$Group1Borg2.groupnumber (1);

	//--- turn the AI on
	wait ( 1 );
	$Group1Borg1.ai_on ();
	$Group1Borg1.aggressive( 1 );

	$Group1Borg2.ai_on ();
	$Group1Borg2.aggressive( 1 );
}


//---------------------
// Group4_Spawn1
// Spawns 2 borg in front of players in bridge looking area
//---------------------

void Group4_Spawn1()
{
	$Group4Borg1Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	$Group4Borg2Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	wait (.1);

	//--- set the spawn effect on the spawner
	$Group4Borg1Spawn.spawneffectname( "TransportIn", "Borg" );
	$Group4Borg2Spawn.spawneffectname( "TransportIn", "Borg" );

	//--- spawn the guys
	trigger ( "$Group4Borg1Spawn" );
	trigger ( "$Group4Borg2Spawn" );

	globalCoop_dialog_play($chell,"borg02/chell_watchout.mp3", 1, 8000, 1);//Watch out!
	globalCoop_dialog_play($telsia,"borg02/telsia_incomingdrones.mp3", 1, 8000, 1);//Incoming drones!
	
	//--- make the guys stupid for a second
	$Group4Borg1.ai_off ();
	$Group4Borg2.ai_off ();

	//--remove clips keeping sidekicks from going to borg spawn spots

	$Group4Borg1.groupnumber( 4 );
	$Group4Borg2.groupnumber( 4 );

	//--- turn the AI on
	wait ( 1 );
	$Group4Borg1.ai_on ();
	$Group4Borg1.aggressive( 1 );

	$Group4Borg2.ai_on ();
	$Group4Borg2.aggressive( 1 );
}



//---------------------
// Group5_Spawn1
// Spawns 2 borg in front of players at upper lift
//---------------------

void Group5_Spawn1()
{
	$Group5Borg1Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	$Group5Borg2Spawn.playsound ( "sound/environment/transporter/transport2.WAV", 1, .5, 250 );
	wait (.1);

	//--- set the spawn effect on the spawner
	$Group5Borg1Spawn.spawneffectname( "TransportIn", "Borg" );
	$Group5Borg2Spawn.spawneffectname( "TransportIn", "Borg" );

	//--- spawn the guys
	trigger ( "$Group5Borg1Spawn" );
	trigger ( "$Group5Borg2Spawn" );
	wait( .2 );
	//--- make the guys stupid for a second
	$Group5Borg1.ai_off ();
	$Group5Borg2.ai_off ();

	//--remove clips keeping sidekicks from going to borg spawn spots
	
	$Group5Borg1.groupnumber( 5 );
	$Group5Borg2.groupnumber( 5 );
	//--- turn the AI on
	wait ( 1 );
	$Group5Borg1.ai_on ();
	$Group5Borg1.aggressive( 1 );
	$Group5Borg2.ai_on ();
	$Group5Borg2.aggressive( 1 );
}

//---------------------
// Group1_Active
// makes groupnumber 1 aggressive
//---------------------
void Group1_Active()
{
	$Group1Borg4.aggressive ( 1 );
	wait (  .3 );
	$Group1Borg3.aggressive ( 1 );

}

//---------------------
// Group2_Active
// makes groupnumber 2 aggressive
//---------------------
void Group2_Active()
{
	$Group2Borg1.aggressive ( 1 );
	wait (.2);
	$Group2Borg2.aggressive ( 1 );
	$Group2Borg3.aggressive ( 1 );
	wait (.2);
	$Group2Borg4.aggressive ( 1 );

}

//---------------------
// Group3_Active
// makes groupnumber 2 aggressive
//---------------------
void Group3_Active()
{
	$Group3Borg1.aggressive ( 1 );
	wait ( .2 );
	$Group3Borg2.aggressive ( 1 );
	$Group3Borg3.aggressive ( 1 );
	wait ( .2 );
	$Group3Borg4.aggressive ( 1 );

}

//---------------------
// LevelEnd
// spawns trigger changelevel
//---------------------
void LevelEnd()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		spawn ( "trigger_changelevel", "targetname", "trigger_endlevel", "map", "m1l3-borg_boss" );
		wait ( .5 );
		trigger ( "$trigger_endlevel" );
	}
	else{
		thread coop_endLevel();
	}
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	string sNextMap;
	sNextMap = "m1l3-borg_boss";
	coop_vector_svnextmaporrebootDoloadnextmimapWaitingForTeam_y=1;//allow loading next mission on timeranout	
//FIND THE TWO OTHERS
	if(getCvar("coop_lvlP") == "m1l2aTom1l2c"){
		sNextMap = "m1l2b-borg_sphere";
	//WAIT FOR TEAM, LOAD NEXT MAP!
		globalCoop_main_waitForTeam('-3157 2946 -1390','-450 -450 -200','450 450 200');
		thread globalCoop_mission_completed(sNextMap);
		return;
	}
//ALL 3 ARE OFF NOW
	thread globalCoop_mission_completed(sNextMap);
}



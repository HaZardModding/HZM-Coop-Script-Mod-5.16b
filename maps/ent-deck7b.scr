//-----------------------------------------------------------------
//
//  EF2 Level Script File
//
//  Level:	      ent-deck7b - Enterprise Deck 7b - Hazard Team Areas, Shuttle Bay
//  Script By:    Luke W.,Kenny T
//  Geometry By:  Adam B., Kenny T., Benson R.
//  Created on:   07/08/2002
//  Last Edited:  09/22/2002 - Benson R
//-----------------------------------------------------------------

void main();
void init();
void otherShuttlesSetup();
void enterpriseSetup();

void checkMissionNumber();
void justLoadedDeckThread();

void killAllTalking();

void threadBayDoorLeft();
void threadBayDoorCenter();
void threadBayDoorRight();

void openLeftShuttleBayDoor();
void closeLeftShuttleBayDoor();

void openCenterShuttleBayDoor();
void closeCenterShuttleBayDoor();

void openRightShuttleBayDoor();
void closeRightShuttleBayDoor();

void openSkyPortal();
void closeSkyPortal();

void changeElevatorState();

void coop_endLevel();

//-----------------------------------------------------------
//-----------------------------------------------------------
//--- variables

float currentDeck = 72;
float missionEnterprise = 0;
float developerMode = 0;

float okToCloseSkyPortal = 0;

float elevator1IsUp = 1;
float elevator2IsUp = 1;
float elevator3IsUp = 1;
float elevator4IsUp = 1;

float bayDoorLeftIsOpen = 0;
float bayDoorCenterIsOpen = 0;
float bayDoorRightIsOpen = 0;
string sNextLevelToLoadForCoop;

//-----------------------------------------------------------------
//-----------------------------------------------------------------
//  INCLUDES
//-----------------------------------------------------------------
//-----------------------------------------------------------------

//Co-op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/maps/igm_main.scr"
#include "coop_mod/maps/global/global_common.scr"
#include "coop_mod/maps/global/igm_dialog.scr"
#include "coop_mod/maps/missions/igm_common/igm_turbolift.scr"
#include "coop_mod/maps/optional_modules/puzzles.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "maps/global_scripts/global_debugUtils.scr"
#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_shuttles.scr"
#include "maps/global_scripts/global_archetype.scr"

#include "maps/global_scripts/global_tricorderBase.scr"
#include "maps/global_scripts/global_tricorderMod.scr"

//#include "coop_mod/maps/missions/igm1/ent-deck7b-mission1.scr"
#include "coop_mod/maps/missions/igm2/ent-deck7b-mission2.scr"
#include "coop_mod/maps/missions/igm3/ent-deck7b-mission3.scr"
#include "coop_mod/maps/missions/igm4/ent-deck7b-mission4.scr"
#include "coop_mod/maps/missions/igm5/ent-deck7b-mission5.scr"
#include "coop_mod/maps/missions/igm6/ent-deck7b-mission6.scr"
#include "coop_mod/maps/missions/igm7/ent-deck7b-mission7.scr"
#include "coop_mod/maps/missions/igm8/ent-deck7b-mission8.scr"

//===================================================================================================================
// Main Stuff 
//===================================================================================================================
//---------------------
// main	
// do start up stuff
//---------------------
void main()
{
	$turboLift.sound_locked("");//stop deny sound to be played
	//--- hide skybox stuff
	$sky.rendereffects( "-skyorigin" );
	$world.entity_fade_dist( 800000 );
//Coop
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	coop_string_playerModelResetTiki = "models/char/munro_sf.tik";
	coop_string_nextMapToCheck	= "m4l1a-attrexian_station";//set the map we gona load next while we are in testmode
//Set spawnangles for this level
	coop_float_spawnAngle0		= 0;//SpawnOrigin0 Angle
	coop_float_spawnAngle1		= 44;//SpawnOrigin0 Angle
//spawnorigins, Spawn Players on those locations, at map start
	coop_vector_spawnOrigin1	= '-9699 -3579 0';
	coop_vector_spawnOrigin2	= '-9872 -3155 0';
	coop_vector_spawnOrigin3	= '-9823 -3108 0';
	coop_vector_spawnOrigin4	= '-9765 -3168 0';
	coop_vector_spawnOrigin5	= '-9818 -3219 0';
	coop_vector_spawnOrigin6	= '-9761 -3277 0';
	coop_vector_spawnOrigin7	= '-9702 -3220 0';
	coop_vector_spawnOrigin8	= '-9625 -3299 0';
//Setup the Set of Weapons for the players
	coop_string_weapon1			= "models/weapons/worldmodel-Tricorder-stx.tik";
//Start the Co-Op Script
	globalCoop_main();
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	missionEnterprise = getCvarInt("coop_igm");
	if(!cvar_bool_multiplayer){
		missionEnterprise=getfloatvar("game.globalMissionEnterprise");
	}
	if(missionEnterprise < 2){
		missionEnterprise=2;
		setfloatvar("game.globalMissionEnterprise",2);
	}
	init();
	if(!cvar_bool_multiplayer){//SinglePlayer
		waitforplayer();
		dontSaveOrientation();
		$player.health( 100 );
	}
	$world.clearAvailableViewModes();
	$world.addAvailableViewMode( "none" );
}

//---------------------
// init	
// nonthread init stuff
//---------------------
void init()
{
	//Turn Exit Triggers Off
	$triggerExit.nottriggerable();
	entTurboLiftSetup();
	globalCoop_main_waitAFrame();
	checkMissionNumber();
	globalCoop_main_waitAFrame();
	otherShuttlesSetup();
	globalCoop_main_waitAFrame();	
	enterpriseSetup();
	
	//Tricorder Puzzle setup
	$tricorderPuzzleShuttle.bind( $shuttleCenterOrigin );
		
	//Bind Archatype brush
	$shuttleConsoleArch.bind( $shuttleCenterOrigin );
	
	//Hide Object except on mission 2
	$shuttleBayObject.hide();
	$shuttleBayObject.notsolid();
	
	//Keep secret from being triggered on the wrong mission
	$shuttleSecret.nottriggerable();
	$shuttleSecretShip.hide();
	$shuttleSecretShip.notsolid();
	globalCoop_main_waitAFrame();
	
	//setup triggers to open bay doors
	$triggerBayDoorLeft.thread( "threadBayDoorLeft" );
	$triggerBayDoorCenter.thread( "threadBayDoorCenter" );
	$triggerBayDoorRight.thread( "threadBayDoorRight" );
	
	//Archetypes
	globalArchetype_Setup ( $elevatorButtonArchetype, "TurboLiftControls" );
	globalArchetype_Setup ( $triggerSuttleBayLiftCall1Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLiftCall11Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLift1Archetype, "ShuttleBayLift" );
	globalCoop_main_waitAFrame();
	
	
	globalArchetype_Setup ( $triggerSuttleBayLiftCall2Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLiftCall21Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLift2Archetype, "ShuttleBayLift" );
	globalCoop_main_waitAFrame();
	
	globalArchetype_Setup ( $triggerSuttleBayLiftCall3Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLiftCall31Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLift3Archetype, "ShuttleBayLift" );
	globalCoop_main_waitAFrame();
	
	globalArchetype_Setup ( $triggerSuttleBayLiftCall4Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLiftCall41Archetype, "ShuttleBayLift" );
	globalArchetype_Setup ( $triggerSuttleBayLift4Archetype, "ShuttleBayLift" );
	globalCoop_main_waitAFrame();
	
	globalArchetype_Setup ( $triggerBayDoorLeftArchetype, "ShuttleBayDoors" );
	globalArchetype_Setup ( $triggerBayDoorCenterArchetype, "ShuttleBayDoors" );
	globalArchetype_Setup ( $triggerBayDoorRightArchetype, "ShuttleBayDoors" );
	
	//Wait untill Archetype objects are created
	wait( 1 );
	$triggerSuttleBayLift1Archetype.bind( $suttleBayLift1 );
	$triggerSuttleBayLift2Archetype.bind( $suttleBayLift2 );
	$triggerSuttleBayLift3Archetype.bind( $suttleBayLift3 );	
	$triggerSuttleBayLift4Archetype.bind( $suttleBayLift4 );
}


void otherShuttlesSetup()
{
	vector originStash;
	
	//Bind and move Shuttle0
	originStash = $shuttleScriptOrigin0.getorigin();
	
	$shuttleDoors0.anim( "open_idle" );
	
	$shuttleExterior0.notsolid();
	$shuttleInterior0.notsolid();
	$shuttleIntDoorA0.notsolid();
	$shuttleIntDoorB0.notsolid();
	$shuttleDoors0.notsolid();
	$shuttleDoorClosedClip0.notsolid();
	
	$shuttleExterior0.origin( originStash );
	$shuttleInterior0.origin( originStash );
	$shuttleIntDoorA0.origin( originStash );
	$shuttleIntDoorB0.origin( originStash );
	$shuttleDoors0.origin( originStash );
	
	$shuttleClip0.bind( $shuttleScriptOrigin0 );
	$shuttleDoorClosedClip0.bind( $shuttleScriptOrigin0 );
	$shuttleDoorRampClip0.bind( $shuttleScriptOrigin0 );
	$shuttleExterior0.bind( $shuttleScriptOrigin0 );
	$shuttleInterior0.bind( $shuttleScriptOrigin0 );
	$shuttleIntDoorA0.bind( $shuttleScriptOrigin0 );
	$shuttleIntDoorB0.bind( $shuttleScriptOrigin0 );
	$shuttleDoors0.bind( $shuttleScriptOrigin0 );
	
	originStash = $shuttleStartOrigin0.getorigin();

	$shuttleScriptOrigin0.origin( originStash );
	globalCoop_main_waitAFrame();
	
	//Bind and move Shuttle1
	originStash = $shuttleScriptOrigin1.getorigin();
	
	$shuttleDoors1.anim( "open_idle" );
	
	$shuttleExterior1.notsolid();
	$shuttleInterior1.notsolid();
	$shuttleIntDoorA1.notsolid();
	$shuttleIntDoorB1.notsolid();
	$shuttleDoors1.notsolid();
	$shuttleDoorClosedClip1.notsolid();
	
	$shuttleExterior1.origin( originStash );
	$shuttleInterior1.origin( originStash );
	$shuttleIntDoorA1.origin( originStash );
	$shuttleIntDoorB1.origin( originStash );
	$shuttleDoors1.origin( originStash );
	
	$shuttleClip1.bind( $shuttleScriptOrigin1 );
	$shuttleDoorClosedClip1.bind( $shuttleScriptOrigin1 );
	$shuttleDoorRampClip1.bind( $shuttleScriptOrigin1 );
	$shuttleExterior1.bind( $shuttleScriptOrigin1 );
	$shuttleInterior1.bind( $shuttleScriptOrigin1 );
	$shuttleIntDoorA1.bind( $shuttleScriptOrigin1 );
	$shuttleIntDoorB1.bind( $shuttleScriptOrigin1 );
	$shuttleDoors1.bind( $shuttleScriptOrigin1 );
	
	originStash = $shuttleStartOrigin1.getorigin();

	$shuttleScriptOrigin1.origin( originStash );
	globalCoop_main_waitAFrame();
	
	//--- This is here to make the bound script pieces actually "move" into position
	//--- They will be in the original locaion if you don't do this
	$shuttleScriptOrigin0.time( .05 );
	$shuttleScriptOrigin0.moveUp( 5 );
	$shuttleScriptOrigin1.time( .05 );
	$shuttleScriptOrigin1.moveUp( 5 );
	waitfor( $shuttleScriptOrigin0 );
	
	$shuttleScriptOrigin0.time( .05 );
	$shuttleScriptOrigin0.moveDown( 5 );
	$shuttleScriptOrigin1.time( .05 );
	$shuttleScriptOrigin1.moveDown( 5 );
	waitfor( $shuttleScriptOrigin0 );
	
	//--- Only have 1 shuttle so....
	$shuttleScriptOrigin1.hide();
	$shuttleScriptOrigin0.hide();
	
	$shuttleClip1.notsolid();
	$shuttleClip0.notsolid();
	
	//--- Bind ShuttleBay Doors
	//$shuttleBayDoorOriginRight.time( .05 );
	//$shuttleBayDoorOriginRight.moveNorth( 256 );
	//$shuttleBayDoorOriginLeft.time( .05 );
	//$shuttleBayDoorOriginLeft.moveNorth( 256 );
	//waitfor( $shuttleBayDoorOriginRight );
	
	$shuttleBayDoorRight.bind( $shuttleStartOrigin1 );
	$shuttleBayDoorLeft.bind( $shuttleStartOrigin0 );
	
	$shuttleStartOrigin1.bind( $shuttleBayDoorOriginRight );	
	$shuttleStartOrigin0.bind( $shuttleBayDoorOriginLeft );
	globalCoop_main_waitAFrame();

	// Set values on the elevator entity
	string stringLiftName;
	string stringLiftTriggerName;
	string stringTriggerSuttleBayLiftCall;
	
	entity entityLiftName;
	entity entityLiftTriggerName;
	entity entityTriggerSuttleBayLiftCall;
	
	float x;
	//Debug Me
	for( x = 1; x == 4; x ++ )
	{
		stringLiftName = "shuttleBayLift" + x;
		stringLiftTriggerName = "triggerSuttleBayLift" + x;
		stringTriggerSuttleBayLiftCall = "triggerSuttleBayLiftCall" + x;
		wait( .05 );
		entityLiftName = getentity( "stringLiftName" );
		entityLiftTriggerName = getentity( "stringLiftTriggerName" );
		entityTriggerSuttleBayLiftCall = getentity( "stringTriggerSuttleBayLiftCall" );
		wait( .05 );
		entityLiftName.setfloatvar( "IsUp", 1 );
		entityTriggerSuttleBayLiftCall.setstringvar( "stringElevator", stringLiftName );
		entityTriggerSuttleBayLiftCall.thread( "changeElevatorState" );
		wait( .05 );
		entityLiftTriggerName.setstringvar( "stringElevator", stringLiftName );
		entityLiftTriggerName.thread( "changeElevatorState" );
		entityLiftTriggerName.bind( entityLiftName );
	}
	
	globalCoop_main_waitAFrame();
	
	// Set values on the elevator entity
	$suttleBayLift1.setfloatvar( "IsUp", 1 );
	$suttleBayLift2.setfloatvar( "IsUp", 1 );
	$suttleBayLift3.setfloatvar( "IsUp", 1 );
	$suttleBayLift4.setfloatvar( "IsUp", 1 );
	
	$triggerSuttleBayLiftCall1.setstringvar( "stringElevator", "suttleBayLift1" );
	$triggerSuttleBayLiftCall2.setstringvar( "stringElevator", "suttleBayLift2" );
	$triggerSuttleBayLiftCall3.setstringvar( "stringElevator", "suttleBayLift3" );
	$triggerSuttleBayLiftCall4.setstringvar( "stringElevator", "suttleBayLift4" );
	
	$triggerSuttleBayLiftCall1.thread( "changeElevatorState" );
	$triggerSuttleBayLiftCall2.thread( "changeElevatorState" );
	$triggerSuttleBayLiftCall3.thread( "changeElevatorState" );
	$triggerSuttleBayLiftCall4.thread( "changeElevatorState" );
	globalCoop_main_waitAFrame();

	$triggerSuttleBayLift1.setstringvar( "stringElevator", "suttleBayLift1" );
	$triggerSuttleBayLift2.setstringvar( "stringElevator", "suttleBayLift2" );
	$triggerSuttleBayLift3.setstringvar( "stringElevator", "suttleBayLift3" );
	$triggerSuttleBayLift4.setstringvar( "stringElevator", "suttleBayLift4" );

	$triggerSuttleBayLift1.thread( "changeElevatorState" );
	$triggerSuttleBayLift2.thread( "changeElevatorState" );
	$triggerSuttleBayLift3.thread( "changeElevatorState" );
	$triggerSuttleBayLift4.thread( "changeElevatorState" );
	globalCoop_main_waitAFrame();
	
	$triggerSuttleBayLift1.bind( $suttleBayLift1 );
	$triggerSuttleBayLift2.bind( $suttleBayLift2 );
	$triggerSuttleBayLift3.bind( $suttleBayLift3 );
	$triggerSuttleBayLift4.bind( $suttleBayLift4 );
	
}

////////////////////////////
// Set up external Enterprise
////////////////////////////
void enterpriseSetup()
{
	globalCoop_main_waitAFrame();
	globalCommon_SpawnScriptModel( "vehicle/enterprise-e-01b.tik", "enterpriseE1", '-11072 -20400 -392', 90 );
	globalCommon_SpawnScriptModel( "vehicle/enterprise-e-02.tik", "enterpriseE2", '-11072 -20400 -392', 90 );
	globalCommon_SpawnScriptModel( "vehicle/enterprise-e-03.tik", "enterpriseE3", '-11072 -20400 -392', 90 );
	globalCoop_main_waitAFrame();
	$enterpriseE2.scale( 60 );
	$enterpriseE1.scale( 60 );
	$enterpriseE3.scale( 60 );
	globalCoop_main_waitAFrame();
	$enterpriseE1.hide();
	$enterpriseE2.hide();
	$enterpriseE3.hide();
	$enterpriseE1.notsolid();
	$enterpriseE2.notsolid();
	$enterpriseE3.notsolid();
}



void checkMissionNumber()
{
	thread globalCoop_level_callReliably("setupMission"+missionEnterprise+"Deck7b");
	
	string stringSoundTrack;
	
	stringSoundTrack = "music/igm" + missionEnterprise + ".mus";
	//--- set the soundtrack
 	soundtrack( stringSoundTrack );
}

//---------------------
// justLoadedDeckThread	
// creats a trigger to call the approiate deckJustLoadedThreadIGMx thread
//---------------------
void justLoadedDeckThread()
{
	string deckJustLoadedThread;
	
	deckJustLoadedThread = ( "justLoadedDeckThreadIGM" + missionEnterprise );

	thread entTurboLiftCheck();
	
	waitforplayer();
	
	if( missionEnterprise == 4 )
	{
	
		if( getfloatvar( "game.IGM4GoToTelsia" ) >= 1 )
		{
			$player.loadobjectives("IGM4alt");		
		}
		else
		{
			$player.loadobjectives("IGM4");
		}
	}
	else if( missionEnterprise == 6 )
	{
		if( getfloatvar( "game.IGM6MeetTelsia" ) >= 1 )
		{
			$player.loadobjectives("IGM6alt");
		}
		else
		{
			$player.loadobjectives("IGM6");
		}
	}
	else $player.loadobjectives( "IGM" + missionEnterprise );
	
	//if( missionEnterprise == 1 ) thread justLoadedDeckThreadIGM1();
	if( missionEnterprise == 2 ) thread justLoadedDeckThreadIGM2();
	//if( missionEnterprise == 3 ) thread justLoadedDeckThreadIGM3();
	//if( missionEnterprise == 4 ) thread justLoadedDeckThreadIGM4();
	//if( missionEnterprise == 5 ) thread justLoadedDeckThreadIGM5();
	if( missionEnterprise == 6 ) thread justLoadedDeckThreadIGM6();
	//if( missionEnterprise == 7 ) thread justLoadedDeckThreadIGM7();
	//if( missionEnterprise == 8 ) thread justLoadedDeckThreadIGM8();
}

//---------------------
// killAllTalking
// This stops all talking on the level
//------------------------
void killAllTalking()
{
	$player.killalldialog();
}

void threadBayDoorLeft()
{
	$triggerBayDoorLeft.thread( "" );
	
	if( bayDoorLeftIsOpen == 0 )
	{
		openLeftShuttleBayDoor();
	}
	else if( bayDoorLeftIsOpen == 1 )
	{
		closeLeftShuttleBayDoor();
	}
	else
	{
		$triggerBayDoorLeft.playsound ( "sound/environment/computer/lcars_error.wav", 3, .5, 10000);
	}
	
	$triggerBayDoorLeft.thread( "threadBayDoorLeft" );
}

void threadBayDoorCenter()
{
	$triggerBayDoorCenter.thread( "" );

	if( bayDoorCenterIsOpen == 0 )
	{
		openCenterShuttleBayDoor();
	}
	else if( bayDoorCenterIsOpen == 1 )
	{
		closeCenterShuttleBayDoor();
	}
	else
	{
		$triggerBayDoorCenter.playsound ( "sound/environment/computer/lcars_error.wav", 3, .5, 10000);
	}
	
	$triggerBayDoorCenter.thread( "threadBayDoorCenter" );
}

void threadBayDoorRight()
{
	$triggerBayDoorRight.thread( "" );
	
	if( bayDoorRightIsOpen == 0 )
	{
		openRightShuttleBayDoor();
	}
	else if( bayDoorRightIsOpen == 1 )
	{
		closeRightShuttleBayDoor();
	}
	else
	{
		$triggerBayDoorRight.playsound ( "sound/environment/computer/lcars_error.wav", 3, .5, 10000);
	}
	
	$triggerBayDoorRight.thread( "threadBayDoorRight" );
}

//---------------------
//  Thread to open shuttle bay door
//
//---------------------
void openLeftShuttleBayDoor()
{
	bayDoorLeftIsOpen = 2;	
	
	okToCloseSkyPortal++;
	openSkyPortal();
	
	$shuttleBayDoorLeft.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );
	
	$shuttleBayDoorOriginLeft.time( 5 );
	$shuttleBayDoorOriginLeft.rotateYup( 22 );
	waitfor( $shuttleBayDoorOriginLeft );
	
	$shuttleBayDoorLeft.stoploopsound();
	$shuttleBayDoorLeft.playsound( "sound/doors/airlock_close01.wav", 10 ,1 ,10000 );
	
	bayDoorLeftIsOpen = 1;
}
//---------------------
//  Thread to close shuttle bay door
//
//---------------------
void closeLeftShuttleBayDoor()
{
	bayDoorLeftIsOpen = 2;

	$shuttleBayDoorLeft.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );
	
	$shuttleBayDoorOriginLeft.time( 5 );
	$shuttleBayDoorOriginLeft.rotateYdown( 22 );
	waitfor( $shuttleBayDoorOriginLeft );

	$shuttleBayDoorLeft.stoploopsound();
	$shuttleBayDoorLeft.playsound( "sound/doors/airlock_close01.wav", 10 ,1 ,10000 );

	okToCloseSkyPortal--;
	closeSkyPortal();
	
	bayDoorLeftIsOpen = 0;	
}

//---------------------
//  Thread to open shuttle bay door
//
//---------------------
void openCenterShuttleBayDoor()
{
	bayDoorCenterIsOpen = 2;

	okToCloseSkyPortal++;
	openSkyPortal();
	
	$shuttleBayDoorCenter.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );
	
	$shuttleBayDoorCenter.time( 5 );
	$shuttleBayDoorCenter.moveDown( 492 );
	waitfor( $shuttleBayDoorCenter );
	
	$shuttleBayDoorCenter.stoploopsound();
	$shuttleBayDoorCenter.playsound( "sound/doors/airlock_close01.wav", 11 ,1 ,10000 );
	
	bayDoorCenterIsOpen = 1;
}
//---------------------
//  Thread to close shuttle bay door
//
//---------------------
void closeCenterShuttleBayDoor()
{
	bayDoorCenterIsOpen = 2;
	
	$shuttleBayDoorCenter.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );

	$shuttleBayDoorCenter.time( 5 );
	$shuttleBayDoorCenter.moveUp( 492 );
	waitfor( $shuttleBayDoorCenter );

	$shuttleBayDoorCenter.stoploopsound();
	$shuttleBayDoorCenter.playsound( "sound/doors/airlock_close01.wav", 11 ,1 ,10000 );

	okToCloseSkyPortal--;
	closeSkyPortal();
	
	bayDoorCenterIsOpen = 0;
}

//---------------------
//  Thread to open shuttle bay door
//
//---------------------
void openRightShuttleBayDoor()
{
	bayDoorRightIsOpen = 2;

	okToCloseSkyPortal++;
	openSkyPortal();
	
	$shuttleBayDoorRight.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );
	
	$shuttleBayDoorOriginRight.time( 5 );
	$shuttleBayDoorOriginRight.rotateYdown( 22 );
	waitfor( $shuttleBayDoorOriginRight );
	
	$shuttleBayDoorRight.stoploopsound();
	$shuttleBayDoorRight.playsound( "sound/doors/airlock_close01.wav", 12 ,1 ,10000 );
	
	bayDoorRightIsOpen = 1;
}
//---------------------
//  Thread to close shuttle bay door
//
//---------------------
void closeRightShuttleBayDoor()
{
	bayDoorRightIsOpen = 2;
	
	$shuttleBayDoorRight.loopsound( "sound/doors/airlock_open01.wav", 1 ,10000 );

	$shuttleBayDoorOriginRight.time( 5 );
	$shuttleBayDoorOriginRight.rotateYup( 22 );
	waitfor( $shuttleBayDoorOriginRight );

	$shuttleBayDoorRight.stoploopsound();
	$shuttleBayDoorRight.playsound( "sound/doors/airlock_close01.wav", 12 ,1 ,10000 );

	okToCloseSkyPortal--;
	closeSkyPortal();
	
	bayDoorRightIsOpen = 0;
}

void openSkyPortal()
{
	if( okToCloseSkyPortal >= 1 )
	{
		$sky.rendereffects( "+skyorigin" );
		$enterpriseE1.show();
		$enterpriseE2.show();
		$enterpriseE3.show();
	}
}

void closeSkyPortal()
{
	if( okToCloseSkyPortal == 0 )
	{
		$sky.rendereffects( "-skyorigin" );
		$enterpriseE1.hide();
		$enterpriseE2.hide();
		$enterpriseE3.hide();
	}
}

void changeElevatorState()
{
	string stringElevatorTochange;
	entity entityElevatorTochange;
	entity entityActualElevator;
	
	float elevatorIsUp;
	
	//Get the currently used trigger
	entityElevatorTochange = getcurrententity();	
	
	//From the lift trigger, get the string of the lift to move  
	stringElevatorTochange = entityElevatorTochange.getstringvar( "stringElevator" );
	
	//turn that string into an entity
	entityActualElevator = getentity( stringElevatorTochange );
	
	//Get float from lift to see what state the elevator is in.
	elevatorIsUp = entityActualElevator.getfloatvar( "IsUp" );
	
	//Go if it is currently up
	if( elevatorIsUp == 1 )
	{
		//set variable letting us know that it is in motion
		entityActualElevator.setfloatvar( "IsUp", 2 );
	
		$player.playsound( "sound/environment/computer/lcars_yes.wav", 3, .5, 256);
		entityActualElevator.loopsound( "sound/ships/enterprise/ent_lift01.wav", 1 ,256 );
		
		entityActualElevator.time( 2 );
		entityActualElevator.moveDown( 218 );
		waitfor( entityActualElevator );
		
		entityActualElevator.stoploopsound();
		entityActualElevator.playsound( "sound/ships/enterprise/ent_lift01_stop.wav", 1 ,1 ,256 );
		
		//set variable letting us know that it is not up
		entityActualElevator.setfloatvar( "IsUp", 0 );
	}
	
	//Go if it is currently down
	else if( elevatorIsUp == 0 )
	{
		//set variable letting us know that it is in motion
		entityActualElevator.setfloatvar( "IsUp", 2 );
		
		$player.playsound( "sound/environment/computer/lcars_yes.wav", 3, .5, 256);
		entityActualElevator.loopsound( "sound/ships/enterprise/ent_lift01.wav", 1 ,256 );		
		
		entityActualElevator.time( 2 );
		entityActualElevator.moveUp( 218 );
		waitfor( entityActualElevator );
		
		entityActualElevator.stoploopsound();
		entityActualElevator.playsound( "sound/ships/enterprise/ent_lift01_stop.wav", 1 ,1 ,256 );
		
		//set variable letting us know that it is up
		entityActualElevator.setfloatvar( "IsUp", 1 );
	}
	else
	{
		$player.playsound ( "sound/environment/computer/lcars_error.wav", 3, .5, 256);
	}
	
	//Else it was in motion so do nothing
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	thread globalCoop_mission_completed(sNextLevelToLoadForCoop);
}


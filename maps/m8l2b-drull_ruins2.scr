//-----------------------------------------------------------------
//
//  EF2 Level Script File
//
//  Level:	  m8l2b-drull_ruins2
//  Script By:    J. Keehan, A. Bellefeuil, J. Hefty
//  Geometry By:  J. Keehan, A. Bellefeuil
//  Created on:   2/8/2002
//
//  Last Modified 8/23/2002 J.H.
//
//-----------------------------------------------------------------
//==============================================================================
//==============================================================================
//  DEFINE
//==============================================================================
//==============================================================================
void main();

//--setup functions
void setupAI();
void setupWorld();

//--game functions
void triggerPredatorDeath();
void connectLiftPathNodes();
void triggerBattleBegin();
void levelTransition();
void liftDown1();
void liftDoor1OpenLeft();
void liftDoor1OpenRight();
void liftDoor1CloseLeft();
void liftDoor1CloseRight();
void liftDoor2OpenLeft();
void liftDoor2OpenRight();
void liftUp1();
void lift1GateOpen();
void lift1GateClose();
void lift1Gate2Open();
void lift1Gate2Close();
void smallLiftDown();
void smallLift_DoorOpenLeft();
void smallLift_DoorOpenRight();
void endLiftDown();
void endLiftGateOpen();
void endLiftGateClose();
void endLiftDoor1OpenLeft();
void endLiftDoor1OpenRight();
void endLiftDoor2OpenLeft();
void endLiftDoor2OpenRight();
void endLiftUp();
void endLiftDoor1CloseLeft();
void endLiftDoor1CloseRight();
void endLiftDoor2CloseLeft();
void endLiftDoor2CloseRight();
void openSmallDoor7();

void gameEndRoomCleared();
void inaccessible_sound();
void secretpanel();
void seqlightsoff();

void secretRuneCheck();
void secretRuneFailed();
void secretRunePassed();
void secretStaffRecieved();
void coop_warpPlayers(vector vOrigin);
void coop_anglesPlayers(vector vAngles);

void liftDoor2CloseLeft();
void liftDoor2CloseRight();
void coop_endLevel();
void coop_lift1Activate();
void coop_liftDown1();
void coop_liftUp1();
float float_liftState;

//--variables
float hack = 0;		//the JJ hack-O-rama....which should be removed....but it'll probably ship with this hack.....*cough* *hack* *cough*....//FIX ME
float secretRuneCounter = 0;

entity cinematicArm_Predator;


//===================================================================================================================================================
//===================================================================================================================================================
//  INCLUDES
//===================================================================================================================================================
//===================================================================================================================================================
//Co-op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/maps/main.scr"
#include "coop_mod/maps/optional_modules/puzzles.scr"
#include "coop_mod/maps/optional_modules/teammate.scr"
#include "coop_mod/maps/optional_modules/replace.scr"
#include "coop_mod/maps/optional_modules/callVolume.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "maps/global_scripts/global_common.scr"
#include "maps/global_scripts/global_archetype.scr"
#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_cinematicFX.scr"
#include "maps/global_scripts/global_acceleratedMovement.scr"
#include "maps/global_scripts/global_debugUtils.scr"
#include "coop_mod/maps/global/global_flyin.scr"
#include "coop_mod/maps/missions/8/m8_drullDoors.scr"
#include "coop_mod/maps/missions/8/m8_alienCombat.scr"
#include "coop_mod/maps/missions/8/m8l2b_cin.scr"

//===================================================================================================================================================
//===================================================================================================================================================
//  MAIN
//===================================================================================================================================================
//===================================================================================================================================================

//---------------------
void main ()
//---------------------
{
	globalCoop_server_precacheSingleplayer();
	//--- set the soundtrack
	soundtrack( "music/m8l2b.mus" );
	
	//--- setup the level
 	thread setupAI();
	thread setupWorld();
	
//Co-Op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	coop_string_nextMapToCheck			= "m9l1a-klingon_base";//set the map we gona load next while we are in testmode
//Last Map of Mission 8, so we gona show the damn screen
	coop_bool_showMissionSucessHud		= 1;
//Set spawnangles for this level
	coop_float_spawnAngle0 				= 183;
//Definie Spawn spots
	coop_vector_spawnOrigin1 			= '-8882 3035 3';
	coop_vector_spawnOrigin2 			= '-8882 3125 3';
	coop_vector_spawnOrigin3 			= '-8812 3035 3';
	coop_vector_spawnOrigin4 			= '-8812 3125 3';
	coop_vector_spawnOrigin5 			= '-8722 3035 3';
	coop_vector_spawnOrigin6 			= '-8722 3125 3';
	coop_vector_spawnOrigin7 			= '-8652 3035 3';
	coop_vector_spawnOrigin8 			= '-8652 3125 3';
//Definie Objective
	coop_string_objectiveItem1			= "ProtectKrindo";
//Give each player a Item/weapon, the integer stands for the player-ID
	coop_string_weapon1 				= "models/weapons/worldmodel-attrex-rifle.tik";
	coop_string_weapon2					= "models/weapons/worldmodel-BurstRifle.tik";
	coop_string_weapon3 				= "models/weapons/worldmodel-Phaser-stx.tik";
	coop_string_weapon4 				= "models/weapons/worldmodel-sniperrifle.tik";
	coop_string_weapon5 				= "models/weapons/worldmodel-Tricorder-stx.tik";
	coop_string_weapon6 				= "models/weapons/worldmodel-FieldAssaultRifle.tik";

//Start the Co-Op Script
	globalCoop_main();
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	
//Wait For The Player To Be Ready
	waitforplayer();
	if(!cvar_bool_multiplayer){//Singleplayer
		$player.loadobjectives( "m8l2-drull_ruins2" );//--load objectives
		wait(.1);
		$krindo.missionobjective( 1 );
		$player.setobjectiveshow ( "ProtectKrindo", 1 );
	}
	thread globalCoop_objectives_update("incomplete",1,1);
}

//===================================================================================================================================================
//===================================================================================================================================================
//  SETUP FUNCTIONS
//===================================================================================================================================================
//===================================================================================================================================================

void setupAI()
{
	//--krindo
	$krindo.ai_off ();
	//$krindo.health ( 300 );
	$krindo.immortal( 1 );
	$krindo.mass( 9999999 );
	$krindo.anim( "ent-curvedconsole-gesture" );
	//$krindo.warpto ( "$krindoWorkPos1" );
	//$krindo.setstringvar ( "status" , "ready" );
	
	//--mission fails if krindo dies
	//$krindo.not_allowed_to_kill();
	
	//--- predator
	$predator.forcealpha( 1 );
	$predator.alpha( 0 );
	$predator.ai_off();
	$predator.contents( "-targetable" );
	$predator.notsolid();
	$predator.archetype ( "PredatorNoRadar" );
	$predator.rendereffects( "-shadow" );//turn off predator's shadow
	
	//--aliens in the upper areas
	$alienEndRoom1.setgroupid( 9 );
	$alienEndRoom2.setgroupid( 9 );
	$alienEndRoom1.groupDeathThread( "gameEndRoomCleared" );
	$basher_10.setgroupid( 10 );
	$basher_10.groupDeathThread( "openSmallDoor7" );
	
	$deadDrull_1.anim( "hunched_dead4" );
	$deadDrull_2.anim( "hunched_dead1" );
	$deadDrull_3.anim( "hunched_dead1" );
	$deadDrull_4.anim( "hunched_dead4" );
	$deadDrull_5.anim( "hunched_dead3" );
//	$deadDrull_6.anim( "hunched_dead2" );
	$deadDrull_7.anim( "hunched_dead3" );
	
	$alienEndRoom1.settendency ( "fakeattack" , 1.0 );
	$alienEndRoom2.settendency ( "fakeattack" , 1.0 );
	$alienChewer_1.settendency ( "fakeattack" , 1.0 );
}

void setupWorld()
{
	//--- setup the sky
	$sky.rendereffects( "+skyorigin" );
	$starDome.angles ( '45 0 0' );	

	//--world
	$world.entity_fade_dist( 8000 );
	$world.farplane_color( '.14 .13 .15' );
	$world.farplane( 6000 );
	$world.farplane_cull( 1 );
	
	//--lifts
	$liftClip.hide();
	$liftClip.notsolid();
	$endLiftClip.notsolid();
	$drull_endLift_gate.solid();
	$pathnodeClip1.remove();
	$drull_endLift.solid();
	$endLiftDoor1a.solid();
	$endLiftDoor1b.solid();
	$endLiftDoor2a.solid();
	$endLiftDoor2b.solid();
	//$predatorMonsterClip.solid();
	
	//--triggers
	$triggerCinematicArm_Predator_Start.nottriggerable();
	$triggerEndRoom_KrindoTerminal.nottriggerable();
	$liftUpTrigger.nottriggerable();
//	$endLiftUpTrigger.nottriggerable();
	$bigDoorTrigger1.nottriggerable();
	$triggerAlienAttack_1.nottriggerable();
	$drullSmallDoor7_trigger.nottriggerable();
	$shutSecretDoorTrigger.nottriggerable();
	
	//--archetype setups	
	globalArchetype_Setup ( $lift_control_archtype , "TriDrullLiftControl" );
	globalArchetype_Setup ( $lift_control2_archtype , "DrullLiftControl" );

	//--attach archetype to elevator switch
	$lift_control2_archtype.bind( $drull_lift3 );
	//--attach doors to first small elevator
	$liftDoorSide1a.bind( $drull_lift1 );
	$liftDoorSide1b.bind( $drull_lift1 );
	$liftDoorSide2a.bind( $drull_lift1 );
	$liftDoorSide2b.bind( $drull_lift1 );
	$endLiftDoor1a.bind( $drull_endLift );
	$endLiftDoor1b.bind( $drull_endLift );
	$endLiftDoor2a.bind( $drull_endLift );
	$endLiftDoor2b.bind( $drull_endLift );
	$drull_lift3_door1a.bind( $drull_lift3 );
	$drull_lift3_door1b.bind( $drull_lift3 );
	
	//--move the lifts into position
	$drull_lift1.time( .01 );
	$drull_lift1.moveUp( 2272 );
	waitFor( $drull_lift1 );
	$drull_endLift.time( .01 );
	$drull_endLift.moveUp( 2272 );
	waitFor( $drull_lift1 );
	
	//--secret panel setup
	$greenpanel.hide();
	$yellowpanel.hide();
	$finishpanel.hide();
	$secretStaff.notsolid();
	$secretStaffShip.hide();
	
	//--basherdoor stuff
	//$basherdoor_clip.notsolid();
	$basherdoor_after.hide();
	$basher_10.immortal( 1 );

	//--set ambien klaxon horn
	$klaxon1.loopsound ( "sound/ships/drull/drull_destruct.wav", 1.0, 1024);
	$klaxonBossRoom.loopsound ( "sound/ships/drull/drull_destruct.wav", 0.8, 1024);
	
	//--disconnect pathnodes for predator battle
/*	disconnectPathNodes( "$liftPathNode1", "$northPathNode1" );
	disconnectPathNodes( "$northPathNode1", "$liftPathNode1" );
	disconnectPathNodes( "$liftPathNode1", "$northPathNode2" );
	disconnectPathNodes( "$northPathNode2", "$liftPathNode1" );
	disconnectPathNodes( "$liftPathNode1", "$northPathNode3" );
	disconnectPathNodes( "$northPathNode3", "$liftPathNode1" );
	disconnectPathNodes( "$liftPathNode6", "$southPathNode1" );
	disconnectPathNodes( "$southPathNode1", "$liftPathNode6" );
	disconnectPathNodes( "$liftPathNode6", "$southPathNode2" );
	disconnectPathNodes( "$southPathNode2", "$liftPathNode6" );
	disconnectPathNodes( "$liftPathNode6", "$southPathNode3" );
	disconnectPathNodes( "$southPathNode3", "$liftPathNode6" );
*/	
	disconnectPathNodes( "$liftPathNode1", "$liftPathNode2" );
	disconnectPathNodes( "$liftPathNode2", "$liftPathNode1" );
	disconnectPathNodes( "$liftPathNode2", "$liftPathNode3" );
	disconnectPathNodes( "$liftPathNode3", "$liftPathNode2" );
	disconnectPathNodes( "$liftPathNode3", "$liftPathNode4" );
	disconnectPathNodes( "$liftPathNode4", "$liftPathNode3" );
	disconnectPathNodes( "$liftPathNode4", "$liftPathNode5" );
	disconnectPathNodes( "$liftPathNode5", "$liftPathNode4" );
	disconnectPathNodes( "$liftPathNode5", "$liftPathNode6" );
	disconnectPathNodes( "$liftPathNode6", "$liftPathNode5" );

	//--- setup the cinematic shuttle
	$shuttleSpace_Body.bind( $shuttleSpace_Origin );
	$shuttleSpace_Door.bind( $shuttleSpace_Origin );
	$shuttleSpace_Body.scale( .1 );
	$shuttleSpace_Door.scale( .1 );
	
	$shuttleSpace_Door.anim( "closed" );
	$drull_smalldoor6_portal.closeportal();
	
	if(cvar_bool_multiplayer){//Multiplayer
	//spawn Class Selection
		thread globalCoop_class_setup("Medic",'-9225 2709 3');
		thread globalCoop_class_setup("HeavyWeapons",'-9225 2631 3');
		thread globalCoop_class_setup("Technician",'-9225 2522 3');
	//Replace Stuff
		thread globalCoop_puzzle_replace($lift_control1,"liftDown1",10);
		globalCoop_callVolume_replace($endLiftTriggerVolume,"endLiftUp");
		thread globalCoop_callVolume_addRequiredEntity($endLiftTriggerVolume,"krindo");
		$endLiftTriggerVolume.setFloatVar("coop_callVolumeTriggerRange",200);
	}
}

//===================================================================================================================================================
//===================================================================================================================================================
//  GAME FUNCTIONS
//===================================================================================================================================================
//===================================================================================================================================================

void triggerPredatorDeath()
{
	$predatorMonsterClip.remove();//remove monster clip surrounding the end lift
	wait ( 5 );
	
	//I've successfully re-routed power to the lift control mechanism, lets get out of here!
	thread globalCoop_dialog_play($krindo,"m8l2/krindo_sucrt.mp3",1,100000,1);
	
	thread endLiftDown();
	wait( 4 );
	$krindo.walkto ( "$elevatorNode" , "run", 0, -1 );
	waitfor( $krindo );
	$krindo.walkto ( "$krindoSpecialPath" , "run", 0, -1 );
	waitfor( $krindo );
	//$krindo.walkto ( "liftPathNode1" , "run" );
	//waitfor( $krindo );
	//$krindo.walkto ( "liftPathNode2" , "run" );
	//waitfor( $krindo );
	//$krindo.walkto ( "liftPathNode3" , "run" );
	//waitfor( $krindo );
	$krindo.walkto ( "$liftPathNode4" , "run", 0, -1 );
	waitfor( $krindo ); 
	
	//$krindo.ai_on();
	//$krindo.setstringvar ( "status" , "ready" );
	//$predatorLift.triggerable();
}

void connectLiftPathNodes()
{
/*	connectPathNodes( "$liftPathNode1", "$northPathNode1" );
	connectPathNodes( "$northPathNode1", "$liftPathNode1" );
	connectPathNodes( "$liftPathNode1", "$northPathNode2" );
	connectPathNodes( "$northPathNode2", "$liftPathNode1" );
	connectPathNodes( "$liftPathNode1", "$northPathNode3" );
	connectPathNodes( "$northPathNode3", "$liftPathNode1" );
	connectPathNodes( "$liftPathNode6", "$southPathNode1" );
	connectPathNodes( "$southPathNode1", "$liftPathNode6" );
	connectPathNodes( "$liftPathNode6", "$southPathNode2" );
	connectPathNodes( "$southPathNode2", "$liftPathNode6" );
	connectPathNodes( "$liftPathNode6", "$southPathNode3" );
	connectPathNodes( "$southPathNode3", "$liftPathNode6" );
*/	
	connectPathNodes( "$liftPathNode1", "$liftPathNode2" );
	connectPathNodes( "$liftPathNode2", "$liftPathNode1" );
	connectPathNodes( "$liftPathNode2", "$liftPathNode3" );
	connectPathNodes( "$liftPathNode3", "$liftPathNode2" );
	connectPathNodes( "$liftPathNode3", "$liftPathNode4" );
	connectPathNodes( "$liftPathNode4", "$liftPathNode3" );
	connectPathNodes( "$liftPathNode4", "$liftPathNode5" );
	connectPathNodes( "$liftPathNode5", "$liftPathNode4" );
	connectPathNodes( "$liftPathNode5", "$liftPathNode6" );
	connectPathNodes( "$liftPathNode6", "$liftPathNode5" );
}

//---------------------
// gameEndRoomCleared
// when the aliens in the end room are defeated, set
// the trigger for the predator cinematic
//---------------------
void gameEndRoomCleared()
{
	//--set the trigger
	$triggerCinematicArm_Predator_Start.triggerable();
	$bigDoorTrigger1.triggerable();
	if(cvar_bool_multiplayer){//MultiPlayer
		$bigDoorTrigger1.setsize('-128 -128 -64','128 128 256');
		$bigDoorTrigger1.origin('-7029 1845 2100');
		coop_float_spawnAngle1 				= 360;
		coop_float_spawnAngle2 				= 360;
		coop_float_spawnAngle3 				= 360;
		coop_float_spawnAngle4 				= 360;
		coop_float_spawnAngle5 				= 360;
		coop_float_spawnAngle6 				= 360;
		coop_float_spawnAngle7 				= 360;
		coop_float_spawnAngle8 				= 360;
		coop_vector_spawnOrigin1 			= '-6492 1860 2200';
		coop_vector_spawnOrigin2 			= '-6492 1790 2200';
		coop_vector_spawnOrigin3 			= '-6392 1930 2200';
		coop_vector_spawnOrigin4 			= '-6392 1860 2200';
		coop_vector_spawnOrigin5 			= '-6392 1790 2200';
		coop_vector_spawnOrigin6 			= '-6292 1930 2200';
		coop_vector_spawnOrigin7 			= '-6292 1860 2200';
		coop_vector_spawnOrigin8 			= '-6292 1790 2200';
	//Relocate class selection
		thread globalCoop_level_moveToPos($coop_class_MedicModel,'-6815 2445 2048');
		thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-6715 2445 2048');
		thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-6615 2445 2048');
	//applay to respawn locations
		globalCoop_applaySpawnOriginOnReSpwanOrigin();
	}
}

void triggerBattleBegin()
{
	$predator.health((1801 * globalCoop_return_integerPlayersQuantity(1)));
	$predator.maxbosshealth((1801 * globalCoop_return_integerPlayersQuantity(1)));
	$predator.rendereffects( "+shadow" );
	$predator.archetype ( "Predator" );
	$predator.contents( "+targetable" );
	$predator.solid();
	$predator.fadein( 1 );
	$predator.updatebosshealth( 1, 1 );
	$predator.ai_on();
	$predator.attack( $player );
}

void levelTransition()
{
	thread cinematicShuttleFly();
}

void liftDown1()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		$lift_control_archtype.remove();//delete archetype after use
		$liftClip.solid();
	}
	else{
		$liftClip.notsolid();
	}
	
	$drull_lift1.playsound( "sound/environment/machine/lift4.wav", 8, 1.1, 1500 );
	globalAccelMove( $drull_lift1, '0 0 -2368', 7, "rampupdown", "" );
	$drull_lift1.playsound( "sound/environment/machine/lift4stop.wav", 8, 1.1, 1500 );
	$liftUpTrigger.triggerable();
	
	if(!cvar_bool_multiplayer){//Singleplayer
		$liftClip.notsolid();
	}
	
	thread lift1GateOpen();
	wait( 2 );
	
	thread liftDoor1OpenLeft();
	thread liftDoor1OpenRight();
}

void liftUp1()
{
	if(!cvar_bool_multiplayer)//Singleplayer
		$liftClip.solid();
		
	if(cvar_bool_multiplayer==1 && globalCoop_return_integerPlayersQuantity(0) >= 2)
		globalCoop_main_countDown("^5INFO^2: Lift starts in: ^5",10);
	
	wait( .5 );
	thread liftDoor1CloseLeft();
	thread liftDoor1CloseRight();
	wait( 2 ); //wait for doors to close		
	thread lift1GateClose();
	wait( 1 );
	$drull_lift1.playsound( "sound/environment/machine/lift4.wav", 8, 1, 1500 );
	globalAccelMove( $drull_lift1, '0 0 2368', 7, "rampupdown", "" );
	$drull_lift1.playsound( "sound/environment/machine/lift4stop.wav", 8, 1, 1500 );
	
	thread lift1Gate2Open();
	wait( 1.5 );
	thread liftDoor2OpenLeft();
	thread liftDoor2OpenRight();
//Spawn trigger to call lift
	if(cvar_bool_multiplayer){
	//Spawn lift call triggers
		wait(10);
		spawn("trigger_multiple","targetname","coop_tM_lift1_Call","origin","-10502 2951 20");//-10322 2845 70
		wait(.2);
		$coop_tM_lift1_Call.setsize('-168 -168 0','168 168 3000');
		$coop_tM_lift1_Call.thread("coop_lift1Activate");
		float_liftState = 2;
	}
}


void coop_lift1Activate()
{
entity eTrigger;
	eTrigger = getCurrentEntity();
	if(doesEntityExist(eTrigger))
	{
		entity eCaller;
		eCaller = eTrigger.getLastActivatingEntity();
		
		$coop_tM_lift1_Call.nottriggerable();
		if(globalCoop_check_entityValidPlayerTargetname(eCaller) == 1)
		{
			if(float_liftState == 1)
			{
				float_liftState = 3;
				coop_liftUp1();
				float_liftState = 2;
			}
			else if(float_liftState == 2)
			{
				float_liftState = 3;
				coop_liftDown1();
				float_liftState = 1;
			}
		}
		$coop_tM_lift1_Call.triggerable();
	}
}

void coop_liftDown1()
{
	if(cvar_bool_multiplayer){//Multiplayer
		wait( 1 );
		thread liftDoor2CloseLeft();
		thread liftDoor2CloseRight();
		wait( 2 ); //wait for doors to close
		thread lift1Gate2Close();
		wait( 1 );
		
		$drull_lift1.playsound( "sound/environment/machine/lift4.wav", 8, 1.1, 1500 );
		globalAccelMove( $drull_lift1, '0 0 -2368', 7, "rampupdown", "" );
		$drull_lift1.playsound( "sound/environment/machine/lift4stop.wav", 8, 1.1, 1500 );
		
		thread lift1GateOpen();
		wait( 2 );
		
		thread liftDoor1OpenLeft();
		thread liftDoor1OpenRight();
		wait(7);
	}
}

void coop_liftUp1()
{
	if(cvar_bool_multiplayer){//Multiplayer
		wait( 1 );
		thread liftDoor1CloseLeft();
		thread liftDoor1CloseRight();
		wait( 2 ); //wait for doors to close
		thread lift1GateClose();
		wait( 1 );
		$drull_lift1.playsound( "sound/environment/machine/lift4.wav", 8, 1, 1500 );
		globalAccelMove( $drull_lift1, '0 0 2368', 7, "rampupdown", "" );
		$drull_lift1.playsound( "sound/environment/machine/lift4stop.wav", 8, 1, 1500 );
		
		thread lift1Gate2Open();
		wait( 2 );
		
		thread liftDoor2OpenLeft();
		thread liftDoor2OpenRight();
		wait(7);
	}
}




void lift1GateOpen()
{
	$drull_lift1_gate.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	//globalAccelMove( $drull_lift1_gate, '0 0 348', 4, "rampupdown", "" );
	globalAccelMove( $drull_lift1_gate, '0 0 316', 4, "rampupdown", "" );
	$drull_lift1_gate.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}	

void lift1GateClose()
{
	$drull_lift1_gate.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	//globalAccelMove( $drull_lift1_gate, '0 0 -348', 4, "rampupdown", "" );
	globalAccelMove( $drull_lift1_gate, '0 0 -316', 4, "rampupdown", "" );
	$drull_lift1_gate.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}	

void lift1Gate2Open()
{
	$drull_lift1_gate2.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	//globalAccelMove( $drull_lift1_gate2, '0 0 412', 4, "rampupdown", "" );
	globalAccelMove( $drull_lift1_gate2, '0 0 380', 4, "rampupdown", "" );
	$drull_lift1_gate2.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}

void lift1Gate2Close()
{
	$drull_lift1_gate2.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	//globalAccelMove( $drull_lift1_gate2, '0 0 412', 4, "rampupdown", "" );
	globalAccelMove( $drull_lift1_gate2, '0 0 -380', 4, "rampupdown", "" );
	$drull_lift1_gate2.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}	

void liftDoor1OpenLeft()
{
	$liftDoorSide1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide1a, '0 -90 0', 2, "rampupdown", "" );
	$liftDoorSide1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor1OpenRight()
{
	$liftDoorSide1b.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide1b, '0 90 0', 2, "rampupdown", "" );
	$liftDoorSide1b.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor1CloseLeft()
{
	$liftDoorSide1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide1a, '0 90 0', 2, "rampupdown", "" );
	$liftDoorSide1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor1CloseRight()
{
	$liftDoorSide1b.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide1b, '0 -90 0', 2, "rampupdown", "" );
	$liftDoorSide1b.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor2OpenLeft()
{
	$liftDoorSide2a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide2a, '0 -90 0', 2, "rampupdown", "" );
	$liftDoorSide2a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor2OpenRight()
{
	$liftDoorSide2b.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide2b, '0 90 0', 2, "rampupdown", "" );
	$liftDoorSide2b.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor2CloseLeft()
{
	$liftDoorSide2a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide2a, '0 90 0', 2, "rampupdown", "" );
	$liftDoorSide2a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void liftDoor2CloseRight()
{
	$liftDoorSide2b.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $liftDoorSide2b, '0 -90 0', 2, "rampupdown", "" );
	$liftDoorSide2b.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void smallLiftDown()
{
	$lift_control2Trigger.nottriggerable();
	$lift_control2_archtype.remove();//delete the archetype after using the lift
	$drull_lift3.playsound( "sound/environment/machine/lift4.wav", 8, 1, 1500 );
	globalAccelMove( $drull_lift3, '0 0 -304', 4, "rampupdown", "" );
	$drull_lift3.playsound( "sound/environment/machine/lift4stop.wav", 8, 1, 1500 );
	wait( .5 );
	thread smallLift_DoorOpenLeft();
	thread smallLift_DoorOpenRight();
}

void smallLift_DoorOpenLeft()
{
	$drull_lift3_door1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $drull_lift3_door1a, '0 90 0', 2, "rampupdown", "" );
	$drull_lift3_door1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void smallLift_DoorOpenRight()
{
	globalAccelMove_Rotate( $drull_lift3_door1b, '0 -90 0', 2, "rampupdown", "" );
}

void endLiftDown()
{
	//$endLiftClip.solid();
	$drull_endLift.playsound( "sound/environment/machine/lift4.wav", 8, 1.5, 1500 );
	globalAccelMove( $drull_endLift, '0 0 -2360', 5, "rampupdown", "" );
	$drull_endLift.playsound( "sound/environment/machine/lift4stop.wav", 8, 1.5, 1500 );
	$endLiftUpTrigger.triggerable();
	$endLiftClip.notsolid();
	
	thread endLiftGateOpen();
	wait ( 2 );
	$inner_endLiftClip.solid();
	thread endLiftDoor1OpenLeft();
	thread endLiftDoor1OpenRight();
	thread endLiftDoor2OpenLeft();
	thread endLiftDoor2OpenRight();
	wait( .25 );
	thread connectLiftPathNodes();
}

void endLiftGateOpen()
{
	$drull_endLift_gate.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	globalAccelMove( $drull_endLift_gate, '0 0 380', 4, "rampupdown", "" );
	$drull_endLift_gate.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}	

void endLiftGateClose()
{
	$drull_endLift_gate.playsound( "sound/environment/metal/bigcreak.wav", 0, 1, 512 );
	globalAccelMove( $drull_endLift_gate, '0 0 -380', 4, "rampupdown", "" );
	$drull_endLift_gate.playsound( "sound/environment/metal/bigcreak_impact.wav", 0, 1, 512 );
}	

//--OPEN LIFT DOORS
void endLiftDoor1OpenLeft()
{
	$endLiftDoor1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $endLiftDoor1a, '0 90 0', 2, "rampupdown", "" );
	$endLiftDoor1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void endLiftDoor1OpenRight()
{
	globalAccelMove_Rotate( $endLiftDoor1b, '0 -90 0', 2, "rampupdown", "" );
	
}

void endLiftDoor2OpenLeft()
{
	$endLiftDoor2a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $endLiftDoor2a, '0 90 0', 2, "rampupdown", "" );
	$endLiftDoor2a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void endLiftDoor2OpenRight()
{
	globalAccelMove_Rotate( $endLiftDoor2b, '0 -90 0', 2, "rampupdown", "" );
}

void endLiftUp()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		//--- turn off the call volume trigger
		$endLiftTriggerVolume.nottriggerable();
	
		//--- wait until the player is near the center of the lift
		entity eDude;
		eDude = globalCoop_return_playerClosestPreferActive($drull_endLift);
		while( globalMath_GetXYDistance(eDude.getOrigin(), $drull_endLift.getOrigin() ) > 32 )
		{
			wait( .1 );
		}
		$endLiftClip.solid();
	}
	wait( .25 );
	thread endLiftDoor1CloseLeft();
	thread endLiftDoor1CloseRight();
	thread endLiftDoor2CloseLeft();
	thread endLiftDoor2CloseRight();
	wait( 2.0 );
	
	thread endLiftGateClose();
	
	wait( 1.5 );
	
	$drull_endLift.playsound( "sound/environment/machine/lift4.wav", 8, 1.0, 1500 );
	globalAccelMove( $drull_endLift, '0 0 2368', 7, "rampupdown", "" );
}
//--CLOSE LIFT DOORS
void endLiftDoor1CloseLeft()
{
	$endLiftDoor1a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $endLiftDoor1a, '0 -90 0', 2, "rampupdown", "" );
	$endLiftDoor1a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void endLiftDoor1CloseRight()
{
	globalAccelMove_Rotate( $endLiftDoor1b, '0 90 0', 2, "rampupdown", "" );
}

void endLiftDoor2CloseLeft()
{
	$endLiftDoor2a.playsound( "sound/environment/machine/mech_move1.wav", 8, 1, 1500 );
	globalAccelMove_Rotate( $endLiftDoor2a, '0 -90 0', 2, "rampupdown", "" );
	$endLiftDoor2a.playsound( "sound/environment/machine/mech_stop1.wav", 8, 1, 1500 );
}

void endLiftDoor2CloseRight()
{
	globalAccelMove_Rotate( $endLiftDoor2b, '0 90 0', 2, "rampupdown", "" );
}

//--inaccesable doors
void inaccessible_sound()
{
	entity e;
	e = getcurrententity();
	e.playsound( "sound/doors/door_locked.wav", 1, 1, 90 );
}

//--secretpanel
void secretpanel()
{
	$redpanel.remove();
	$greenpanel.playsound ( "sound/enviroment/switch/switch-01.wav", 0, 1, 500 ); //--temp sound -zak
	$greenpanel.show();
}

//--quake turns off lights
void seqlightsoff()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		$player.earthquake( .5, 2, 512 );
	}
	
	wait( .25 );
	globalCoop_actor_healthMultiplicatePerPlayer($lowerBasher1);
	globalCoop_actor_healthMultiplicatePerPlayer($lowerBasher2);
	$lowerBasher1.allowfall( 1 );
	$lowerBasher2.allowfall( 1 );	
	//$world.light_lightstyle( "lights_off1" , "a" , 0 );
	//$world.light_lightstyle( "lights_blink1" , "zzzzzzzzzzzzzzzzzzzzaaaaaaaaaaaaaaaaaaaazzzzzzzzzzzaaaaaaaaaaaaaaaa" , 0 );
}

//-- basher explosdes through door
void seqbasherdoor()
{
	if(!cvar_bool_multiplayer){//Singleplayer
		$player.earthquake( .5, 2, 512 );
	}
	else{
	//Set New re/Spawn Locations
		coop_vector_spawnOrigin8 			= '-9159 2980 2500';
		coop_vector_spawnOrigin7 			= '-9159 2880 2500';
		coop_vector_spawnOrigin6 			= '-9230 2980 2500';
		coop_vector_spawnOrigin5 			= '-9230 2880 2500';
		coop_vector_spawnOrigin4 			= '-9300 2980 2500';
		coop_vector_spawnOrigin3 			= '-9300 2880 2500';
		coop_vector_spawnOrigin2 			= '-9370 2980 2500';
		coop_vector_spawnOrigin1 			= '-9370 2880 2500';
	//Relocate class selection
		thread globalCoop_level_moveToPos($coop_class_MedicModel,'-9780 3539 2368');
		thread globalCoop_level_moveToPos($coop_class_HeavyWeaponsModel,'-9770 3645 2368');
		thread globalCoop_level_moveToPos($coop_class_TechnicianModel,'-9759 3754 2368');
		globalCoop_applaySpawnOriginOnReSpwanOrigin();
	}
	
	$basherdoor_after.show();
	$basherdoor_before.remove();
	$basher_10.show();
	$basher_10.warpTo( "$basherWarpToPos1" );
	$basher_10.walkTo( "$basher10_walkToPos", "run" );
	wait( 2 );
	
	globalCoop_actor_healthMultiplicatePerPlayer($basher_10);
	$basher_10.ai_on();
	$basher_10.solid();
	$basher_10.immortal( 0 );
	wait( 2 );
}
/*
void triggerAlienAttack_1()
{
	$alienEndRoom1.attack( $player );
	$alienEndRoom2.attack( $player );	
}
*/
void openSmallDoor7()
{
	globalCoop_actor_healthMultiplicatePerPlayer($alienEndRoom1);
	globalCoop_actor_healthMultiplicatePerPlayer($alienEndRoom2);
	globalCoop_actor_healthMultiplicatePerPlayer($alienEndRoom3);
	$drullSmallDoor7_trigger.triggerable();
}
//===================================================================================================================
// Secret Staff Functions
//===================================================================================================================

//---------------------
// Function: secretRuneCheck
// Comments:
// checks to see which rune was stepped on
//---------------------
void secretRuneCheck()
{
	entity caller , activator;

	caller = getCurrentEntity();
	activator = caller.getLastActivatingEntity();

	if( caller.getTargetName() == "$secretRune1_trigger" )
	{
		$redpanel.hide();
		$yellowpanel.show();
		$secretRune1_trigger.nottriggerable();
		secretRuneCounter++;
	}

	if( caller.getTargetName() == "$secretRune2_trigger" )
	{
		$secretRune2_trigger.nottriggerable();
		secretRuneFailed();
	}
	
	if( caller.getTargetName() == "$secretRune3_trigger" )
	{
		$secretRune3_trigger.nottriggerable();
		secretRuneFailed();
	}

	if( caller.getTargetName() == "$secretRune4_trigger" )
	{
		if( secretRuneCounter == 1 )
		{
			$yellowpanel.hide();
			$greenpanel.show();
			$secretRune4_trigger.nottriggerable();
			secretRuneCounter++;
		}
		else
		{
			$secretRune6_trigger.nottriggerable();
			secretRuneFailed();
		}
	}

	if( caller.getTargetName() == "$secretRune5_trigger" )
	{
		$secretRune5_trigger.nottriggerable();
		secretRuneFailed();
	}
	if( caller.getTargetName() == "$secretRune6_trigger" )
	{
		$secretRune6_trigger.nottriggerable();
		secretRuneFailed();
	}

	if( caller.getTargetName() == "$secretRune7_trigger" )
	{
		$secretRune7_trigger.nottriggerable();
		secretRuneFailed();
	}
	
	if( caller.getTargetName() == "$secretRune8_trigger" )
	{
		if( secretRuneCounter == 2 )
		{
			$secretRune8_trigger.nottriggerable();
			wait( 1 );
			secretRunePassed();
		}
		else
		{
			$secretRune8_trigger.nottriggerable();
			secretRuneFailed();
		}
	}

	if( caller.getTargetName() == "$secretRune9_trigger" )
	{
		$secretRune9_trigger.nottriggerable();
		secretRuneFailed();
	}

	if( caller.getTargetName() == "$secretRune10_trigger" )
	{
		$secretRune10_trigger.nottriggerable();
		secretRuneFailed();
	}
}

//---------------------
// Function: secretRuneFailed
// Comments:
//
//---------------------
void secretRuneFailed()
{
	secretRuneCounter = 0;

	$redpanel.show();
	$yellowpanel.hide();
	$greenpanel.hide();

	$secretRune1.close();
	$secretRune2.close();
	$secretRune3.close();
	$secretRune4.close();
	$secretRune5.close();
	$secretRune6.close();
	$secretRune7.close();
	$secretRune8.close();
	$secretRune9.close();
	$secretRune10.close();

	$secretRune1_trigger.triggerable();
	$secretRune2_trigger.triggerable();
	$secretRune3_trigger.triggerable();
	$secretRune4_trigger.triggerable();
	$secretRune5_trigger.triggerable();
	$secretRune6_trigger.triggerable();
	$secretRune7_trigger.triggerable();
	$secretRune8_trigger.triggerable();
	$secretRune9_trigger.triggerable();
	$secretRune10_trigger.triggerable();
}

//---------------------
// Function: secretRunePassed
// Comments:
//
//---------------------
void secretRunePassed()
{
	$secretRune_door.open( $player );
	$finishpanel.show();
	$startpanel.hide();
	
	music( "mystery" );

	$secretRune1_trigger.nottriggerable();
	$secretRune2_trigger.nottriggerable();
	$secretRune3_trigger.nottriggerable();
	$secretRune4_trigger.nottriggerable();
	$secretRune5_trigger.nottriggerable();
	$secretRune6_trigger.nottriggerable();
	$secretRune7_trigger.nottriggerable();
	$secretRune8_trigger.nottriggerable();
	$secretRune9_trigger.nottriggerable();
	$secretRune10_trigger.nottriggerable();

	$secretFxSpawner1.modelname( "fx/fx-beamsparkle-drull.tik" );
	$secretFxSpawner1.spawntargetname( "secretFxSpawned1" );
	triggerentity( $secretFxSpawner1 );
}

void shutSecretDoor()
{
	$secretRune_door.close();
}

//---------------------
// Function: secretStaffRecieved
// Comments:
//
//---------------------
void secretStaffRecieved()
{
	$secretStaff.hide();
	$secretFxSpawned1.hide();
	setfloatvar( "game.secretWeapon_IdryllStaff", TRUE );
	thread globalCoop_player_giveAll("models/weapons/worldmodel-drull-staff.tik",1);
	
	if(!cvar_bool_multiplayer){//Singleplayer
		$shutSecretDoorTrigger.triggerable();
	}
}


void coop_warpPlayers(vector vOrigin)
{
	entity ePlayer;
	float fPlayerIdInUse;
	while(1)
	{
		fPlayerIdInUse = 1;
		while(fPlayerIdInUse <= coop_integer_maxPlayers)
		{
			ePlayer = getentity("player"+ fPlayerIdInUse);
			if(doesEntityExist(ePlayer)){
				ePlayer.hide();
				ePlayer.immobilize(1);
				ePlayer.warp(vOrigin);
			}
			fPlayerIdInUse++;
			wait(.01);
		}
		wait(.1);
	}
}

void coop_anglesPlayers(vector vAngles)
{
	entity ePlayer;
	float fPlayerIdInUse;
	fPlayerIdInUse = 1;
	
	while(fPlayerIdInUse <= coop_integer_maxPlayers)
	{
		ePlayer = getentity("player"+ fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			ePlayer.playerviewangles(vAngles);
		}
		fPlayerIdInUse++;
		wait(.01);
	}
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	if(cvar_bool_multiplayer){
		stuffCMD("seta coop_igm 6\n");
	}else{
		setfloatvar("game.globalMissionEnterprise",6);
	}
	//igm6 - ent-deck8
	thread globalCoop_mission_completed("ent-deck8");
}


